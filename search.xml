<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>笔记：Testing, Validation, and Verification of Robotic and Autonomous Systems:A Systematic Review</title>
    <url>/2024/08/23/003/</url>
    <content><![CDATA[
[Testing, Validation, and Verification of Robotic and Autonomous Systems: A Systematic Review](https://dl.acm.org/doi/full/10.1145/3542945)

*作者是KCL的Hugo Araujo。*

`Abstraction`
> We perform a systematic literature review on testing, validation, and verification of robotic and autonomous systems (RAS). The scope of this review covers peer-reviewed research papers proposing, improving, or evaluating testing techniques, processes, or tools that address the system-level qualities of RAS.
Our survey is performed based on a rigorous methodology structured in three phases. First, we made use of a set of 26 seed papers (selected by domain experts) and the SERP-TEST taxonomy to design our search query and (domain-specific) taxonomy. Second, we conducted a search in three academic search engines and applied our inclusion and exclusion criteria to the results. Respectively, we made use of related work and domain specialists (50 academics and 15 industry experts) to validate and refine the search query. As a result, we encountered 10,735 studies, out of which 195 were included, reviewed, and coded.
> Our objective is to answer four research questions, pertaining to (1) the type of models, (2) measures for system performance and testing adequacy, (3) tools and their availability, and (4) evidence of applicability, particularly in industrial contexts. We analyse the results of our coding to identify strengths and gaps in the domain and present recommendations to researchers and practitioners.
> Our findings show that variants of temporal logics are most widely used for modelling requirements and properties, while variants of state-machines and transition systems are used widely for modelling system behaviour. Other common models concern epistemic logics for specifying requirements and belief-desireintention models for specifying system behaviour. Apart from time and epistemics, other aspects captured in models concern probabilities (e.g., for modelling uncertainty) and continuous trajectories (e.g., for modelling vehicle dynamics and kinematics).
> Many papers lack any rigorous measure of efficiency, effectiveness, or adequacy for their proposed techniques, processes, or tools. Among those that provide a measure of efficiency, effectiveness, or adequacy, the majority use domain-agnostic generic measures such as number of failures, size of state-space, or verification time were most used. There is a trend in addressing the research gap in this respect by developing domainspecific notions of performance and adequacy. Defining widely accepted rigorous measures of performance and adequacy for each domain is an identified research gap.
> In terms of tools, the most widely used tools are well-established model-checkers such as Prism and Uppaal, as well as simulation tools such as Gazebo; Matlab/Simulink is another widely used toolset in this domain.
> Overall, there is very limited evidence of industrial applicability in the papers published in this domain.
> There is even a gap considering consolidated benchmarks for various types of autonomous systems.

## Introduction

### Motivation-1

Robotic and Autonomous Systems (RAS)机器人和自主系统。本论文涵盖了RAS的广度和系统性二次研究的调研，并对结果进行分析。

### Scope and Audience

受众：研究者和从业者。所调研的RAS研究的范围。

### Research Questions

几个关键名词的含义，包括types of models, efficiency, effectiveness, coverage measures, (public available) tools, evidence of applicability。

### Structure of the Article

本文的其余部分结构如下：在第 2 部分中，我们回顾了相关工作，重点关注相关主题的二手研究（文献调查和评论）。在第 3 部分中，我们定义了本文的范围并解释了此结构化综述的背景。在那里，我们报告了我们开始研究的核心结果集，作为我们搜索的种子，以形成研究。在第 4 部分中，我们回顾了我们用于系统评价的方法；这包括我们的搜索和选择策略的描述、用于编码结果的分类法的开发、我们的数据提取和综合方法。在本节中，我们还反思了对我们研究的威胁。在第 5 部分中，我们展示了我们的编码结果并对其进行分析以回答我们的研究问题。在第 6 部分中，我们反思了我们的分析并为目标受众（即研究人员和从业人员）提供了具体的建议。在第 7 部分中，我们总结了本文并提出了一些未来研究的方向。

## Related Work

[[55]](#55)这项研究的目标是为机器人软件开发人员提供提示，帮助他们根据感兴趣的属性和软件系统选择合适的分析方法。

[[99]](#99) [[181]](#181)概述了自主系统测试和验证面临的挑战以及可用的技术和结果。

[[118]](#118)聚焦了自动驾驶汽车环境中的问题。

[[79]](#79)概述了V&V领域的研究，主要有关机器学习和自动驾驶场景。

[[114]](#114)自动驾驶与软件的挑战，通过采访从业者的角度进行的。

[[180]](#180)汽车行业中使用的神经网络功能安全性评估的三个具体问题。

[[108]](#108)对公开可用的驾驶数据集以及自动驾驶算法的虚拟测试进行了调查。

[[20]](#20)作者提到了自动驾驶功能的复杂性、场景和参数的变化、场景选择和测试生成等挑战。

[[138]](#138)对用于自主机器人系统的形式化规范和验证方法及工具进行了调查。除了此类系统的内部结构之外，还提出了许多正式建模和验证机器人系统运行环境的挑战。

[[89]](#89)概述了集成形式化方法在机器人和自主系统中的优势、劣势、机遇和威胁。

[[207]](#207)对自动驾驶汽车基于覆盖范围的验证、确认和安全保障技术进行了系统的文献综述。

[[178]](#178)对自动驾驶汽车的软件验证和确认进行了广泛而系统的文献综述。

## Background and Rationale

### Motivation-3

结合相关工作，提出了二次研究的几个问题：（1）对现有的机器人和自主系统验证和确认结果进行结构化回顾；（2）讨论了以下四个具体问题：(a) the types of models, (b) measures of efficiency and effectiveness, (c) available tools, and (d) evidence of applicability to large-scale and industrial systems。

### Robotic and Autonomous System

RAS定义：
An autonomous system is an intelligent system that is designed to deal with the physical environment on its own and work for extended periods of time without explicit human intervention. They are built to analyse, learn from, adapt to, and act on the surrounding environment.

### Testing and the SERP-Test Taxonomy

![Illustration of taxonomy.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082301.png)

本文的论文分类方法基于SERP-Test分类法[[68]](#68)，测试分类四个方面：intervention, effect, scope, and context。

- Intervention pertains to the test techniques, their adaptation, and adoption in different context.
- Effect facet is used to identify the improvement or adaptation in a given practise as well as any insights gained through assessment.
- The scope specified whether the effect has been materialised in planning, design, execution, or analysis of tests.
- Context, as its name suggests, specifies the environment where the intervention takes place, in terms of people and their knowledge, the system under test, and the required models and other types of information.

## Methodology

### Seed Papers

- 收集初始搜索查询的关键字
- 完善纳入和排出标准
- 评估和调整SERP-Test分类法

### Selection Strategy

#### Inclusion Criteria

纳入标准的规则。

#### Exclusion Criteria

排出标准的规则。

### Taxonomy

介绍基于SERP-Test分类法的具体的分类原则。

### Search Strategy

#### Initial Query

关键词搜索。

#### Validated Query

对搜索完的结果进行验证。

### Overview of the Results

![Relevant and included papers by year.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082302.png)

最后确定了195篇论文。

## Results

### RQ1: Models

关注用于描述RAS的模型和形式类型及其在测试干预中的属性。

#### Modelling Properties

表一关注表示属性的模型。不到三分之一使用模型或逻辑来描述系统的属性，这类算形式模型。所有属性语言都是领域无关的。

#### Modelling System Behaviour or Structure

表二关注描述RAS行为或结构的模型。三分之一采用定性模型。

### RQ2: Effect

评估各种测试干预措施的efficiency (testing time or resources), effectiveness (testing quality), and coverage (testing adequacy)的指标。

#### Measuresfor Interventions

大多数其他概念仅用于单一干预措施。

#### Measures for Subject Systems

### RQ3: Tooling

#### Context Tools

模拟工具是最常用的工具之一；它们的实用性来自于一种成本较低的可视化方法，可以直观地显示设计和流程是否令人满意。中间件 ROS 与 3D 模拟器 Gazebo 相结合，形成了最流行的机器人模拟工具。此外，Simulink 是 MATLAB 的图形扩展，是动态系统建模和仿真最常用的工具。此外，形式化验证工具也得到了广泛应用，其中最突出的是模型检查器。统计模型检查器 Prism 提供对马尔可夫链或概率自动机中随机系统的建模和分析。至于定性模型，UPPAAL 为定时自动机模型提供了形式化验证，但可以扩展以使用数据类型。

#### Effect Tools

关注了哪些工具是否开源的问题和使用领域。

### RQ4: Applicability

我们的观察发现，工业界对干预措施的评估存在很大差距；只有 20 项干预措施在工业背景下进行了评估。可以理解的是，大多数案例研究都是在学术环境中进行的。其中，约有一半使用了小规模模型，这些模型通常不能代表真实系统。另一半将他们提出的干预措施应用于大规模主题和数据集，包括物理系统。

## Suggestions and Recommendations to Study Audience

在本节中，我们将分析前几节的结果，以确定我们的研究问题和两个目标受众群体（研究人员和从业者）的相对优势和劣势。我们将从我们的分析中为研究人员和从业者提出建议，以此结束本节。

### Analysis

#### Domain

针对RAS特定子领域的测试、验证和确认。

……跳过对表8的介绍……

- 在所有子领域中，大多数模型都是正式的和定量的，并且在使用定性和非正式模型进行测试方面可以发现很大的差距（最明显的是在飞行器和移动机器人子领域）。
- 在所有研究的子领域中，在使用有效性、效率和覆盖率的精确概念方面存在明显差距。其中，一些通用的有效性和效率概念（如测试时间和状态空间大小）以及覆盖率概念（如节点和转换覆盖率）是量化效果的最常用度量。常见的、更复杂的有效性、效率和充分性度量，如平均故障检测百分比 (APFD) ，似乎尚未在 RAS 领域被采用或扩展到 RAS 领域。我们确实看到最近出现了一些针对特定领域的有效性和覆盖率概念的趋势；几乎所有这些概念都已应用于自动驾驶汽车领域，但其中大多数也可以调整以适用于其他领域。
- 在测试 RAS 的工具支持方面存在相当大的差距。开源工具很少，主要是在自动驾驶汽车和飞行器子域中。没有开源工具支持移动机器人系统的特定领域方面。专有工具也存在同样的模式，但差距更大。在所审查的文献中，开发或使用的公共（但不是开源）工具非常少。
- 在使用工业案例研究评估 RAS 测试干预措施方面，所有子领域也存在非常严重的差距。最值得注意的例外是少数案例研究，主要是在自动驾驶汽车和飞行器子领域，是在工业环境中进行的。许多干预措施使用小型案例研究，大多没有任何特定的应用子领域（例如，使用移动机器人的通用模型）；在这些情况下，模型不包含足够的细节来成为一般基准的一部分。还有一些基于无人机和无人驾驶飞机的小型案例研究进行评估。

*Analysis for Researchers*
**Gaps:** 在我们对所研究子域的分析中，我们发现在处理海洋和海底 RAS 方面存在明显差距。此外，在处理飞行器和移动机器人方面也存在相对薄弱之处。此外，在处理非正式和定性模型方面，各个子域之间也存在相对薄弱之处。开发一套通用的有效性和效率概念来比较不同的干预措施是一项值得研究的挑战，文献中在针对特定领域量身定制这些概念方面存在差距。同样的观察结果也适用于测试充分性的概念。工具，尤其是针对特定子域量身定制的工具，是所有干预措施的普遍弱点。此外，在工业环境中应用干预措施是一项突出的挑战。
**Strengths:** 道路车辆子域在所有研究问题中都具有相当大的优势。此外，针对通用 RAS 系统开发的干预措施远多于针对子域的特定关注点的干预措施。形式化和定量模型是迄今为止最强大的干预措施，无论是在技术研究数量还是在执行的评估方面，即使在工业领域也是如此。

*Analysis for Practitioners*
**Gaps:** **由于大多数提出的干预措施尚未在工业背景下进行评估，因此评估它们的适用性（包括研究学习曲线和培训等因素）仍然是一个巨大的差距。**
**Strengths:** 由于形式化和定量模型具有优势，开发此类模型提供了一个起点，可以从已开发和研究的干预措施中受益。道路车辆领域肯定有更成熟的实践可供借鉴，但我们可以设想，通过调整特定领域的方面，其他子领域也可能受益于这些优势。

#### Cooperation and Connectivity

验证方法对于自主系统的广泛部署和公众接受至关重要。由于通信协议、控制软件（例如，用于合作规则）和系统动态之间的密切交互，对此类方法的需求在网络服务支持的功能中得到了加强。现有的（手动）分析技术通常无法扩展到这些功能的巨大设计空间和输入空间，因此，在这项工作中，我们调查了文献中发现的自动验证技术。

总体而言，这是一个 RAS 测试研究不足的领域，文献中很少关注合作和连接场景的测试。对于文献中报道的极少数干预措施，几乎没有任何效率或有效性的证据。 少数报告的评估仅在小规模案例研究中进行，并且没有附带开源工具。

……跳过对表9的介绍……

- 关于用于分析 RAS 中合作场景的模型，我们注意到形式概率模型（基于时间逻辑、过程代数和时间自动机的变体）是最常用的模型类型。这些模型通常用于检查合作场景的抽象模型。非正式模型使用较少，仅作为模拟工具的输入。在这种情况下，定性和非正式模型使用得很少。
- 大多数有效性和效率概念都是通用概念，例如技术的状态空间大小、验证时间和测试覆盖率以及被测系统的死锁自由度和时间逻辑公式满足的概率。使用领域特定效率和有效性概念的唯一例外涉及群体的聚集时间和人机交互的有效性。
- 显然缺乏用于测试 RAS 中的合作和群体场景的工具。唯一的例外是公共模型检查工具和用于联网无人机的模拟工具。
- 很少有研究评估他们在工业规模案例研究和基准上的干预措施。

*Analysis for Researchers*
**Gaps:** 对纳入的研究进行分析表明，在 RAS 的合作场景中，通信网络和协议的作用及其对 RAS 系统的功能、安全性和可靠性的影响研究严重不足。将通信中可用的知识体系与 RAS 的测试和验证相结合显然是未来研究的领域。现有的研究非常少，没有提供与合作方面和新兴合作行为相关的领域特定效率和有效性衡量标准。此外，缺乏足够的证据表明这些策略已应用于工业规模的案例研究和基准。
**Strengths:** 抽象理论在群体参数化模型检验方面确实有优势。除此之外，没有其他集中的优势领域。

*Analysis for Practitioners*
**Gaps:** **如上所述，我们认为，协作机器人和群体机器人的研究成果还不够成熟，无法应用于实践。即使是现有技术也尚未应用于许多工业案例研究，目前也没有稳定的工具集。与研究人员合作定义有意义的效率和有效性概念，并提供基准和工业案例研究，可能会带来有影响力的未来研究议程。**
**Strengths:** 在测试合作和群体 RAS 场景时没有实际的优势领域。

#### Testing Strategy

到目前为止，最广泛使用的策略是形式验证，其次是模拟和运行时监控。基于模型的测试是研究最少的策略。

……跳过对表10的介绍……

- 到目前为止，定量测试技术是研究最广泛的策略（这也是领域和连接方面的常见观察结果）。
- 在用于评估干预措施的措施中，效率是最常用的，有效性紧随其后。然而，很少有干预措施使用覆盖率的概念进行评估。值得注意的是，对于运行时监控，只有两篇出版物采用了效率指标。
- 基于模型的测试和运行时监控工具严重缺乏。对于模拟和形式验证，在工具支持方面似乎有相当大的优势。
- 大约54%的干预措施使用小规模案例研究进行评估，而只有10%的干预措施在工业背景下评估其策略，这表明存在明显差距。

### For Researchers

如前几节所述，许多效率和有效性措施都非常通用，而且在适合 RAS 子域的领域特定措施方面也存在相对差距。缺乏领域特定建模语言和运行时验证方法数量有限表明 RAS 测试策略还有改进的空间。

另一个相当大的差距是使用定量规范语言来指定系统所需的属性；由于 RAS 固有的异质性，我们需要有属性语言来涵盖离散和连续动态以及随机和认知方面的组合等方面，这些方面可用于对与环境和用户有关的行为方面进行建模。此外，一些研究使用了 Gazebo 和 USARSim 等模拟工具的非正式模拟模型。一种合适的中间立场可能是半正式和特定领域的模型，例如在 Matlab/Simulink 中构建的模型。最后，缺乏公共工具是文献中观察到的一大缺陷。很少有技术附带工具，而且用于测试 RAS 的公共工具也很少。

### For Practitioners

最大的差距是缺乏对现有干预措施的工业评估。在工业背景下和工业复杂系统中应用的干预措施非常少。不幸的是，干预措施的数量太少，无法得出任何有意义的趋势，也无法表明在工业环境中适用的强有力证据。在提出的干预措施中，大多数要么涉及基于模拟的测试，要么将其验证结果与某些模拟工具（主要基于 ROS-Gazebo 集成）联系起来。
基于搜索的测试和交互测试是两种在工业环境中使用的值得注意的技术。在工业环境中采用的模型中，可以提到状态机和故障树的变体。在这方面的一项值得注意的研究是在工业环境中比较监督控制、演绎和归纳（模型检查）验证技术。人源和信息源是测试干预的另一个方面，这一方面研究严重不足。我们注意到，最近有一种趋势，即将用户研究（就人机交互和人机交互而言）与传统测试、验证和确认技术相结合。此外，在定义和评估测试流程方面也存在差距，特别是在工业环境中。显然，缺乏行业和领域专家对模型和技术的投入，导致大多数干预措施都使用通用且相对简单的建模技术和属性语言。与工业合作伙伴共同生产可以丰富这些方面，并产生能够处理工业 RAS 的异质性和复杂性的模型。

## Conclusions

关注的四个问题：

- (1) What are the types of models used for testing RAS?用于测试 RAS 的模型类型有哪些？**答：** 有大量正式和非正式模型用于测试 RAS。特别是，有大量关于使用通用属性规范语言（如线性时间逻辑）和定性建模语言（如状态机变体、UML 图、Petri 网和过程代数）的文献。定量建模语言存在明显差距，无法捕捉 RAS 的复杂性和异构性。还缺乏可以捕捉 RAS 各个子域领域知识的领域特定语言。
- (2) Which efficiency and effectiveness measures were introduced or used to evaluate RAS testing interventions?引入或使用了哪些效率和有效性措施来评估 RAS 测试干预措施？**答：** 我们观察到，在衡量测试干预措施的有效性和效率以及充分性的严格且被广泛接受的指标方面存在差距。与前面的项目类似，文献中使用的那些措施非常通用，与 RAS 的特定领域方面无关。因此，在定义和评估 RAS 测试干预措施的效率、有效性和充分性的严格（领域特定）措施方面存在差距和研究机会。
- (3) What are the interventions supported by (publicly available) tools in this domain?该领域（公开可用的）工具支持哪些干预措施？**答：** 有相当多的干预措施依赖公共工具来实施或评估其干预措施。然而，很少有研究将他们提出/评估的干预措施以公开可用的工具形式提供给公众使用。因此，在提供数据集和公共工具以进一步发展该领域方面存在相当大的差距。
- (4) Which interventions have evidence of applicability to large-scale and industrial systems?哪些干预措施有证据表明适用于大规模和工业系统？**答：** 在工业环境中评估的测试干预措施屈指可数。还有一些其他干预措施使用了一些真实的机器人或自主系统，但在学术环境中。这表明，未来学术界和工业界在 RAS 测试干预措施的工业评估中合作的重要性。

`个人总结`
对19年以来的RAS领域论文有比较好的分类，讨论了研究内容、技术手段、领域开展情况等问题，由于RAS在工业中应用较少，结论是比较悲观的。对于使用工具的调研比较有参考意义。

`参考文献`
<a id="55">[55]</a>A. Cortesi, P. Ferrara, and N. Chaki. 2013. Static analysis techniques for robotics software verification. In IEEE 44th International Symposium on Robotics. IEEE, 1–6.
<a id="99">[99]</a>Philipp Helle, Wladimir Schamai, and Carsten Strobel. 2016. Testing of autonomous systems—Challenges and current state-of-the-art. INCOSE Int. Sympos. 26, 1 (2016), 571–584. DOI:https://doi.org/10.1002/j.2334-5837.2016.00179.x
<a id="118">[118]</a>Philip Koopman and Michael Wagner. 2016. Challenges in autonomous vehicle testing and validation. SAE Int. J.Transport. Saf. 4 (04 2016), 15–24. DOI:https://doi.org/10.4271/2016-01-0128
<a id="79">[79]</a>Shenjian Gao and Yanwen Tan. 2017. Paving the Way for Self-driving Cars - Software Testing for Safety-critical Systems Based on Machine Learning: A Systematic Mapping Study and a Survey. Blekinge Tekniska Högsola.
<a id="114">[114]</a>A. Knauss, J. Schroder, C. Berger, and H. Eriksson. 2017. Software-related challenges of testing automated vehicles. In IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C). IEEE, 328–330.
<a id="180">[180]</a>Q. Rao and J. Frtunikj. 2018. Deep learning for self-driving cars: Chances and challenges. In IEEE/ACM 1st International Workshop on Software Engineering for AI in Autonomous Systems (SEFAIAS). IEEE, 35–38.
<a id="108">[108]</a>Y. Kang, H. Yin, and C. Berger. 2019. Test your self-driving algorithm: An overview of publicly available driving datasets and virtual testing environments. IEEE Trans. Intell. Vehic. 4, 2 (2019), 171–185.
<a id="20">[20]</a> Halil Beglerovic, Steffen Metzner, and Martin Horn. 2018. Challenges for the Validation and Testing of Automated Driving Functions. (Jan. 2018). DOI:https://doi.org/10.1007/978-3-319-66972-4_15
<a id="138">[138]</a>Matt Luckcuck, Marie Farrell, Louise A. Dennis, Clare Dixon, and Michael Fisher. 2019. Formal specification and verification of autonomous robotic systems: A survey. ACM Comput. Surv. 52, 5 (2019), 100:1–100:41. DOI:https:// doi.org/10.1145/3342355
<a id="89">[89]</a>Mario Gleirscher, Simon Foster, and Jim Woodcock. 2020. New opportunities for integrated formal methods. ACM Comput. Surv. 52, 6 (2020), 117:1–117:36. DOI:https://doi.org/10.1145/3357231
<a id="207">[207]</a>Zaid Tahir and Rob Alexander. 2020. Coverage based testing for V&V and safety assurance of self-driving autonomous vehicles: A systematic literature review. In IEEE International Conference on Artificial Intelligence Testing (AITest). IEEE, 23–30. DOI:https://doi.org/10.1109/AITEST49225.2020.00011
<a id="178">[178]</a>Nijat Rajabli, Francesco Flammini, Roberto Nardone, and Valeria Vittorini. 2021. Software verification and validation of safe autonomous cars: A systematic literature review. IEEE Access 9 (2021), 4797–4819. DOI:https://doi.org/10.1109/ ACCESS.2020.3048047
<a id="68">[68]</a>Emelie Engström, Kai Petersen, Nauman bin Ali, and Elizabeth Bjarnason. 2017. SERP-test: A taxonomy for supporting industry–academia communication. Softw. Qual. J. 25 (2017), 1269–1305.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>TOSEM</category>
        <category>2023</category>
      </categories>
      <tags>
        <tag>Validation &amp; Verification</tag>
        <tag>Robotics</tag>
        <tag>RAS</tag>
        <tag>Review</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Model Transformation Development Using Automated Requirements Analysis, Metamodel Matching, and Transformation by Example</title>
    <url>/2024/08/17/002/</url>
    <content><![CDATA[
[Model Transformation Development Using Automated Requirements Analysis, Metamodel Matching, and Transformation by Example](https://dl.acm.org/doi/abs/10.1145/3471907)

*作者是KCL的Kevin Lano。*

`Abstraction`

> In this article, we address how the production of model transformations (MT) can be accelerated by automation of transformation synthesis from requirements, examples, and metamodels. We introduce a synthesis process based on metamodel matching, correspondence patterns between metamodels, and completeness and consistency analysis of matches. We describe how the limitations of metamodel matching can be addressed by combining matching with automated requirements analysis and model transformation by example (MTBE) techniques.
> We show that in practical examples a large percentage of required transformation functionality can usually be constructed automatically, thus potentially reducing development effort. We also evaluate the efficiency of synthesised transformations.
> Our novel contributions are:
>
> - The concept of correspondence patterns between metamodels of a transformation.
> - Requirements analysis of transformations using natural language processing (NLP) and machine learning (ML).
> - Symbolic MTBE using “predictive specification” to infer transformations from examples.
> - Transformation generation in multiple MT languages and in Java, from an abstract intermediate language.

## Introduction

Model Transformations (MT)是MDE的关键要素。大型手动转换成本高管理难[[9]](#9) [[49]](#49)。元模型匹配技术[[1]](#1) [[17]](#17) [[31]](#31)。

四个困难：1、匹配方法只能找到一种转换，但实际上有多种；2、穷举搜索复杂度高；3、无法检测源和目标的关系；4、通常只处理单一语言转换的场景。

- (i) many different transformations may be possible between two given metamodels, and a matching approach typically only detects a single transformation;
- (ii) exhaustive search for possible matches becomes infeasible even for cases of moderate size (around 25 to 30 metaclasses in the combined metamodels);
- (iii) detailed functional relationships between source and target data, such as applications of specific numeric or string functions, cannot normally be detected;
- (iv) the process is usually directed to and optimised for producing transformations in a single MT language.

MTBE(Transformation by example)处理1-3的问题，使用$\mathcal{T}\mathcal{L}$[[48]](#48)处理4的问题。

![Transformation synthesis process.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24081601.png)

图展示了整体流程。其中$\tau _{re}\tau _{mm}\tau _{cc}\tau _{f}$是映射的三个中间量。

研究问题：

- RQ1 : To what extent can automated metamodel matching be combined with interactive enhancement of matchings to accurately capture the mapping rules of an intended transformation?匹配的程度
- RQ2 : Can automated requirements analysis using NLP/ML and MTBE techniques improve the accuracy of the approach compared to stand-alone metamodel matching?本文的NLP+MTBE技术能否提高准确性
- RQ3 : Can the combined approach engineer transformations with appropriate correspondence and design patterns?
- RQ4 : Can the combined approach produce efficiently executable transformations?

### Illustrative Example: Gantt2CPM

本文用到的一个例子：甘特图到CPM网络。介绍了该MT的原则。

## Scope and bcakground

### Scope of the Approach

对于M2M问题，根据[[55]](#55)进行分类：

- (General) migration 抽象层级相同但元模型不同
- Evolution migration 一个元模型版本变更
- Refinement 高抽象层级向低抽象层级映射
- Abstaction 低抽象层级向高抽象层级映射
- Code generation 从设计规范模型生成代码
- Semantic mapping 将源模型映射到有形式化语义的模型
- Bidirectional(Bx) 双向映射，支持模型同步和变更传播
- Refactoring 单个模型转换

### $\mathcal{T}\mathcal{L}$ Transformation Repersentation

使用$\mathcal{T}\mathcal{L}$语法描述转换过程。包括集合的划分、符号标识、每个环节的输入输出和$\tau _{re}\tau _{mm}\tau _{cc}\tau _{f}$符号对应的环节。

### Natural Language Processing and Machine Learning

介绍了NLP的主要技术类型和划分词义的种类和机器学习的基本概念。

## Automated MT Requierments Analysis

如果转换过程存在自然语言需求声明，原则上可以应用NLP技术提取有关转换预期映射的一些信息，有助于元模型匹配。

### Automated Requirements Analysis Using NLP

使用NLP对Gantt2CPM案例进行需求分析。
首先使用Stanford POS tagger标记需求语句中的词类型，然后构建语法树。创建了CART决策树作为分类器，对需求语句中的关键词类型进行识别。

### Tool Support for MT Requirements Analysis

在工具中如何使用的说明。

## Metamodel Correspondence Patterns

{% note flat %}
这篇文章太长太难，还没看完，先记到这里……
{% endnote %}

### Occurrence of Correspondence Patterns in Practice

### Catalogue of Correspondence Patterns

### Correspondence Patterns in Gantt2CPM

### Tool Support for Recognising Correspondence Patterns

## Metamodel Matching Techniques

### Metamodel Matching Concepts

### Similarity Measures for Metamodel Matching

### Metamodel Matching for the Gantt2CPM Case

### Tool Support for Metamodel Matching

## Transformation Correction and Enhancement

### Completeness and Consistency Analysis

### Specification Enhancement for the Gantt2CPM Case

## MTBE Using Perdictive Specification

### Empirical Study of Transformation Mappings and Conditions

### Correction and Extension of Transformations using MTBE

### MTBEfortheGantt2CPMCase

### Tool Support for MTBE

## Transformation Synthesis

### Synthesis of UML-RSDS and Java

### Transformation Synthesis for the Gantt2CPM Case

### Tool Support for Transformation Synthesis

## Evaluation

### RQ1:Correspondence Recognition

### RQ2:Contributions of Automated Requirements Analysis and MTBE

### RQ3:Transformation Design

### RQ4:Transformation Efficiency

## Threats to Validity

### Threats to Internal Validity

### Threats to External Validity

### Threats to Construct Validity

### Threats to Content Validity

### Threats to Conclusion Validity

## Related and Future Work

### Automated Requirements Engineering

### MTBE Approaches

### Correspondence Patterns

### Metamodel Matching Approaches

### Summary

### Limitations and Future Work

## Conclusions

`个人总结`

`参考文献`
<a id="9">[9]</a>L. Burgueno, J. Cabot, and S. Gerard. 2019. The future of model transformation languages: an open community discussion J. Obj. Technol. 1–11. Retrieved from www.jot.fm/issues/issue_2019_03/article7.pdf.
<a id="49">[49]</a>K. Lano, Q. Xue, and S. Kolahdouz-Rahimi. 2020. Agile Specification of Code Generators for Model-Driven Engineering. In Proceedings of ICSEA 2020. IARIA, 9–15.
<a id="1">[1]</a>L. Addazi, A. Cicchetti, J. D. Rocco, D. D. Ruscio, L. Iovino, and A. Pierantonio. 2016. Semantic-based model matching with emfcompare, me workshop, models. CEUR-WS 1706, 40–49.
<a id="17">[17]</a>S. Fang and K. Lano. Extracting correspondences from metamodels using metamodel matching. In STAF 2019. Retrieved from CEUR-WS.org/vol-2405/02_paper.pdf.
<a id="31">[31]</a>M. Kessentini, A. Ouni, P. Langer, M. Wimmer, and S. Bechikh. 2014. Search-based metamodel matching with structural and syntactic measures. Journal of Software and Systems 97, 2014 (2014), 1–14.
<a id="48">[48]</a>K. Lano, S. Fang, and S. Kolahdouz-Rahimi. TL: An abstract specification language for bidirectional transformations. MODELS’20 Comp. Proc. 77 (2020), 1–10.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>TOSEM</category>
        <category>2022</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Model Transformations</tag>
        <tag>Requirements Engineering</tag>
        <tag>Automated Software Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Early Validation and Verification of System Behaviour in Model-based Systems Engineering:A Systematic Literature Review</title>
    <url>/2024/08/14/001/</url>
    <content><![CDATA[
[Early Validation and Verification of System Behaviour in Model-based Systems Engineering:A Systematic Literature Review](https://dl.acm.org/doi/full/10.1145/3631976)

*作者来自瑞典Mälardalen大学和Volvo建筑集团。*

`Abstraction`

> In the Systems Engineering (SE) domain there has been a paradigm shift from document-based to model-based system development artefacts; in fact, new methodologies are emerging to meet the increasing complexity of current systems and the corresponding growing need of digital workflows. In this regard, Model-Based Systems Engineering (MBSE) is considered as a key enabler by many central players of the SE community.
> MBSE has reached an adequate level of maturity, and there exist documented success stories in its adoption in industry. In particular, one significant benefit of utilising MBSE when compared to the traditional manual and document-centric workflows is that models are available from early phases of systems development; these enable a multitude of analyses prior any implementation effort together with other relevant capabilities, like the automation of development tasks. Nonetheless, it is noticeable there is a lack of a common understanding for how formal analyses for the verification and validation (V&V) of systems behaviour, specifically in the early phases of development, could be placed in an MBSE setting.
> In this article, we report on the planning, execution, and results of a systematic literature review regarding the early V&V of systems behaviour in the context of model-based systems engineering. The review aims to provide a structured representation of the state of the art with respect to motivations, proposed solutions, and limitations. From an initial set of potentially relevant 701 peer-reviewed publications we selected 149 primary studies, which we analysed according to a rigorous data extraction, analysis, and synthesis process. Based on our results, early V&V has usually the goal of checking the quality of a system design to avoid discovering flaws when parts are being concretely realised; SysML is a de facto standard for describing the system under study, while the solutions for the analyses tend to be varied; also V&V analyses tend to target varied properties with a slight predominance of functional concerns, and following the variation mentioned so far the proposed solutions are largely context specific; the proposed approaches are usually presented without explicit limitations, while when limitations are discussed,readiness of the solutions, handling of analysessimplifications/assumptions, and languages/tools integration are among the most frequently mentioned issues.
> **Based on the survey results and the standard SE practices, we discuss how the current state-of-the-art MBSE supports early V&V of systems behaviour with a special focus on industrial adoption and identify relevant challenges to be researched further.**

## Introduction

系统工程的基本定义、基本流程、关键环节，基于模型的系统工程提出的缘由、基本定义与发展目标。本文通过调研149篇论文，从工业视角中从最先进的技术中得到可用的V&V分析模型，以及从建模角度采用此类分析所需要的先决条件。

系统定义：
> System Engineering (SE) is defined as “... an integrated set of elements, subsystems, or assemblies that accomplish a defined objective” in the SE handbook by the International Council on Systems Engineering (INCOSE). "[[88]](#88)

系统开发前提：
> Indeed, standard SE practices put a lot of emphasis on the precondition that starting to build/implement a System of Interest (SoI) should be only done once there exists enough confidence that it will meet stakeholder expectations and needs.[[88]](#88)

MBSE定义：
> INCOSE defines Model-Based Systems Engineering (MBSE) as “... the formalised application of modelling to support system requirements, design, analysis, verification and validation activities beginning in the conceptual design phase and continuing throughout development and later lifecycle phases”.[[88]](#88)

MBSE名言：
> To confirm this, the INCOSE 2035 vision states: “The future of Systems Engineering is predominantly Model-Based.” A model is any description of a system that is not the thing-in-itself [[56]](#56). The quote “all models are wrong, but some are useful,” from Box and Draper[[10]](#10), captures a vital essence of modelling.

## Background and Motivation

相比于基于文档的系统工程，MBSE有更强大的推理和评估能力[[36]](#36)。

相比于传统系统工程，MBSE更直观、更容易识别、有更好的追溯性和通过图表编辑的能力[[31]](#31) [[35]](#35)，增加了V&V的机会[^17] [^36]，更好的处理建模的保真度（不过粗也不过细），降低了解决故障和错误的成本。

在早期进行系统建模和分析是系统工程的主要研究阶段。问题：通用建模语言如SysML缺少系统模拟成熟度[[67]](#67) [[94]](#94)。工业工具的互操作性问题限制MBSE的应用[[20]](#20) [[53]](#53)。

### Motivating Example

![Typical MBSE views early in system development.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24081401.png)

以建筑设备Construction Equipment (CE)为案例展开说明。早期的V&V可以加快设计和决策，降低大量迭代的风险。用MBSE技术的SE视图，容易更严格地进行分析，通过MBSE进行重用、分析、模拟等，更早地获得有关系统可行性的分析。但系统映射上仍存在差距。

## Related Work

其他类MBSE相关综述。

[[60]](#60) MBSE工具链的调研综述，主要针对SysML，还有工具准备的一些指标，包括集成能力、互操作性和可追溯性等。

[[73]](#73) 嵌入式系统重的MBSE工具，UML、SysML、MARTE相关，论文侧重代码实现。

[[25]](#25) 从语言、工具和方法三方面对MBSE进行分类，SysML是主流，稳健的方法是缺乏的。

[[66]](#66) MBSE多领域建模问题，指出FMI是有前景的，但基于SysML的互操作性和模拟存在问题。

[[94]](#94) 大部分MBSE缺少模拟功能，认为需要扩展实践并质疑符号工具的可行性。

[[41]](#41) MBSE的价值尚未定论。 [[58]](#58) MBSE仍停留在较小的研究群体中。

[[53]](#53) 调研法国工业MBSE从业者，分析积极影响，并提出应将多物理和多学科设计集成到MBSE框架当中。

[[5]](#5) 对机器人和自主系统 Robotic and Autonomous Systems (RAS) 进行文献调研，发现缺乏工业应用，认为系统模型不希望通过低保真度模型给出。

[[2]](#2) 关注UML进行调研，结论：缺乏非功能性测试、缺乏工业或精细评估、对特定领域的描述过于严格、缺乏通用的方法。

[[21]](#21) 研究多学科设计分析和优化Multidisciplinary Design Analysis and Optimisation (MDAO)与MBSE的关系，因为它可以与低保真模型集成并考虑模型不确定性等。

[[86]](#86) 模拟模型验证和测试：运筹学、仿真与计算机科学领域，结果是缺乏通用术语、理论与实践之间缺乏联系等。

## Research Method

遵循[[51]](#51)的研究方法，三阶段：**planning, performing and reporting**。

规划阶段：确定文献中的差距和审查需求（2、3节）；定义推动工作的研究问题（4.1节）；定义审查流程和所涉及的作者的指导方针。

执行阶段：步骤有Search, Selection, Snowball, Definition of data collection table, Data extraction, and Data analysis。确定论文，构建数据收集表，验证提取编码，横纵向分析。

报告阶段：记录审查结果（6节）并对有效性的潜在威胁以及应采用的相应环节策略（5节）。

### Research Questions

提出5个问题：

- 定义：How is early V&V **defined and motivated** in the MBSE literature? 在MBSE文献中，早期V&V是**如何定义和激发**的？
- 方法：What are the **means for describing system behaviour** at an early stage of development? 在开发早期阶段**描述系统行为的方法**有哪些？
- 结论：What are the **results of interest** for the early V&V, and what techniques are employed for performing the analysis? 早期V&V**感兴趣的结果**是什么？以及使用哪些技术进行分析？
- 应用：Which are the **application domains** employing early V&V? 早期V&V的**应用领域**有哪些？
- 限制：What are the **limitations** of the existing approaches for early V&V? 现有的早期V&V方法有哪些**局限性**？

### Search Process

数据库：The following databases were searched for information: ACM, IEEE, ScienceDirect, and Scopus.

关键字：(“MBSE” OR “Model-based systems engineering” OR “Model based systems engineering”) AND (“Validation” OR “Verification” OR “V&V” OR “Evaluation”) AND (“Behavior” OR “Behaviour”).

### Inclusion Process with Inclusion and Exclusion Criteria

制定了调研范围论文的纳入规则（2条）与排除规则（6条）inclusion criteria (IC) and exclusion criteria (EC)。

### Data Collection and Analysis

介绍了论文统计信息的表格，对应5个问题共计12条。
横纵分析：纵向分析是对每个特定的问题进行深入探讨（6节）；横向分析侧重跨数据模式和相关性，包括是否采用SysML、工具的许可类型与限制类别（7节）。

## Threats to Validity

参考[[92]](#92)进行有效性分析。

### Data Reproduceability

为了易读性和简洁性，总结了结果并突出显示了选定的特殊结果。开源了统计数据，在[github](https://github.com/BeeCub3/Replicate-package)中。

### External Validity

外部有效性的威胁主要与要分析的论文的检索有关。通过进行8轮snowballing操作检索论文，确保没有论文遗漏。在论文写完后又检索了一遍。

### Internal Validity

内部效度是指任何主要因参与研究的审稿人偏见而产生的威胁。解释了没有偏见的原因，包括提取论文内容后进行重新编码，使用Covidence确保评论之间的一致性。

### Construct Validity

结构效度主要与从看待方式和得出结论之间的关系得出错误结论的风险有关。解释snowballing操作的好处。

### Conclusion Validity

对结论有效性的威胁是指对研究结果进行误解的任何风险。又解释了一下。

## Findings

### Pubiolication Details

![The distribution of the analysed papers as clustered by year and type of publication.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24081402.png)

### RQ1 - How Is Early Validation and Verification Motivated and Defined in the Literature for MBSE?

*How Does the Community Define Early V&V?*
7成认为设计阶段，2成认为需求阶段，1成认为两者都有。

*What Are the Main Motivating Reasons for Doing Early V&V?*
依次是“在继续实施后确保设计达到所需的水平”、“通过后期缺陷检测降低风险”、“缩短开发时间”、“降低不完整需求的风险”、“在实施前探索系统行为”。

- V&V of design before implementation
- Reduce risk with late flaw detection
- Reduce risk for incomplete requirements
- Explore system behaviour before implementation

*RQ1 discussion*
总而言之，虽然提取的动机原因存在一些分歧，但人们似乎一致认为，在开发的早期阶段进行V&V是降低开发成本和减少开发生命周期后期缺陷风险的关键。
提取的数据表明，MBSE 在系统设计中使用分析方法已达到成熟度，具有显著的优势，也可能意味着需求阶段对当前方法的附加功能的需求较低。

*Actionable Insights RQ1*
From the analysis performed we believe the following action point to be valuable for the community in the context of RQ1:

- Motivations for V&V stakeholders seem to be somewhat unclear or implicit. Seemingly, there is no clear view of the expected value in performing early V&V.**V&V利益相关者的动机似乎有些不清楚或不明显。从表面上看，对于执行早期V&V的期望值没有明确的看法。**
- Processes typically span several development stages, seen through the divide between requirements and design, yet, there is little discussion on holistic approaches or possible benefits expected by models to bridge stages.**过程通常跨越几个开发阶段，通过需求和设计之间的划分来看，然而，很少有关于整体方法的讨论或者模型预期的可能的好处来跨越阶段。**
- Artefacts should be used by several domains and users during development, yet there is little discussion on the interoperability or re-use of V&V artefacts.**在开发过程中，工件应该被几个领域和用户使用，但是很少有关于V&V工件的互操作性或重用的讨论。**
- There is a broad range of definitions (and many papers make no attempt) for early V&V. Subsequently the expected stakeholders tend to diverge in the papers, and there is a vague understanding about how early V&V slots into the overall SE processes and how it can guide development effectively.**早期V&V有各种各样的定义(许多论文没有尝试)。随后，预期的利益相关者往往在论文中出现分歧，并且对于早期V&V如何融入整个SE流程以及它如何有效地指导开发存在模糊的理解。**

### RQ2 - What Are the Means of Describing System Behaviour at an Early Stage of Development?

*How Is System Behaviour Represented in Early V&V?*
描述系统行为的语言：主流的语言是SysML，占一半，UML也比较多，其余的依次有OCL、Custom language、Simulink、MARTE、AADL、ModelicaML、EAST-ADL、Informal/Nature Language、OWL、Language agnostic、DoDAF等，还有其他自定义的语言。SysML中，活动图和状态机图比用例图和序列图更受欢迎。

*What Language or Formalism Is Utilised for Behaviour Analysis?*
解决方案中用于执行分析的语言：很大一部分会选其他，其余比较多的依次是SysML、Simulink、Modelica、Petri Net、UPPAAL等。

*If the Description and Analysis Language Differ, Then How Is the Transformation Performed?*
SysML主要用于表示系统行为，但很少用于分析。大多数时候需要对不同语言和形式间进行转换，将表示语言转换为分析语言。63%的论文使用了自动转换，12.7%使用了半自动转换。

*RQ2 discussion*
最常被提及的语言是 SysML、Simulink 和 Modelica。 Petri 网图（具有各种形式）、UPPAAL 和其他类似语言也经常被使用。
从更广泛的角度来看，基于 SysML 和 UML 的语言被广泛用于行为描述，这可能证实了它们作为早期系统建模事实上的标准的地位。
依靠模型转换来创建分析模型会对这些转换产生相关的依赖性，但对转换可行性的讨论却很少。同样，除了互操作性和可扩展性之外，跨不同语言的一致性管理概念也大多缺失。在工业环境中实施 MBSE 通常会依赖于大型工具链，在工具、标准和用户不断变化的环境中依赖一组模型转换具有相当大的风险。对于不使用转换的语言，许多都是在 Simulink 等高级工具或 Cameo Systems Modeller 或 MagicDraw 等集成 MBSE 工具包中实现的，这暗示这些解决方案与行业需求更紧密地联系在一起。

*Actionable Insights for RQ2*
From the analysis performed we believe the following action points to be valuable for thecommunity in the context of RO2:

- There is little discussion on the transformation details, are they two-way, how oftenshould they be employed, consistency management, coupling, maintainability, etc.**很少有关于转换细节的讨论，它们是双向的吗，它们应该多久被使用一次，一致性管理，耦合，可维护性，等等。**
- Scalability oflanguages for analysis could be a weak point, top choices are implementedin industrial tools while many academic choices are based on small scale examples.Few solutions present general approaches that can be implemented in more than onelanguage and/or formalism for description or analysis.**用于分析的语言的可扩展性可能是一个弱点，顶级选择是在工业工具中实现的，而许多学术选择是基于小规模的例子。很少有解决方案提出可以用一种以上的语言和/或形式来实现描述或分析的通用方法。**
- Considering many commonlyused languages like SysML are semi-formal the reliance on specifc notations andlanguages (and per extension tools) reduces generalisability.**用于分析的语言的可扩展性可能是一个弱点，顶级选择是在工业工具中实现的，而许多学术选择是基于小规模的例子。很少有解决方案提出可以用一种以上的语言和/或形式来实现描述或分析的通用方法。**

### RQ3 - What Are the Results of Interest for Authors Performing Early V&V, and What Techniques Are Employed for the Required Analysis?

*What Methods and Techniques Are Used for Analysis?*
最常见的是模拟，或者分析用的包括静态分析和模型检查。

*What Results Are of Interest for the Authors?*
主要关注分析反馈的结果。与航空航天或汽车等代表性领域相比，发电厂、运河/水路系统、Web应用程序和医疗系统等领域的词汇量各不相同。尽管如此，我们仍然可以发现一些明显的趋势，例如执行轨迹和预期的功能行为备受关注。同样，通常通过静态分析获得的结果（例如活性、不一致性、无死锁性、可达性等）也经常被报道。一些论文认为，他们的分析方法适用于特定环境下的应用，因此感兴趣的结果可能因使用场景而异。

*What Are the Tools Used for Analysis?*
与之前关于系统描述和 V&V 分析语言的结果一致，使用的工具数量非常多，而且大多数工具在所分析的论文中只出现过一两次。更常见的类别是集成 MBSE 工具包、图形编程/仿真环境、模型检查器、建模框架和仿真工具包。 最常用的单个工具是 MATLAB/Simulink 及其相应的库和基于 EMF 的解决方案。EMF 是领先的免费/开源建模平台之一，这使其成为学术研究的一个有吸引力的工具/平台。类似地，MATLAB/Simulink 既适用于学术界也适用于工业界，在基于模型的社区中有着丰富的应用历史。除了这些工具之外，许多专有的 SysML 编辑器因其集成的分析功能而被广泛使用，至少部分消除了对描述和分析行为的不同工具的需求。

*RQ3 discussion*
模拟是迄今为止最常用的分析方法。这或许表明，为了在早期阶段进行有意义的分析，需要有先进的分析方法，尤其是针对动态行为。除了模拟之外，还有更广泛的不同方法可以简化为模型检查或自动审查/检查。
总体而言，嵌入式系统领域似乎对早期 V&V 的流程和范围有更清晰的认识，这反映在与其他类型的领域相比更紧凑的工具、语言和结果集上。此外，嵌入式系统领域在早期验证实践方面表现出一定的成熟度，在早期 V&V 的观察时间线中，有较早的出版物。
SysML 和 UML 配置文件等通用语言的半形式化特性的强大灵活性。当然，这种半形式化描述通常需要转换为更结构化的表示形式进行分析，这增加了复杂性并降低了建模的自由度，因为自动转换需要结构化格式。
Eclipse/EMF、MATLAB/Simulink、Papyrus、OpenModelica 和 UPPAAL 是更常见的报告工具。论文中还介绍了一些不执行语言间转换的工具，如 MagicDraw 和 Cameo Systems Modeler。
虽然工具与 MBSE 紧密相关，但令人惊讶的是，很少有解决方案声称与工具无关。事实上，如果工具是核心，那么 MBSE 同样会考虑方法、方法论和语言。然而，许多解决方案都依赖于特定于工具的分析，无论解决方案是否广泛。学术工具往往更紧凑、更开放，以获得最佳效果，而工业工具通常应该集成到更大的流程中，而且人们不愿意使用公开可用的工具，因为除了知识产权保护问题外，对于大型企业来说，它很少具有可扩展性和可维护性。因此，许多工具都是针对特定案例的，这一事实导致了已知的互操作性和可维护性问题。

*Actionable Insights RQ3*
From the analysis performed we believe the following action points to be valuable for thecommunity in the context of RO3:

- Tooling should carry much of the weight in terms of MBSE processes, many of the observed tools are disjoint from the overall processes and need to be integrated efcientlywhile few solutions emphasise interoperability.**工具应该在MBSE过程中占很大比重，许多观察到的工具与整个过程脱节，需要有效地集成，而很少有解决方案强调互操作性。**
- Few solutions discuss approaches that can be adapted or applied in more than onenotation/tool, further reinforcing the vendor lock-in.**很少有解决方案讨论可以在一个以上的旋转/工具中适应或应用的方法，这进一步加强了供应商锁定。**
- While simulation is the most common analysis method it is rarely discussed for whatconditions and boundaries its results can be considered valid or not, Moreover, how theanalysis should be integrated into decision-making concretely, apart from high-levelobservations, is left unspecifed.**虽然模拟是最常见的分析方法，但很少讨论其结果在什么条件和边界下被认为是有效的，此外，除了高水平的观察之外，如何将分析具体地整合到决策中，也没有具体说明。**
- The target properties for the proposed early analysis are many with no evident pattern of classifcation or catalogue referenced in the literature.**提议的早期分析的目标属性很多，在文献中没有明显的分类或目录模式。**

### RQ4 - What Are the Results of Interest for Authors Performing Early V&V, and What Techniques Are Employed for the Required Analysis?

*What Is the Reported Domain?*
论文中观察到的领域众多，其中最突出的是航空航天和航空电子。14 其他存在感很强的领域包括嵌入式系统、信息物理系统、安全关键系统、汽车和铁路。最后，还有一大类领域在论文中只被提及过一次，例如核电站、运河系统、网络应用程序和云计算。

鉴于所开发系统的复杂性和该领域的历史相关性，航空航天有望成为最常被报道和研究的领域之一。事实上，MBSE 有著名的推动者，例如 NASA，他们就该主题开展了高质量的研究。同样，嵌入式系统在形式化方法和模型检查方面也相当成熟，这些方法经常在论文中报道。此外，汽车和铁路行业在基于模型的实践方面有着坚实的基础，并且存在针对汽车的标准，例如 AUTOSAR。信息物理和安全关键系统是比前面提到的更广泛的类别，但我们无论如何都观察到了强大的存在。在这种情况下，CPS 通常受益于模型提供的统一视图（例如，出于集成分析目的），而安全关键系统需要早期分析以提供必要的证据，证明系统将满足所施加的要求。

*Is the Solution Domain Specific?*
绝大多数论文用于特定领域，少数说领域无关或者领域可扩展。

*How Was the Solution Validated?*
3成论文在工业环境中进行了评估并展示了影响力。7成的论文使用[[79]](#79)定义的某种形式运行示例来验证解决方案。
关于早期验证用户的结果与其他类别一致，因为存在很大且显著的分布。这方面的异常值是航空航天（相关领域涉及航空电子）、嵌入式系统、CPS、安全关键系统、铁路和汽车。有趣的是，嵌入式系统领域的解决方案在分析的论文中提出的解决方案方面往往是一致的，而其他领域则并非如此。事实上，在大多数较大的报告领域中，对于预计如何进行早期 V&V，没有共同/共享的观点。例如，在航空航天领域，有需求分析、模拟、可调度性分析、模型检查、图表检查等例子。

*RQ4 discussion*
正如人们所料，大多数解决方案都是特定领域的，只有大约 11% 的解决方案声称适用于任何领域。事实上，由于在 SE 流程的早期进行分析需要做出假设或管理不确定性，因此解决方案往往是特定领域的，因为需要更精确、更可靠的信息来构建分析。此外，由于许多目标语言或工具通常与某个领域紧密相关，因此需要制定配置文件和约束，以便能够足够严格地应用 SysML 和类似的半正式（通用）语言。
大约 34% 的分析论文描述了在工业环境中进行的研究，这似乎表明许多解决方案具有工业适用性。事实上，MBSE 是一种具有坚实工业视角的范式，它对各种解决方案提出了许多要求。与这一广泛的工业范围相关，我们还注意到，大多数解决方案都是不同程度地基于示例，较少关注经验测量。事实上，只有少数论文讨论经验证据来支持解决方案，而这些解决方案在很大程度上依赖于对感知到的益处的争论。这些观察结果与之前报道的 MBSE 的弱点一致，即缺乏经验证据。在这方面，我们认为，对于这种性质的解决方案，经验证据可能很难产生，因为测量定义复杂，在工业环境中执行可能具有挑战性，而不会引入偏见和其他有效性威胁的高风险。然而，这是一个反复出现的问题，涉及基于模型的实践，阻碍了更广泛范围内的基于证据的讨论。

*Actionable Insights RQ4*
From the analysis performed we believe the following action points to be valuable for thecommunity in the context of RO4:

- SE at its core pursues customer satisfaction and correct delivery of systems, yet thereare few attempts to measure and compare solutions, and there is a general lack ofbaselines for V&V approaches.**系统工程的核心是追求客户满意和系统的正确交付，但是很少尝试测量和比较解决方案，并且普遍缺乏V&V方法的基线。**
- MBSE processes are large and map well to complex domains. However many of theexamples included in academic works seem to be too simplistic to be convincinglyadopted in industrial contexts and make no attempt to discuss these concerns.**MBSE过程很大，并且很好地映射到复杂的域。然而，学术著作中的许多例子似乎过于简单，难以令人信服地应用于工业领域，也没有试图讨论这些问题。**
- MBSE artefacts are often complex and domain-specific. More unified/standard approaches could be very valuable, and a common-ground for different domains couldimprove training and enable easier comparison of methods and solutions.**MBSE人工制品通常是复杂的和特定领域的。更统一/标准的方法可能是非常有价值的，不同领域的共同点可以改善培训，并使方法和解决方案更容易比较。**
- There is seemingly no clear indication of whom the target user(s) is in the broadercontext of early V&V, further indicating a lack of clear definition and placement in MBSE processes.**在早期V&V的大背景下，似乎没有明确的迹象表明谁是目标用户，这进一步表明在MBSE流程中缺乏明确的定义和定位。**

### RQ5 - What Limitations Do Authors See, if Any, with Their Implemented Solutions?

并非所有作者都指出了他们提出的早期 V&V 方法的局限性。那些确实指出了局限性的作者的结果。最大的局限性是所提出的解决方案尚未完全开发，通常只部分涵盖了作者感兴趣的内容；另一个重大挑战是由于在描述和分析语言或形式主义存在差异时集成语言；报告的其他问题包括缺乏自动化；行为描述语言的表达能力有限是另一个常见的限制

*RQ5 discussion*
我们注意到，许多所述的限制与开发过程处于早期阶段这一事实直接或间接相关。事实上，如果抽象程度很高和/或已知系统的细节很少，那么分析应该会很有限或很肤浅。不过，作者明确表示，这是解决方案的一个可观察到的缺点，突出了在早期阶段平衡模型的保真度和抽象性的难度。同样，我们注意到许多与工具和学习曲线有关的问题，这些问题是软件和系统建模中常见的问题。
从更广泛的角度来看，MBSE 和 SE 通常针对整个系统生命周期。许多 MBSE 方法，例如 MagicGrid 为各个生命周期阶段的活动和方法提供了一个框架。有趣的是，只有少数解决方案讨论了将早期 V&V 活动和结果与后期阶段互连的潜在局限性。值得注意的是，虽然一些论文将各个阶段联系起来，但对每个阶段工件之间可追溯性的讨论和应用却很有限。在 INCOSE 等组织提出的愿景中，经常重申未来的建模应该涵盖系统生命周期的所有部分。**然而，如果在各个阶段生成的模型之间没有更复杂的可追溯性手段，就存在引入不一致或与跨工件管理信息相关的额外工作量的风险。** 事实上，这是以文档为中心的开发中发现的问题之一，经常被用作转向基于模型的实践的论据。

*Actionable Insights RQ5*
From the analysis performed we believe the following action points to be valuable for thecommunity in the context of RO5:

- MBSE processes are continuous (and often iterative) methodologies for system refne-ment. The limitations hint at the difculty in managing model fdelity and abstractionto correctly leverage analysis results from considered artefacts.**MBSE过程是系统改造的连续(通常是迭代)方法。这些限制暗示了管理模型交付和抽象的困难，以正确地利用来自被考虑的工件的分析结果。**
- MBSE artefacts are expected to evolve, therefore the limitations related to integration,abstraction management, and scalability have an important impact.**MBSE工件预计会发展，因此与集成、抽象管理和可伸缩性相关的限制会产生重要的影响。**
- Often the main stakeholders in MBSE are the engineers, since many of the limitationsare due to the difculty to apply the methods for the corresponding scenario, it can bederived a general lack of prioritisation for usability concerns.**通常，MBSE的主要利益相关者是工程师，因为许多限制是由于难以将方法应用于相应的场景，这可能导致可用性问题的优先级普遍缺乏。**
- Frequently recurring limitations are due to analytical simplifcations, which seems tocontradict the inherent essence of early V&V, This hints at a missing clear definitionof what early is, and what can be expected from analysis at such a stage.**经常重复出现的局限性是由于分析上的简化，这似乎违背了早期V&V的内在本质，这暗示了早期是什么，以及在这样一个阶段可以从分析中期待什么，缺少一个明确的定义。**

## Horizontal Analysis

### SysML and Simulation

本节只关注使用了SysML的论文。采用模拟的方法倾向于使用SysML，不使用的有4成。

### Tools and Extra Results

当作者对更广泛的反馈感兴趣而不仅仅是 V&V 结果时，他们不太可能使用多种工具进行分析。相反，当作者对 V&V 之外的结果不感兴趣时​​，他们可能会使用更多工具进行分析。也许这可以归因于所提出的解决方案的成熟度：不太成熟的方法可能包括更多软性优势以达到说服目的，而成熟的解决方案则更注重应用场景中衡量的性能。

### License and Development Phase

工具许可在设计阶段往往是专有的，而在需求阶段则更有可能是免费的。 此外，与专有许可相比，涉及两个阶段的解决方案显示出开源和免费工具的（大致）均匀混合。

### Industry, License, and SysML

虽然（如预期的那样）学术解决方案倾向于免费或开源工具，而行业则倾向于专有工具，但我们在三向映射中看到了两个不同的类别。首先，我们注意到，如果 SysML 在学术界使用，那么工具更可能是专有的而不是免费的，而非 SysML 解决方案最有可能是免费或开源的。此外，对于行业而言，非 SysML 解决方案更可能是免费的，而不是专有的。在这种情况下，我们观察到，无论 SysML 在何处使用，所使用的工具更可能是专有的，而如果解决方案不使用 SysML，则许可证更可能是免费或开源的。

### Other Observations form Horizontal Analysis

- SysML 在设计中的使用比在需求中的使用更多。这可能部分是因为需求阶段的解决方案可以正式完成，而不是依赖于 SysML 这样的非正式语言，因此避免了转向更正式的语言进行分析的需要。
- 模拟在特定领域的解决方案中更为常见，因为 117 个（70.9%）特定领域的解决方案中有 83 个使用了模拟，而非特定领域的解决方案中只有 16 个（43.7%）使用了模拟。
- 特定领域的解决方案拥有更多的专有许可证，在这方面，特定领域的解决方案可能需要更高级或更专业的软件，从而导致可用的开源或免费解决方案更少。
- 在工业环境中的 51 个解决方案中，有 32 个（62.7%）使用 SysML，在 98 个学术解决方案中，有 49 个（50%）使用 SysML。我们预计工业和学术之间的差异会更大，尤其是考虑到大多数 SysML 工具都不是免费的或开源的。然而，工业和学术提取的数据相对相似。这进一步加强了 SysML 是 MBSE 的事实标准语言这一观点。
- 工业环境倾向于使用多种工具，因为在工业环境中，51 个解决方案中有 34 个（66.6%）使用多种工具，而在学术环境中，98 个解决方案中有 52 个（53%）使用多种工具。这种趋势可以通过以下事实来解释：工业环境更有可能需要高级或专门的工具来实现其目的，而一种工具很少能用于所有分析目的。
- 作者更有可能在学术环境中发现局限性，因为在学术环境中的 98 篇论文中有 64 篇（65.3%）讨论了其解决方案的局限性。相比之下，在工业环境中的 51 篇论文中有 28 篇（54.9%）描述了其环境中的局限性。这可能与学术界和工业界在传播研究成果方面有不同的兴趣有关（例如，讨论开放的挑战与强调成功的实践）。
- 大多数使用 SysML 的实现无论如何都需要对语言进行某种扩展或转换为另一种语言或形式主义以用于分析目的。因此，在与领域无关的情况下，可能更倾向于采用一种需要较少努力来执行 V&V 分析的行为描述语言。

*Actionable Insights Horizontal analysis*
From the analysis performed we believe the following action points to be valuable for thecommunity in the context of the horizontal analysis:

- SysML as a language is more dependent on proprietary tooling and extensions withother mechanisms for analysis compared to other languages, reducing the option foranalysis without heavy investment in surrounding technologies.**与其他语言相比，SysML作为一种语言更依赖于专有工具和具有其他分析机制的扩展，这减少了在没有对周围技术进行大量投资的情况下进行分析的选择。**
- The gap between academia and industry is noticeable in many categories, hinting at agreater misalignment. Particularly, the tools, languages, and methods differ in termsof preferences.**学术界和工业界之间的差距在许多领域都很明显，暗示着更大的错位。特别是，工具、语言和方法在偏好方面有所不同。**
- Few general purpose solutions utilise simulation, hinting at the need for domain.specifc information for valid simulations. This, in conjunction with the overwhelminguse of simulation as a V&V method, could explain the lack of general approaches.**很少有通用的解决方案利用模拟，这暗示了对有效模拟的领域特定信息的需求。这一点，连同作为V&V方法的模拟的过度使用，可以解释通用方法的缺乏。**

## Discussion and Outlook

### Limitations of Early V&V

多亏了好的工具，集成更先进的工作流程和强大的功能将变得更加容易，正如其他评论中广泛讨论的那样。尽管工具是 MBSE 分类的核心，但直到今天，它仍然是更广泛采用基于模型的实践的关键障碍。工具经常出现的问题，例如互操作性和可扩展性，似乎限制了学术解决方案在工业领域的应用。
早期开发阶段的另​​一个相关特征是存在强烈的不确定性，被分析的系统需要考虑可能结果的不确定性。特别是，由于使用高抽象层次的模型，不确定性会增加。此外，在处理异构模型和系统时，由于各种类型的不确定性以及具有不确定性的不同模型之间的相互作用，复杂性也增加了。
文献中讨论了 MBSE 中不确定性的存在和管理 [[7]](#7) [[63]](#63) [[90]](#90)。据这些作者所知，没有具体的指标或方法可以有效地管理 MBSE 中的不确定性。
似乎缺乏易于获取且富有成效的方法来学习所审查文献中讨论的基于模型的方法。

### Early V&V in the Broader Context of MBSE

人工智能将发挥作用的两个场景：早期开发中的不确定性和为新手提供帮助。
在审查这些论文时，缺少关于传播在各个生命周期阶段开发的工件以及 SE 生命周期与早期 V&V 活动的关系的讨论。如果不将不确定性或早期模型的演变/细化传播到开发的后期阶段，则很有可能会创建并丢弃此类模型，这通常被称为基于文档的开发的弱点，并且可能不利于重用。
在 SE 生命周期中更稳健地传播工件的可能解决方案也可以与敏捷 MBSE [[76]](#76) 和 DevOps [[62]](#62) 相关。这些范例被视为数字线程的推动者 [[80]](#80)，并引起了业界越来越多的兴趣。
另一个相关方面是使用数字孪生 (DT) [[48]](#48)：利用 DT 被视为设计过程中的强大推动者，也是在系统实施之后集成分析的一种手段。

### Empirical Measurements and Benchmarks in MBSE

对于所研究的解决方案类型，没有基准或类似的参考测量，作者通常采用临时或特定案例的指标。
测量通常仅限于所提出的 V&V 解决方案的质量属性，而没有尝试在 MBSE 环境中测量解决方案的有效性。
对 MBSE 感知价值的批判性评论发现，采用 MBSE 带来的好处中只有大约 10% 是与任何指标相对照的，测量评估的低比例同样反映在这篇评论中，约为 11%。缺乏适当的 MBSE 使用情况报告指标限制了研究的影响，因为它通常仅限于轶事例子或观察，很难放在更广泛的背景下。
Garousi 等人 [[33]](#33) 对产学研合作面临的挑战进行了文献综述，发现常见的挑战与学术解决方案在工业环境中的适用性不足以及对有价值解决方案的不同看法有关。此外，Garousi 等人强调，合作的最佳实践是以现实世界的问题为基础进行研究。但研究和实践之间仍然存在相当大的差距。在这方面，一个可能的解决方案是通过对学术界开发的解决方案提出更明确的要求来具体化与 MBSE 相关的工业需求。从工业角度对 MBSE 解决方案定义更严格的要求可能是弥补目前观察到的一些差距的一种手段。

### Barriers for Industrial Adoption of Early V&V in MBSE

![Challenges for industry adoption of Early V&V for system behaviour in MBSE.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24081403.png)

*Model Based*
找到抽象和保真度之间的正确平衡是一个反复出现的挑战，并且通常是在 MBSE 背景下实现成熟的早期 V&V 的先决条件。事实上，从业者本身在论文中大多被忽略，解决方案的整体可用性并不是优先事项。似乎没有明确的观点来解决这个问题，也许是因为 RQ4 中看到的许多领域的广泛应用。 此外，基于模型的实践在很大程度上依赖于工具，并且在提取过程中遇到了许多传统问题，例如互操作性、自动化和可扩展性，这再次证实了该领域以前的工作。学术工具与更重要的工具环境集成的讨论明显不足。正如预期的那样，挑战是重叠的，但当行业越来越多地转向 OSLC15 等标准以促进更标准化的数据交换时，观察到的许多学术解决方案都存在目标非常狭窄、工具和语言独特的问题。此外，行业从业者和学术研究人员之间似乎存在差距，而且为学术界开发的工具可能旨在解决与行业需求不同的其他问题。

*Systems Engineering*
使用 SE 的大部分行业正在向至少部分采用 MBSE 的方向转变。然而，遗留问题往往是巨大的，不能简单地为了新方法或工作方法而丢弃，但关于如何在 RQ3 数据提取中促进这种集成的讨论却很少。然而，这些解决方案通常是为专家受众设计的，这限制了解决方案的更广泛适用性（特别是因为许多工程师在基于模型的方法方面都是完全的新手）。采用的一大障碍是难以提供 MBSE 方法的可衡量效益。许多解决方案仅限于扩展到周围活动，例如，解决方案缺乏上下游联系。同样，关于如何管理分析模型以促进重复使用和高效的未来决策的讨论很少。可追溯性以及最近的数字线程在很大程度上被忽略了，从而降低了它们的适用性。普遍缺乏与领域无关的和更通用的解决方案阻碍了现有解决方案的采用。

*Validation & Verification*
解决方案中一个很大的空白是讨论不确定性和分析有效性，这也是 RQ5 中的局限性之一。在开发的早期阶段，所有模型中都存在不确定性，需要付出相当大的努力来缓解和推理，以便正确定位结果并将其用于决策。然而，很少有人讨论如何在解决方案中管理不确定性，以及分析抽象会带来什么影响，这是作者在 RQ5 中报告的更突出的局限性之一。分析有效性也是如此。如果对重复使用感兴趣，那么就需要对何时可以使用方法或模型进行正确分析以及用户如何根据案例确定所考虑的模型是否足够丰富以产生有效的分析结果进行分类。同样，许多解决方案使用自定义工具进行实施，限制了 SE 流程中的集成。特别是，依赖几种特定的工具会增加流程的复杂性，并可能导致供应商锁定增加。

## Conclusions

> This article reports the results of a systematic literature review on early behaviour validation and verification in model-based systems engineering. From a set of 701 papers retrieved through searches and snowballing activities, we selected 149 relevant contributions, we extracted and coded the obtained data, and we performed analyses whose results and findings are presented in the work. In this respect, we notice an increased interest in performing early V&V and observe a broad range of domains in the analysed papers, with a corresponding variety of methods, tools, and languages. Further, we note a strong industrial presence in the literature and several industrial perspective trends that differ from the academic ones. To name a few of our findings, we note that SysML is the most represented language in industry and academia for describing system behaviour. In contrast, the language or formalism for analysis varies between most solutions. Additionally, several limitations are identified, indicating a lack of readiness for the solutions together with the concerns about managing analysis with low-fidelity models. Finally, a significant divide emerges between the academic and industrial implementation of solutions; such a divide is especially observable for SysML, utilised across all contexts but relying on different tooling for the contexts.
> We contextualise the review findings and discuss the current status of early validation of system behaviour in the context of industrial MBSE adoption. The review is structured according to the needs of the industry to promote the eventual adoption of early V&V and MBSE processes at large. The review provides actionable insights for the five presented research questions to promote further investigation into this area. Furthermore, we distinguish three areas, Model-Based, Systems Engineering, and Validation & Verification, and highlight a set of corresponding barriers for each area, which we feel need to be addressed to promote and support industrial adoption of early V&V techniques. As such, we hope the findings of this review can provide an adequate state-of-the-art view and pave the way for future investigations for researchers and practitioners.

`个人总结`

本文是一篇高质量的MBSE领域综述，综述的结构本身值得借鉴，文章以V&V过程为对象，研究了MSBE的方法、工具、技术和发展等内容，提出了领域研究的若干关键问题和相关质疑，有很高的参考价值，值得反复查阅。

`参考文献`

<a id="88">[88]</a>David D. Walden, Garry J. Roedler, and Kevin Forsberg. 2015. INCOSE systems engineering handbook version 4: updating the reference for practitioners. In Proceedings of the INCOSE Annual International Symposium, Vol. 25. Wiley Online Library, 678–686.
<a id="56">[56]</a>Edward A. Lee and Marjan Sirjani. 2018. What good are models? In International Conference on Formal Aspects of Component Software. Springer, 3–31.
<a id="10">[10]</a>George E. P. Box and Norman R. Draper. 1987. Empirical Model-building and Response Surfaces.John Wiley & Sons.
<a id="31">[31]</a>Sanford Friedenthal, Regina Griego, and Mark Sampson. 2007. INCOSE model based systems engineering (MBSE) initiative. In Proceedings of the INCOSE Annual International Symposium, Vol. 11. sn.
<a id="35">[35]</a>Iris Graessler and Julian Hentze. 2020. The new V-model of VDI 2206 and its validation. at-Automatisierungstechnik 68, 5 (2020), 312–324.
<a id="36">[36]</a>Joe Gregory, Lucy Berthoud, Theo Tryfonas, Alain Rossignol, and Ludovic Faure. 2020. The long and winding road: MBSE adoption for functional avionics of spacecraft. J. Syst. Softw. 160 (2020), 110453.
<a id="17">[17]</a>Joe Gregory, Lucy Berthoud, Theo Tryfonas, Alain Rossignol, and Ludovic Faure. 2020. The long and winding road: MBSE adoption for functional avionics of spacecraft. J. Syst. Softw. 160 (2020), 110453.
<a id="67">[67]</a>Mara Nikolaidou, George-Dimitrios Kapos, Anargyros Tsadimas, Vassilis Dalakas, and Dimosthenis Anagnostopoulos. 2016. Challenges in SysML model simulation. Adv. Comput. Sci. Int. J. 5, 4 (2016), 49–56.
<a id="94">[94]</a>Bernard P. Zeigler, Saurabh Mittal, and Mamadou Kaba Traore. 2018. MBSE with/out simulation: State of the art and way forward. Systems 6, 4 (2018), 40.
<a id="20">[20]</a>M. Chami and J. M. Bruel. 2018. A Survey on MBSE Adoption Challenges. In INCOSE EMEA Sector Systems Engineering Conference (INCOSE EMEASEC’18). 1–16.
<a id="53">[53]</a>Christopher Laing, Pierre David, Eric Blanco, and Xavier Dorel. 2020. Questioning integration of verification in modelbased systems engineering: An industrial perspective. Comput. Industr. 114 (2020), 103163.
<a id="60">[60]</a>Junda Ma, Guoxin Wang, Jinzhi Lu, Hans Vangheluwe, Dimitris Kiritsis, and Yan Yan. 2022. Systematic Literature Review of MBSE Tool-Chains. Appl. Sci. 12, 7 (2022), 3431.
<a id="73">[73]</a>Muhammad Rashid, Muhammad Waseem Anwar, Farooque Azam, and Muhammad Kashif. 2016. Model-based requirements and properties specifications trends for early design verification of embedded systems. In Proceedings of the 11th System of Systems Engineering Conference (SoSE’16). IEEE, 1–7.
<a id="25">[25]</a>Pierre De Saqui-Sannes, Rob A. Vingerhoeds, Christophe Garion, and Xavier Thirioux. 2022. A taxonomy of MBSE approaches by languages, tools and methods. IEEE Access (2022).
<a id="66">[66]</a>Christian Nigischer, Sébastien Bougain, Rainer Riegler, Heinz Peter Stanek, and Manfred Grafinger. 2021. Multidomain simulation utilizing SysML: State of the art and future perspectives. Proc. CIRP 100 (2021), 319–324.
<a id="41">[41]</a>Kaitlin Henderson and Alejandro Salado. 2021. Value and benefits of model-based systems engineering (MBSE): Evidence from the literature. Syst. Eng. 24, 1 (2021), 51–66.
<a id="5">[5]</a>Hugo Araujo, Mohammad Reza Mousavi, and Mahsa Varshosaz. 2022. Testing, validation, and verification of robotic and autonomous systems: A systematic review. ACM Trans. Softw. Eng. Methodol. (2022).
<a id="2">[2]</a>T. Ahmad, J. Iqbal, A. Ashraf, D. Truscan, and I. Porres. 2019. Model-based testing using UML activity diagrams: A systematic mapping study. Computer Science Review 33 (2019), 98–112.
<a id="21">[21]</a>Jean-Charles Chaudemar and Pierre de Saqui-Sannes. 2021. Mbse and mdao for early validation of design decisions: A bibliography survey. In Proceedings of the IEEE International Systems Conference (SysCon’21). IEEE, 1–8.
<a id="86">[86]</a>Naoum Tsioptsias, Antuela Tako, and Stewart Robinson. 2016. Model validation and testing in simulation: A literature review. In Proceedings of the 5th Student Conference on Operational Research (SCOR’16). Schloss Dagstuhl-LeibnizZentrum fuer Informatik.
<a id="58">[58]</a>Zihang Li, Jinzhi Lu, Guoxin Wang, Lei Feng, Didem Gurdur Broo, and Dimitris Kiritsis. 2021. A Bibliometric Analysis on Model-based Systems Engineering. In Proceedings of the IEEE International Symposium on Systems Engineering (ISSE’21). IEEE, 1–8.
<a id="51">[51]</a>Barbara Kitchenham, Rialette Pretorius, David Budgen, O. Pearl Brereton, Mark Turner, Mahmood Niazi, and Stephen Linkman. 2010. Systematic literature reviews in software engineering—A tertiary study. Inf. Softw. Technol. 52, 8 (2010), 792–805.
<a id="92">[92]</a>Claes Wohlin, Per Runeson, Martin Höst, Magnus C. Ohlsson, Björn Regnell, and Anders Wesslén. 2012. Experimentation in Software Engineering. Springer Science & Business Media.
<a id="79">[79]</a>Mary Shaw. 2002. What makes good research in software engineering?Int. J. Softw. Tools Technol. Transf. 4, 1 (2002), 1–7.
<a id="7">[7]</a>Johan Bergelin, Antonio Cicchetti, and Emil Lundin. 2022. Early validation of heterogeneous battery systems in the railway domain. In Proceedings of the IEEE International Systems Conference (SysCon’22). IEEE, 1–8.
<a id="63">[63]</a>Yaroslav Menshenin, Carolina Moreno, Yana Brovar, and Clement Fortin. 2021. Integration of MBSE and PLM: Complexity and uncertainty. Int. J. Prod. Lifecycle Manage. 13, 1 (2021), 66–88.
<a id="90">[90]</a>James R. Williams, Frank R. Burton, Richard F. Paige, and Fiona A. C. Polack. 2012. Sensitivity analysisin model-driven engineering. In International Conference on Model Driven Engineering Languages and Systems. Springer, 743–758.
<a id="76">[76]</a>Bill Schindel and Rick Dove. 2016. Introduction to the agile systems engineering life cycle MBSE pattern. In Proceedings of the INCOSE Annual International Symposium, Vol. 26. Wiley Online Library, 725–742.
<a id="62">[62]</a>John T. J. Mathieson, Thomas Mazzuchi, and Shahram Sarkani. 2020. The systems engineering DevOps lemniscate and model-based system operations. IEEE Syst. J. 15, 3 (2020), 3980–3991.
<a id="80">[80]</a>Victor Singh and Karen E. Willcox. 2018. Engineering design with digital thread. AIAA J. 56, 11 (2018), 4515–4528.
<a id="48">[48]</a>David Jones, Chris Snider, Aydin Nassehi, Jason Yon, and Ben Hicks. 2020. Characterising the digital twin: A systematic literature review. CIRP J. Manufact. Sci. Technol. 29 (2020), 36–52.
<a id="33">[33]</a>Vahid Garousi, Kai Petersen, and Baris Ozkan. 2016. Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review. Inf. Softw. Technol. 79 (2016), 106–127.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>TOSEM</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>Validation &amp; Verification</tag>
        <tag>Review</tag>
        <tag>MBSE</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：What makes a good modeling research contribution?</title>
    <url>/2024/08/23/004/</url>
    <content><![CDATA[
[What makes a good modeling research contribution?]([论文来源](https://link.springer.com/article/10.1007/s10270-024-01177-x))

*作者是Richard F. Paige。*

`Abstraction`

> The modeling field is rapidly evolving and expanding to address new research topics and to connect with new disciplines. As such, what constituted a good modeling research contribution ten years ago may not be the same today. We try to distill some insights of what we (and the community we aim to represent) consider today as key elements of a good research paper in the field of software and systems modeling. Such insights—which will need to evolve and adapt with time—will be useful not just for authors of new papers, but also for reviewers and editors.

## Introduction

关于如何撰写优秀软件工程论文的具体建议：针对特定章节的撰写建议[[1]](#1)、不同类型的软件工程论文[[5]](#5)，甚至关于如何以更符合软件工程审阅者期望的方式撰写论文的建议[[3]](#3)。

## Types of contributions to the modeling field

常见的论文关注的问题：

- how large is the community that the paper aims to address?
- how much potential impact is there in the result?
- how complex is the challenge the paper addresses?
- how substantial is the validation3, e.g., is there an industrial element to the validation?
- how distant is the topic of the paper from what we typically see in the modeling venues?
- how readable is the contribution?
- how relevant are the examples?
- and finally, how clear and persuasive is the motivation for the research presented in the paper?

此外，明确研究的正面作用和负面作用也很重要。
下面将介绍六种具体类型。

### The contribution is a model

仅凭一个模型肯定不行。这个新模型能告诉我们关于建模领域的什么？它能帮助我们回答哪些我们以前无法回答的问题？

### The contribution is a language

仅凭一个元模型也不行，需要完整的工作。

### The contribution is a core modeling technique

这些论文介绍了模型分析（模型验证、确认或测试技术等）或操作技术（模型合并、模型到模型转换、代码生成器等）。或将它们组合起来作为特定建模方法的一部分。这可能是我们多年来看到最多提案的类别。因此，在这一类别中，原创性更难实现，而证明新贡献确实有必要则更为重要。
例如，很难相信建模社区需要一种新的模型转换方法，除非它与具有非常具体要求的新语言、领域或应用程序相关联。

### The contribution is a modeling application

仅仅证明建模（或 MDE 或建模工具）可以应用于问题是不够的——相反，必须令人信服地证明建模提供了一些附加值，一些可以量化或以可重复的方式捕获的好处。

### The contribution is a (new) modeling domain

 除了单个应用程序（见上文），这里的目标是为新的工程或科学领域提供一些初步支持，然后这些支持可以发展成为该领域的一套完整的建模解决方案和应用程序。

### The contribution is a modeling tool

这些工具贡献不应只是研究工作的副产品或简单的一次性原型，而应是一种成熟、可用且广泛的工具，有可能对建模社区产生重大而积极的影响（通过吸引更多用户、促进更多项目采用建模实践等）。

## A community effort

就社区建设问题进行了介绍。

`个人总结`
作者就SoSyM期刊中的一些研究进行了分类和评估，从审稿人的角度分析一篇文章应具备哪些要素。

`参考文献`

<a id="1">[1]</a>Anthony, L.: Writing research article introductions in software engineering: How accurate is a standard model? IEEE Trans. Prof.Commun. 42(1), 38–46 (1999)
<a id="5">[5]</a>Montesi, M., Lago, P.: Software engineering article types: an analysis of the literature. J. Syst. Softw. 81(10), 1694–1714 (2008)
<a id="3">[3]</a>Ernst, N.A., Carver, J.C., Mendez, D., Torchiano, M.: Understanding peer review of software engineering papers. Empir. Softw. Eng. 26, 1–29 (2021)]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>SoSyM</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>Insights</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Design ontology for cognitive thread supporting traceability management in model-based systems engineering</title>
    <url>/2024/08/27/005/</url>
    <content><![CDATA[
[Design ontology for cognitive thread supporting traceability management in model-based systems engineering](https://www.sciencedirect.com/science/article/pii/S2452414X24000633)

*作者来自王国新和鲁金直团队。*

`Abstraction`

> Industrial information integration engineering (IIIE) is an interdisciplinary field to facilitate the industrial information integration process. In the age of complex and large-scale systems, model-based systems engineering (MBSE) is widely adopted in industry to support IIIE. Traceability management is considered the foundation of information management in MBSE. However, a lack of integration between stakeholders, development processes, and models can decrease the effectiveness and efficiency of the system development. A modified MBSE toolchain prototype has been developed to implement traceability management; however, a lack of formal and structured specifications makes it difficult to describe the complex topology in traceability management scenarios using this MBSE toolchain, such as creating traceability between heterogeneous models, which leads to poor reusability of this MBSE toolchain in other traceability management scenarios. To formalize traceability management scenarios using the MBSE toolchain, a cognitive thread (CT) ontology is developed in this study. The CT ontology is a specification expressing the information of stakeholders, models, and development processes for traceability management, providing the cognition capability to analyze the interrelationships between them. Based on the implementation of the modified MBSE toolchain, the concepts and interrelationships in the CT ontology are identified. The CT ontology is designed to develop the MBSE toolchain prototype for building, managing, and analyzing traceability in various traceability management scenarios. A case study of an adaptive cruise control system design is used to evaluate the completeness of the CT ontology through qualitative and quantitative analyses. The results demonstrate that the proposed CT ontology formalizes the information related to traceability management while using the proposed MBSE toolchain and can also be used in common traceability management scenarios to design other complex engineered systems.

## Introduction

Industrial information integration engineering (IIIE)工业信息集成工程的概念。Digital Thread (DT)数字线程被认为是实现MBSE的下一个信息管理和集成范例。它可以看做是将产品生命周期的各个阶段产生的信息链接到决策的框架中[[10]](#10)，信息的可追溯性管理就显得很重要。

可追溯性管理的问题：可追溯性管理场景的形式化应该是实现功能的先决条件；应妥善管理和分析模型与数据、开发过程与利益攸关者之间的依赖关系。

本文的主要贡献：设计了一个认知线程本体Cognitive thread (CT) ontology，与其他方法相比，CT本体可以为追溯性的构建和分析过程提供语义描述。CT概念参考[[19]](#19)。具体特点：

- (1) 将利益相关者、开发过程和系统工件之间的概念和相互关系形式化；
- (2) 提供基于预定义推理规则的认知能力。这些规则是基于利益相关者、开发过程和系统工件之间的相互关系制定的。认知能力可帮助利益相关者分析和理解协同设计中开发过程与模型和数据之间的复杂依赖关系，从而选择最佳设计。

在先前的一项研究 [[20]](#20) 中，开发了一个 MBSE 工具链来支持协同设计。为了实现可追溯性管理，我们改进了此工具链作为 CT 本体形式化的基础，其中包括以下四个方面：

- (1) 系统工件的开放生命周期协作服务 (OSLC) 服务，例如领域特定建模 (DSM)、数据等；
- (2) 从 DSM 模型生成的基于 Web 的流程管理系统 (WPMS)；
- (3) 统一身份验证系统；
- (4) OSLC 服务管理系统 (OSMS)。基于MBSE工具链的实现，识别了CT本体中的概念和相互关系，并以自适应巡航控制（ACC）系统设计的MBSE工具链为例，通过定性和定量的测量，评估了CT本体的完备性。

## Related Work

### Concept and state of the art of traceability management

The IEEE standard glossary of software engineering terminology defines traceability as the “degree to which a relationship can be established between two or more products of the development process” [[30]](#30).
尽管在 MBSE 领域中，对可追溯性或可追溯性管理尚无统一的定义，但用于开发工程系统的可追溯性概念与软件工程中的可追溯性概念类似。The International Council on Systems Engineering (INCOSE) defines traceability in the MBSE field as “a discernible association between two or more logical entities such as requirements, system elements, verifications, or tasks”[[32]](#32).

- 设计结构矩阵式可追溯性管理的最常用方法，但依赖额外的工具集。
- 模型转换是另一种方法，但大部分仅支持单向转换。（Guo等[[41]](#41)设计了代码生成语言语法来实现MBSE与Simulink模型之间的可追溯性。Kharrat等[[42]](#42)扩展了系统建模语言(SysML)配置文件，设计了一种模型转换方法来实现SysML与计算机辅助设计(CAD)模型之间的可追溯性。）
- 一些DSM工具链被视为是潜在解决方案。DSM 是一种工程方法，通过模型和一组形式化元模型来描述特定领域系统的信息。 这些工具链促进了不同领域模型之间的可追溯性。在本研究中，我们专注于 MBSE 工具链开发以支持可追溯性管理。

### Ontology design for traceability management in MBSE

本体是指对象的类型及其属性和关系，它们代表了领域特定知识。在MBSE实践中，本体用于形式化系统开发和工件的系统信息。由于工程系统的固有特性，各种设计活动和利益相关者之间的迭代和交互也增加了产品实现过程的复杂性。（信息不全且混乱）

### Cognitive thread for traceability management

数字线程的概念来自F35战斗机[[58]](#58) [[59]](#59)。
T. D. West et al [[60]](#60) considered it as “a framework for merging the conceptual models of the system with the discipline-specific engineering models of various system elements”.
最近，研究人员试图利用语义技术增强 DT 的认知能力。下一代 DT 的范式被提议为 CT [[19]](#19)，它是一种具有增强语义能力的 DT，可以形式化模型与数据、开发过程和组织之间的相互关系。还有一些其他研究利用知识图谱用于描述语义间的拓扑关系。

### Summary

几个动机：

- 为了形式化MBSE工具链，应开发描述MBSE工具链本身的本体模型。
- 工业界和学术界目标不同，本体还需要支持过程管理和工具操作。
- 使用CT能增强知识表达能力，现有方法没有在模型领域的分析。

## Research design

![Overview of research design.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082304.png)

如图所示，第一步确定可追溯性管理场景；第二步，采用系统思维支持CT本体设计，解决工具链中的问题；第三步基于CT本体，修改当前的MBSE工具链以支持可追溯性管理场景；第四步，通过ACC系统设计案例，对原型进行评估。

### Problem statement

在[[20]](#20) [[51]](#51)中开发了航空发动机仿真案例。利益相关者使用 DSM 模型来形式化开发流程和系统工件。 然后，将 DSM 模型转换为一个 WPMS，以部署技术资源并在 Simulink 中为不同的利益相关者实现自动联合仿真。本研究的步骤：

- 定义追溯性和追溯性管理的概念。[[19]](#19)
- 定义场景。
- 定义场景相关实体。
- 定义实体之间的相互关系。
- 使用工具链实例化。
- 案例研究评估。

### Prototype strategy for cognitive thread ontology design

![Overview of the MBSE toolchain prototype.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082305.png)

如图所示，（a）用Excel提取需求，用MetaGraph和KARMA体系建模，使用代码生成器将DSM模型转换为本体，基于此联合Simulink进行仿真。（b）开发OSLC适配器，通过特定的映射规则将数据转换为相应OSLC服务。（c）编译器加载DSM模型中的流程模型以生成WPMS。（d）统一身份验证系统提供数据访问控制。（e）最后，开发OSMS（Neo4j）来存储和分析WPMS中OSLC服务和开发流程之间的追溯性。

### Evaluation based on case study

提出了一个ACC系统设计案例，验证工具链的可行性与有效性。
（1）工具链原型开发：定义了4个指标。
（2）评估问题分析：提出了7个问题。
定量方法方面，参考SPIRIT框架[[68]](#68)分析三个方面：模型互操作性、开发流程利益攸关者之间的沟通程度、追溯认知推理分析的能力。

## Ontology of cognitive thread for traceability management in MBSE

![CT ontology for traceability management.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082306.png)

本节介绍CT本体的具体内容，对应第一个图的第二步。

### Ontology formalizing models

![Fig. 4. Mapping process between OSLC services and models.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082701.png)

本节主要关注模型信息。在提出的 MBSE 工具链中，结构化需求文档被视为非正式模型，DSM 模型是描述性模型，Simulink 模型是分析性模型。DSM 模型是基于 GOPPRR-E 建模方法生成的。基于 OSLC 核心规范[[22]](#22)开发了需求表、DSM 模型和 Simulink 模型的 OSLC 服务，以支持数据集成和互操作。为了描述OSLC服务，使用OWL语言进行形式化[[71]](#71)。论文讲述了以上三者之间的映射方法，具体方式如图4左侧描述。

### Ontology formalizing development process

本节主要关注开发过程的结构信息。采用的是BPMN开发流程。

### Ontology formalizing stakeholders

本节主要关注的是利益攸关者的结构信息。

### Ontology formalizing scenarios of traceability management

在已知模型、过程和利益攸关者信息后，本节关注可追溯性管理。包括四个部分：OSLC模型间追溯管理、OSLC模型与过程模型间追溯管理、OSLC模型与利益攸关者间追溯管理、过程模型与利益攸关者间追溯管理。

## Case study

### Scenario definition

![Fig. 5. ACC system design process.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082702.png)

ACC是一种基于车辆的外部行驶环境，如前方车辆的速度和距离，来适应常规控制的避碰系统。为了验证所提出的CT本体的完整性，以ACC系统设计为例对MBSE工具链原型进行了评估。案例如图5所示。

### Models and data supporting ACC system design

介绍了DSM的元模型组成和DSM模型在MetaGraph软件中的对应效果。建模方法用的是OOSEM[[26]](#26)。用CarSim做了一个Simulink ACC FMU模型。OSCL服务可以触发Simulink运行并获取Simulink中的数据。

### OSMS supporting traceability construction and analysis

![Fig. 10. OSMS supporting traceability management.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082703.png)

图10展示了可追溯管理软件OSMS的架构。

- 10(a)中：利益攸关者可以通过OSLC服务绑定到WPMS的工作任务来操纵设计模型。例如，WPMS中的涉众需求定义工作任务链接到在Excel中查询需求项的相关OSLC服务。在WPMS中，需求工程师操纵OSLC服务来修改Excel表格中的涉众需求，例如将最小安全驾驶距离从35米更改为40米。
- 在图10(b)所示的服务管理模块中，所有OSLC服务都集成到OSMS中以构建可追溯性。使用递归算法来发现并遍历所有OSLC服务，直到OSLC资源不再链接到另一个OSLC服务URI。
- 在图10(c)中，在可追溯性构建模块中建立了OSLC服务与过程模型之间的可追溯性。
- 在图10(d)中，使用可追溯性分析模块分析OSLC服务与流程之间的可追溯性。
- 推理结果如10(e)：
- - 场景Pattern1对应于基于创建OSLC服务的工具名称查询单个OSLC服务的领域问题①。推理模式是具有给定工具名称Simulink的OSLC服务。推理结果显示所有的OSLC服务都具有可追溯性，并且是由Simulink创建的，例如Simulink模型中的子系统ACCV2_Motor_Left和ACCV2_PIDController。
- - 场景Pattern2对应于基于名称查询单个OSLC服务的领域问题②。推理模式是具有给定名称或ID REQ-REA-1的OSLC服务。推理结果显示了需求表中利益相关者需求的Excel行OSLC服务。
- - 场景模式3对应于基于相应工作任务的顺序查询任何直接相关的OSLC服务的领域问题③。推理模式由两个相关的OSLC服务和开发过程中的两个相关工作任务组成。其中一个OSLC服务有一个给定的ID UseCase_6460，它对应于在高速公路上驾驶时提供帮助的用例。推理结果表明，在此用例的基础上，设计了四个有效性度量的对象实例，如DSM模型中的Cost。
- - 场景模式4对应于领域问题④，为案例研究中的特定模型元素或数据查询任何相关的OSLC服务。推理模式指定了一个链，其中包括两个OSLC服务作为该链的源和目标。
- - 场景模式5对应于基于名称查询任何直接相关的OSLC服务的领域问题⑤。推理模式由两个相关的OSLC服务组成，其中一个具有需求REQ-REA-1的给定ID。推理结果表明，该需求与DSM模型中的需求块Requirement_Diagram_1bae5_object_Object_Requirement_ee86相关。需求块有一个本地标签需求和属性文本，值为在驾驶车辆时通过提供自动驾驶辅助来增强驾驶。

### Unified authentication system supporting authority management

做了一个用户认证系统。

## Discussion and evaluation

### Qualitative evaluation

通过OSLC服务，WPMS支持过程和模型中任务之间的可跟踪性管理。OSMS支持模型之间的可追溯性构建、分析和可视化。统一的认证系统管理模型和涉众之间的可追溯性。通过CT本体，形式化了与MBSE工具链相关的模型、开发过程和涉众之间的拓扑关系，提高了MBSE工具链开发的效率和可追溯性管理场景下的语义互操作性。
六个定性分析的问题：

- 提高跟踪环节生成的自动化水平
- 支持跟踪链接的存储
- 支持可视化(表示)跟踪链接
- 支持创建、删除、修改
- 促进可追溯性信息的交换
- 对获得的可追溯性信息进行分析

### Quantitative evaluation

以ACC系统设计为例说明模型数量。包括模型互操作性、推理分析可追溯性的能力和利益攸关者之间的交互等级。

### Scalability discussion

内部效度和外部效度是案例研究方法的两个重要方面[[73]](#73)。案例研究的内部有效性是指由于在可追溯性管理场景中使用所提出的工具链和CT本体而提高的效率；案例研究的外部有效性是指所提出的工具链和CT本体可以在其他可追溯性管理场景中复制的程度，代表了该案例研究的可扩展性。

从工具链的角度来看，尽管航空航天领域复杂系统的设计方法、设计过程和设计目标可能与自适应巡航控制系统不同，但所使用的设计工具是相似的。在提出的工具链原型中，采用的建模工具MetaGraph可用于开发DSM模型。这些DSM模型可以用来表示SysML和其他建模语言所需的模型信息，并且可以进一步转换为不同建模工具所需的专有格式(例如Matlab中的.m脚本)。因此，我们可以推断，本文案例研究中的可追溯性管理场景可以复制到航空航天领域的其他可追溯性管理场景中。

从本体设计的角度来看，CT本体的设计目的是形式化可追溯性管理场景中模型、开发过程、涉众及其相互关系的概念。该本体提供了一个独立于领域的表示，促进了可追溯性管理场景中相关概念的统一表示，从而确保设计过程中涉及的所有涉众共享对这些场景的共同理解。

### Limitations

四个局限性：

- 未考虑工作任务动态变化对可追溯性管理场景的影响。因此，未来将开发一种动态编排方法来支持部署在WPMS中的工作任务的重新配置。
- 设计的CT本体受限于本研究开发的MBSE工具链。不包括可追溯性管理的其他场景，例如集成CAD模型信息或物联网(IoT)数据的场景。
- 本研究通过一个ACC系统设计案例验证了CT本体的完备性。CT本体功能的形式化验证将在未来使用OWL进行开发。
- 还有其他可行的技术解决方案可以用于实现CT本体。由于KARMA语言与特定于领域的建模语言具有很强的语义兼容性，一个有希望的途径可能涉及探索特定于领域的建模语言(如SysML、UPDM或eastern-adl)与CT本体的潜在集成。

## Conclusions

> For facilitating the industrial information integration process to support IIIE, the traceability management in MBSE implementation should be first considered. In this paper, we propose a CT ontology for traceability management in an MBSE toolchain that is developed based on an MBSE toolchain prototype and formalizes models, stakeholders, and development processes, as well as traceability management scenarios. Through a case study of an ACC system, the completeness of the CT ontology is evaluated by qualitative and quantitative analyses of the proposed MBSE toolchain. The results demonstrate that the CT ontology helps stakeholders manage and analyze traceability between heterogeneous models in the development process. To improve the efficiency of information integration, more discipline information can be considered and integrated into the proposed CT ontology in the future. Besides, we intend to extend the ontology of the CT to support other complex scenarios during MBSE implementation, such as automatic change management and consistency management for MBSE models.

`个人总结`

本篇文章提出了一套工具链以实现模型的可追溯性管理（增删改查），模型是MetaGraph搭建的DSM，仿真用的是Simulink，两者独立创建并通过算法实现关联，通过一套图数据库进行存储管理。通过图4的部分能了解KARMA的工作机制。对OSLC的工作机理不熟悉。DSM和Simulink中间用的FMU链接，FMU用CarSim生成，其设计和DSM没有之间关联。追溯性识别用的是Pattern匹配。写作方面比较规范，可以借鉴。工具链不开源。

`参考文献`

<a id="10">[10]</a>V. Singh, K.E. Willcox, Engineering design with digital thread, AIAA J. 56 (11) (2018) 4515–4528.
<a id="19">[19]</a>S. Wu, J. Lu, Z. Hu, P. Yang, G. Wang, D. Kiritsis, Cognitive thread supports system of systems for complex system development, in: 2021 16th International Conference of System of Systems Engineering, SoSE, IEEE, 2021, pp. 82–87.
<a id="20">[20]</a>J. Lu, J. Wang, D. Chen, J. Wang, M. Törngren, A service-oriented tool-chain for model-based systems engineering of aero-engines, IEEE Access 6 (2018) 50443–50458
<a id="30">[30]</a>IEEE, IEEE standard glossary of software engineering terminology, IEEE Std 610.12-1990, 1990, pp. 1–84, http://dx.doi.org/10.1109/IEEESTD.1990.101064.
<a id="32">[32]</a>I.C. on Systems Engineering (Ed.), INCOSE Systems Engineering Handbook, vol.2.0, 2000.
<a id="41">[41]</a>J. Guo, G. Wang, J. Lu, J. Ma, M. Törngren, General modeling language supporting model transformations of MBSE (part 2), in: INCOSE International Symposium, vol. 30, (1) Wiley Online Library, 2020, pp. 1460–1473.
<a id="42">[42]</a>M. Kharrat, O. Penas, R. Plateaux, J.-Y. Choley, H. Trabelsi, J. Louati, M. Haddar, Integration of electromagnetic constraints as of the conceptual design through an MBSE approach, IEEE Syst. J. 15 (1) (2020) 747–758.
<a id="58">[58]</a>D.A. Kinard, F-35 digital thread and advanced manufacturing, in: 2018 Aviat. Technol. Integr. Oper. Conf, From Concept to Cockpit, The F-35 Lightning II, 2018, pp. 1–19, http://dx.doi.org/10.2514/6.2018-3369.
<a id="59">[59]</a>M.A. Bone, M.R. Blackburn, D.H. Rhodes, D.N. Cohen, J.A. Guerrero, Transforming systems engineering through digital engineering, J. Def. Model. Simul. 16 (4) (2019) 339–355.
<a id="60">[60]</a>T.D. West, M. Blackburn, Is digital thread/digital twin affordable? A systemic assessment of the cost of DoD’s latest manhattan project, Procedia Comput. Sci. 114 (2017) 47–56.
<a id="51">[51]</a>J. Lu, G. Wang, M. Törngren, Design ontology in a case study for cosimulation in a model-based systems engineering tool-chain, IEEE Syst. J. 14 (1) (2019) 1297–1308
<a id="68">[68]</a>J. Lu, D. Chen, J. Wang, M. Torngren, Towards a service-oriented framework for MBSE tool-chain development, in: 2018 13th Annual Conference on System of Systems Engineering, SoSE, IEEE, 2018, pp. 568–575, http://dx.doi.org/10.1109/SYSOSE.2018.8428746.
<a id="22">[22]</a>D. Johnson, S. Speicher, Open services for lifecycle collaboration-core specification version 2.0, 2013, http://open-services.net/.
<a id="71">[71]</a>D.L. McGuinness, F.v. Harmelen, OWL web ontology language overview, http: //www.w3.org/TR/owl-features/.
<a id="26">[26]</a>H. Lykins, S. Friedenthal, A. Meilich, 4.4.4 Adapting UML for an object oriented systems engineering method (OOSEM), in: INCOSE International Symposium, vol.10, (1) Wiley Online Library, 2000, pp. 490–497.
<a id="73">[73]</a>N. Salkind, Internal and external validity, SAGE Dict. Quant. Manag. Res. (2011) 148–149.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>JII</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>Traceability management</tag>
        <tag>Cognitive thread</tag>
        <tag>Digital thread</tag>
        <tag>OSLC</tag>
        <tag>MetaGraph</tag>
        <tag>KARMA</tag>
        <tag>Simulink</tag>
      </tags>
  </entry>
  <entry>
    <title>小记：Small Statellites Launcher Design Efficiency Improvement through the Application of Multidisciplinary Modeling and Simulation-based Systems Engineering</title>
    <url>/2024/08/29/007/</url>
    <content><![CDATA[
`小记`

*作者来自马德里理工大学（西班牙）。*

本文的目的是介绍马德里波利特海姆大学目前的研究，以提高小型空间发射器在初步概念阶段的设计效率，该研究基于MBSE方法中的一种新方法，该方法引入了高效和快速的模拟，通过寻找设计重量的最佳平衡来降低成本。在过去的十年中，基于模型的系统工程(MBSE)和并行工程(CE)方法和过程的实施提高了卫星设计的效率，减少了设计时间。

卫星的设计是基于子系统的纯粹功能分析分解，而空间发射器则需要更多的物理分析，因为其组件相互依赖的设计影响很大，需要大量的密集模拟和计算能力。这些仿真的计算时间要求使得卫星并行工程方法在空间发射装置设计中的应用效率低下。一种新的MBSE方法引入了高效和快速的模拟，可以填补现有的空白。

过去几年，由于虚拟建模可靠性的提高，系统仿真软件方法在所有工程领域的数量显著增加。它们的主要优势是缩短了开发时间，降低了与硬件错误相关的成本，在模拟世界和现实世界之间建立了桥梁。由于其历史背景，现有的关于模型和仿真 (M&S) 的文献在航天器设计中非常广泛。早期的建模和仿真支持了太空时代的发展，测试是验证空气动力学、控制律和结构设计的主要方法。随着当前计算能力的提高，它们在航天器设计中的应用已经扩展到流体动力学、推进、结构、制导、导航和控制 (GN&C)、飞行物理、飞行轨迹、飞行器分段和有效载荷部署的模拟[[12]](#12)。然而，关于将所有这些模型和模拟器集成以分析总体发射器设计和初步开发阶段的交易的 M&S 文献几乎不存在。**我们可以找到与将专门为卫星设计开发的 MBSE 方法和并行工程流程应用于航天发射器设计所面临的困难相关的文献，以及有关 NASA 和 ESA 现有模拟器的描述。**这两个航天机构的模拟器都是多体软件，这意味着创建不同的互连软件块来模拟不同的动态，但由于其不同的计算目标，它们之间存在非常有趣的差异。

美国宇航局的模拟器[[13]](#13)由马歇尔太空飞行中心 (MSFC) 的先进概念办公室 (ACO) 建造，由一套自动化的三套工具组成，分别为用于系统重量和尺寸的 INTROS（综合火箭尺寸）、用于结构设计的 LVA（运载火箭分析）和 POST II（模拟轨迹优化程序）。该模拟器提供实验设计 (DOE) 功能，可创建替代模型来分析参数敏感性，确定特定任务的关注领域 [[14]](#14)。
ESA 的模拟器[[15]](#15)，DCAP（动态和控制分析包），由结构和机制部门开发。它是一套计算机程序软件，提供建模、模拟和分析动态和控制性能的能力，并与其他专业软件（如 NASTRAN、CATIA、MATLAB/Symulink）链接，可以在单个模拟中详细重现大多数关键子系统和学科，从而促进并行工程流程。
NASA 和 ESA 模拟器均在初步设计阶段使用，并且都具有相似的软件架构，但用途不同。然而，它们似乎都与系统工程流程、要求和系统架构无关。

通过上述分析，我们确定了微型和纳米卫星市场领域的航天发射器最佳概念设计面临的三个主要挑战：

- **多学科设计优化方法主要侧重于重量优化，建模和成本分析从属于重量或侧重于业务分析。**
- **模型和仿真方法更侧重于重现子系统性能，与定义系统需求和架构的过程无关。**
- **MBSE 方法允许通过为每个子系统指定功能并定义功能之间以及系统与环境之间的接口来定义功能架构，但它们没有考虑到航天发射器设计更多地基于物理仿真分析而不是卫星设计中应用的功能分解这一事实。**

本研究将回答的主要问题是，是否有可能通过在 MBSE 框架中集成多学科模拟器和成本估算模型来概念性地设计小型竞争性太空发射器，从而在经典系统工程方法中引入广泛的模拟，确定每个子系统定义中的关键设计驱动因素，从而实现其优化，从而减少所需的设计循环数量。

![Fig 2. System engineering Wee Diagram](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082901.png)

这种方法将用图 2 中的新 Wee 图取代经典 V 形图，其中在分解阶段包括建模和仿真，以确定根据定义的需求驱动设计的关键参数。这些参数将在设计阶段进行交换以找到基于快速设计/制造/测试循环的优化解决方案。在集成阶段，将根据模拟器的预测值对测试结果进行分析，以对其进行验证，然后再进入最终的系统集成和验证阶段。

![Fig 3. Space Launcher conceptual design MBSE&S framework](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082902.png)

为此，目前正在使用 Python 代码模块开发太空发射器初步设计模拟器工具（RoTMoS - 火箭和弹道模块化模拟器），涵盖初步设计阶段太空发射器设计所涉及的主要学科：发射轨迹、推进、制导、导航和控制 (GN&C)、空气动力学、负载、应力、质量特性和成本。开发此工具的目的是达到一定的保真度，以便设计实验，分析参数对重量和成本结果的敏感性。模拟器模块将通过任务用例（UPM-Sat 程序）集成到 MBSE 工具（Eclipse CapellaTM）中，遵循空间任务分析与设计 (SMED) 方法，以根据模拟器结果构建优化的太空发射器系统架构和功能。MBSE&S 总体框架如图 3 所示。

最后文章总结了自2021年来的相关研究进展。

`参考文献`
<a id="12">[12]</a>L. B. Rainey. Space Modeling and Simulation: Roles and Applications throughout the System Life Cycle, El Segundo, California The Aerospace Press. AIAA. 2004.
<a id="13">[13]</a>E. Waters, J. Garcia, G. Threet, A. Philips. "NASA Advanced Concepts Office, Earth-to-Orbit Team Design Process and Tools." AIAA SPACE 2013 Conference and Exposition, American Institute of Aeronautics and Astronautics.
<a id="14">[14]</a>M. R. Zwack, P. D. Dees, J. B. Holt. "Application of Design of Experiments and Surrogate Modeling within the NASA Advanced Concepts Office, Earth-to-Orbit Design Process." AIAA Space 2016, American Institute of Aeronautics and Astronautics. 2016.
<a id="15">[15]</a>G. Baldesi, M. Toso. "European Space Agency’s Launcher Multibody Dynamics Simulator used for System and Subsystem Level Analyses." CEAS Space Journal, 3(1), 27-48. 2012.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>SECESA</category>
        <category>2022</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>Rocket Engine</tag>
        <tag>SysML</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Domain-specific languages for the automated generation of datasets for industry 4.0 applications</title>
    <url>/2024/08/28/006/</url>
    <content><![CDATA[
[Domain-specific languages for the automated generation of datasets for industry 4.0 applications](https://www.sciencedirect.com/science/article/pii/S2452414X24001018)

*作者来自西班牙坎布里亚大学*

`Abstraction`

> Data collected in Industry 4.0 applications must be converted into tabular datasets before they can be processed by analysis algorithms, as in any data analysis system. To perform this transformation, data scientists have to write complex and long scripts, which can be a cumbersome process. To overcome this limitation, a language called Lavoisier was recently created to facilitate the creation of datasets. This language provides high-level primitives to select data from an object-oriented data model describing data available in a context. However, industrial engineers might not be used to deal with this kind of model. So, this work introduces a new set of languages that adapt Lavoisier to work with fishbone diagrams, which might be more suitable in industrial settings. These new languages keep the benefits of Lavoisier, reducing dataset creation complexity by 40% and up to 80%, and outperforming Lavoisier in some cases.

## Introduction

本文重点关注那些旨在利用构成现代装配线的不同互连元素收集的大量数据的工业4.0应用。MES (Manufacturing Execution System)。然后可以对这些大量数据进行分析，以改进制造过程及其输出产品。Zero-Defect Manufacturing (ZDM) 。

数据集是一种基于表的格式，与所分析的每个元素相关联的所有数据必须放在该表的一行中。然而，这种格式的数据并不常见，因为它通常存储在关系数据库、XML或JSON文件中。在这些表示中，数据不是表格式的，而是链接的，通常是分层的。例如，关于制造产品的数据可以链接到其组件的数据。类似地，每个组件的数据可能连接到其子组件的数据，依此类推。因此，在将这些分层数据用作数据分析算法的输入之前，我们需要将它们扁平化，以便将它们排列成表中特定行的列。

为了执行平坦化任务，数据科学家通常用SQL、R或Pandas等语言编写复杂而冗长的脚本。为了缓解这些问题，一种叫做Lavoisier的语言最近被开发出来[[52]](#52)。这种语言提供了高级原语来创建数据集，这些数据集关注于必须选择哪些数据，而忽略了必须如何重新排列这些数据以使它们适合数据集的细节。

另一方面，工业工程师被用来处理鱼骨图，它允许表示因果关系，通常用于工业环境中的质量控制，并且可以用于指定领域数据之间的影响关系。因此，在工业4.0上下文中，更希望Lavoisier能够使用鱼骨图而不是面向对象的领域模型。

这项工作提出了一个模型驱动的过程，使Lavoisier适应于使用鱼骨图。为了构建这个过程，我们首先创建了一种新的鱼骨模型，称为面向数据的鱼骨模型，其中原因可以连接到领域数据。为此，我们用Lavoisier语句增强鱼骨模型，这样每个原因都可以连接到表征这种原因的领域数据子集。接下来，我们设计了一种名为Papin的新语言来选择应该使用鱼骨图的哪些原因来构建具体的数据集。最后，Papin解释器处理这个选择并自动生成所需的数据集。因此，工业工程师可以使用Papin直接从(面向数据的)鱼骨图创建数据集，而不是从面向对象的领域模型。

通过将面向数据的鱼骨模型和Papin语言应用于五个外部案例研究，评估了这些语言的表达能力。

这项工作扩展了以前在一次会议上提出的贡献在这一贡献中，作为主要区别，本文包括了对我们方法的表达性和有效性的更详尽的评估(第5节)，以及对所呈现语言如何实现的更详细的描述(第4节)。此外，我们扩展了相关工作部分，包括propositionalization和Multi-Relational Data Mining (MRDM)以及工业4.0和ETL过程中的建模语言。

## Background and motivation

### Software language engineering via metamodelling

DSL语言比General Purpose Language (GPL)的强制性更低。DSL允许使用包含来自应用领域的术语和自定义语法。介绍元模型技术。

### Running example: Falling band

作为贯穿本文的运行示例，我们将以一家汽车行业供应商公司的驱动半轴生产为例。在这些检查中，汽车制造商发现，有时车轮一侧的箍松开，引起不同的问题。该公司希望分析在驱动半轴生产过程中收集的数据，以找到这个问题的原因。

### Data mining processes

KDD(Knowledge Discovery in Databases) [[65]](#65) 我们将以KDD过程为基础，解释作为数据挖掘过程一部分的不同阶段。绘制了一个流程图介绍KDD过程，分别是bussis questions, data sources selection, domain data model, algorithm selection, data reshaping, data preparation, algorithm execution, results reports。

### The dataset generation problem

关注其中的data reshaping问题。大多数数据分析算法只能处理以具体表格格式提供的数据，在数据科学社区中称为数据集。在这种格式中，属于要分析的单个实体的所有数据必须放在同一个表行中，我们将其命名为一个实体，一行约束。然而，域数据通常以链接和嵌套元素的图的形式提供，如JSON等。为了创建数据集，数据科学家编写复杂而冗长的脚本，其中使用不同的低级操作链(如过滤器、连接、pivot或聚合)转换原始数据，以满足一个实体、一行约束。

读者可以很容易地注意到，与示例大小相比，这个脚本相当复杂，并且如果紧缩的数量增加，它有明显的可伸缩性问题。这个问题并不是SQL语言所特有的，在使用R或Pandas等其他替代语言时也会出现类似的情况。因此，数据集创建成为一个劳动密集型且容易出错的过程。

### Lavoisier

为了克服这个问题，最近发展了一种叫做Lavoisier[[52]](#52) [[71]](#71) 的语言。Lavoisier是一种用于数据集创建的声明性语言，它提供了一组高级原语，其目标是指定数据集中必须包含哪些数据，而不必详细说明所选数据必须如何转换才能安排为数据集。

通过使用拉瓦锡，与用于此目的的其他语言(如SQL或Pandas)相比，生成数据集所需的操作总数减少了~ 40%，脚本大小减少了~ 60%。因此，作为一个初步假设，我们认为拉瓦锡可能有助于工业4.0的数据选择。然而，我们很快意识到，我们所在地区公司的大多数工业工程师并不熟悉面向对象的数据模型，也不熟悉一般的数据模型。

因此，我们分析了这些公司中通常使用的模型类型，以及这些模型是否可以用作我们方法中面向对象数据模型的替代品。在几个备选方案中，例如描述装配线的图，我们发现了一种模型类型，称为鱼骨图，它为我们的目标提供了三个有趣的元素:(1)它为相当数量的工程师所知;(2)它有一个非常容易理解的符号;(3)可用于表示域数据之间的因果关系。因此，当我们在工业4.0环境中工作时，我们决定使用这些鱼骨图来取代我们原始解决方案的面向对象数据模型。

### Fishbone diagrams

结合案例介绍了鱼骨图的基本概念。

### Problem statement

Lavoisier是面向对象的，鱼骨图是面向数据的，需要进行一个结合。

## Dataset generation from fishbone diagrams

### Solution overview

![Fig. 7. Overview of our solution.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082801.png)

工业工程师先创建鱼骨图，数据工程师创建面向对象领域模型，并鼓励彼此检查。数据工程师创建Data-Oriented Fishbone diagram(DOF) DOF重塑了质量控制鱼骨图，并将原因与表征这些原因的数据联系起来。原因和领域数据之间的连接是使用我们称为data feeders的特殊代码块建立的。最后，工业工程师会使用名为Papin的语言制作数据集。

### Data-oriented fishbone models

DOF将原鱼骨图和面向对象的数据连接起来，连接器是data feeder，它由path和Lavoisier Expression组成。后文介绍了DOF的代码含义和作用。

### Papin: Dataset specification by cause selection

在建立DOF后，我们使用Papin来指定该模型的原因，该模型应该包含在用于分析DOF效应的数据集中。

Papin规范的解释程序：

- 1. 对于Papin规范选择的每个类别或原因，我们遍历它以提取其数据链接的原因。
- 2. 每个数据链接的原因都使用Lavoisier解释器求值，它为每个原因返回一个数据集。
- 3. 所有这些数据集都使用主类的标识符作为数据集行之间的匹配属性进行合并。
- 4. 结果数据集被写入CSV文件。

## Implementation

![Fig. 8. Elements of our model-driven environment.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082802.png)

图8提供了组成模型驱动的基础结构的不同元素的方案。该基础设施包括:

- 1. 我们为三种特定于领域的语言提供了相应的编辑器和解析器;
- 2. 使用Ecore指定的面向对象领域模型;
- 3. 通过领域模型检索的领域数据，因此必须符合该模型;
- 4. Papin解释器，它生成包含所需输出数据集的CSV文件;
- 5. Lavoisier解释器，它由Papin解释器调用来处理data feeder的Lavoisier表达式。

模型驱动工具的结构介绍。其中DOF工具的语法是用Xtext创建的。

## Evaluation

这些语言有两个主要目标:(1)提高在创建数据集时执行工作的抽象级别;(2)避免业内人士不得不处理他们不熟悉的模型格式来创建数据集。

我们通过分析三个不同的因素来验证这些目标是否已经实现:(1)语言表达性，也就是说，所创建的语言是否可以有效地用于不同的工业4.0问题;(2)工业工程师能否有效处理Papin规范;(3)使用dof和Papin生成数据集可以节省多少意外复杂度。

下面，我们首先描述对语言表现力的评价。然后，我们描述了一个小实验，我们进行了检查工业工程师是否能够理解和创建Papin规范，我们分析了它的结果。接下来，我们将详细介绍我们所遵循的过程，以评估由于dof和Papin可以消除多少意外复杂性，并讨论执行该过程后收集的结果。最后，我们评论和分析了对我们的结果有效性的潜在威胁。

### Expressiveness

结合了汽车行业的五个案例，列出了模型数量和鱼骨图数量。证明鱼骨图的表达能力是足够的，也介绍了三个和语法无关的问题。

### Experiments with industrial engineers

这些经验实验是评估使用DSL的好处的最有效方法之一[[79]](#79) [[80]](#80)。然而，不幸的是，这些类型的实验在DSL和工业4.0社区中都非常罕见。这些实验的主要问题，也可能是它们在社区中不常见的原因，是它们的设计、组织和执行需要在时间和资源方面付出巨大的努力，这通常超出了常规研究项目的限制。由于这些原因，我们选择了一个更简单的程序，即向一组工业工程师分发一份在线问卷，他们必须解决一些与Papin相关的练习。给他们发放答卷让他们作答，问题基本都超过8成人答对。有一些初步证据表明工业工程师能够有效地使用Papin。

### Accidental complexity reduction

#### Evaluation procedure

展示了通过使用面向数据的鱼骨模型和Papin进行数据选择和准备来衡量可以节省多少意外复杂性的努力。(1)要包含在比较中的技术（为什么选这个技术）;(2)待计算度量的集合（为什么这样度量）;(3)用每种语言编写脚本的场景。评估的过程不多介绍。

#### Evaluation results

放弃了自由度选项，因为添加可追溯性信息显然是昂贵的。

脚本大小。1. 除了Data Feeders选项中的场景a和b之外，我们的方法比SQL和Pandas执行得更好。2. Data Feeders选项总是比Lavoisier选项差。3. 在所有情况下，Just Papin选项明显优于拉瓦锡选项，除了a。4. “Just Papin”选项的大小似乎并不取决于场景的复杂程度。……这段讨论非常长，总体上就是在讨论谁好谁坏的问题。

### Threats to validity

#### Expressiveness - 2

语言表达性是软件语言工程中的常见问题。然而，虽然这种威胁不能完全消除，但我们已经尝试通过使用与实际工业问题相对应的外部和异构案例研究来减轻它，以便这些案例研究:(1)涵盖广泛的可能情况;(2)对我们没有偏见;(3)代表真实的工业问题，而不是在研究实验室中人为制造的玩具例子。关于这最后一点，我们想指出的是，虽然这四个案例研究是从文献中得出的，但它们对应的是不同现实公司面临的问题。另一方面，完全可以认为鱼骨图是由案例研究提供的，但是领域模型是由我们创建的，因此，这些领域模型可能是有偏差的。正如2.7节所述，领域模型在工业环境中很少使用，因此在实践中寻找对应于实际工业问题的案例研究，同时提供鱼骨图和领域模型是一项不可行的任务。因此，我们决定为每个案例研究创建领域模型，只使用相应案例研究中报告的可用数据的描述。此外，为了减少潜在的偏差，我们请了几位专家和实践者来检查我们创建的领域模型。没有人报告这些型号有任何问题。

#### Experiments with industrial engineers - 2

关于测试工业工程师是否能够使用Papin的实验，我们对这些实验使用了单个案例研究。因此，为了科学严谨，我们不能将这些实验的结论推广到其他案例研究中，因为我们没有证据表明工业工程师可以将Papin用于其他案例研究。尽管如此，这个案例研究取自一个真实的案例研究，它不是一个微不足道的案例，它具有在真实场景中预期的复杂程度。因此，没有任何特殊性会让我们认为工程师在其他案例研究中使用Papin会有问题。
其次，我们无法控制受访者如何回答问题。其次，我们无法控制受访者如何回答问题。更严重的威胁是，我们在训练和练习中使用了相同的案例研究。

#### Accidental complexity reduction - 2

意外复杂性降低的结果是我们为比较设计的场景的结果，但其他场景可能会产生不同的结果。……

## Related work

### Fishbone diagrams and data models

该部分报告了一些使用鱼骨图进行需求工程或者模型驱动工程之类建模的案例。

Azzoni等人[[92]](#92)已经发布了一个将CSV文件转换为Ecore模型的工具，以便这些元素之间的关系可以更容易地可视化。该工具将一组CSV文件和Ecore中指定的域模型作为输入，并提供将CSV列映射到域模型元素的机制。使用此映射，该工具能够生成将CSV数据加载到Ecore域模型实例所需的代码。

最后，DescripML[[93]](#93) [[94]](#94) 是一种特定于领域的语言，用于描述数据集的内容。在这种情况下，数据集已经存在，该工具旨在提供一种通用语言来描述其内容，以便数据集的文档变得更加统一，并且可以更容易地检查和比较。此外，该语言还提供了一些功能，提醒数据科学家注意可能导致机器学习算法出现问题的问题，例如性别失衡的数据集。这种语言用于已经创建的数据集，而我们感兴趣的是自动生成这些数据集。

### Models in Industry 4.0

参考的是论文[[82]](#82)中有关工业4.0建模的分析。包括UML、SysML、OWL、AutomationML、EXPRESS、DSL等。这些语言用于不同的目的，从指定制造过程[[114]](#114)到描述CAD(计算机辅助设计)应用程序的交换格式[[115]](#115) [[116]](#116)。在我们的例子中，我们对两种类型的语言感兴趣:(1)那些可以用来指定概念数据模型的语言;(2)工业工程师熟悉的语言，不直接关注数据表示，但可以以某种方式与数据相关联，从而用作数据选择的基础。

#### Languages for data modeling

分别介绍了UML、ER、EXPRESS等语言。

#### Well-known modeling languages in industry

介绍了SysML语言。

#### Dataset generation

propositionalization社区已经研究了从分层和嵌套数据生成数据集的问题。他们的目标是将复杂的数据图转换成表格结构，可以用作数据分析算法的输入。

### Datasets and ETL processes

数据集创建可以被认为是ETL(Extract, Transform, Load)过程的一个特殊情况。在这些过程中，首先从一个或多个源提取数据，这些源可能采用不同的格式，然后根据需要对它们进行转换，最后将其加载到特定的结构中，在我们的示例中，该结构将是满足一个实体、一行约束的表格结构。然而，这个概念主要应用于数据仓库的构建，据我们所知，没有专门为数据集生成定义的ETL过程。结合了一些跟ETL过程有关的工作。

## Summary and future work

本文描述了一组语言，用于为工业环境中的数据分析系统(如工业4.0应用程序)自动生成数据集。该过程采用了Lavoisier(一种用于自动生成数据集的语言)来处理鱼骨模型，而不是面向对象的数据模型。面向对象的数据模型很少被发现，但工业工程师习惯于处理鱼骨模型，因此我们认为这些模型比面向对象的模型更适合于制造环境。

为了使Lavoisier适应鱼骨模型，我们设计了两种新的语言。首先，我们创建了鱼骨模型的一个变体，称为面向数据的鱼骨模型，它可用于表示领域数据之间的影响关系。在这些模型中，原因通过称为数据馈线的特殊代码块连接到领域数据。通过这种方式，可以使用域数据来描述鱼骨模型中的原因，而鱼骨模型现在指定域数据之间的影响关系。数据馈送器的代码是基于Lavoisier的，它被设计为供没有数据科学专业知识的人使用。因此，数据馈送器甚至可以由工业工程师自己编写。然而，这一假设尚未得到实证验证。

其次，我们设计了第二种语言，称为Papin，用于选择要包含在数据集中的原因。这是一种非常简洁的语言，它只引用原因，从而使工业工程师不必处理面向对象的数据模型。Papin解释器处理这些规范，调用Lavoisier解释器来执行数据馈线，并自动生成所需的数据集。

第三，我们通过将这些语言应用于五个案例研究来评估它们的表达性，其中四个来自文献，其余一个来自工业合作伙伴。没有重大问题的报告。此外，我们评估了我们的方法是否保留了拉瓦锡在降低意外复杂性方面的优势。

结论是，我们的方法在降低意外复杂性方面优于SQL和Pandas。与拉瓦锡相比，我们的方法引入了与需要创建DOF相关的初始开销。另一方面，Papin是一种非常简单的语言，可以用很少的关键词选择大量的特征。

因此，当我们从领域模型生成少量数据集时，与DOF创建相关的初始努力可能不会得到回报，但是随着这个数量的增加，我们的方法开始提供好处。

总之，可以说我们的方法有助于减少创建数据集所需的意外复杂性，这将有助于减少开发时间，从而减少工业4.0应用程序的成本。此外，它可以帮助减轻对数据科学家的依赖，他们的费用通常很昂贵，而且可用性可能很少。数据科学家仍然需要构建面向对象的领域模型，但他们可能不需要构建dof和Papin规范。

作为未来的工作，我们计划进行更复杂的控制实验，这将使我们能够更好地测试工业工程师是否真的能够使用我们的语言。我们还将研究替代的具体语法是否可能比当前的文本语法更合适。例如，可以使用语言工作台(如Sirius)创建图形化的具体语法，使用提议语言的现有元模型作为抽象语法。或者，可以使用Picto等工具自动生成图形视图(即无编辑功能)来补充当前的文本语法。此外，我们将开发工具来从相应的QCF模型生成DOF的骨架，以帮助减少与构建DOF相关的工作量。我们将研究如何警告用户在创建数据集时可能出现的一些问题，例如合并两个列，它们之间存在功能依赖关系。我们还将尝试使拉瓦锡适应Ecore以外的数据建模语言，如EXPRESS或OWL。我们将探讨在工业环境中非常流行的其他建模语言，如SysML，是否可以代替鱼骨图作为数据选择的基础。最后，我们将在语言中添加支持，以便在数据馈送器中指定聚合值，这样，例如，表示集合平均值的列就可以包含在数据集中。

`个人总结`
这篇文章是基于Lavoisier语言的后续文章，大致可以理解为将数据集构建中数据结构搭建的部分工作进行了基于模型化，用更规范地流程减少了重复工作。工具链本身似乎不复杂，无非是对两个语言的介绍，文章后面实验部分的讨论非常冗长，思想可以借鉴但有用没用得太多。自称实用性很强但观感一般，文章写作质量一般。

`参考文献`

<a id="52">[52]</a>A. de la Vega, D. García-Saiz, M. Zorrilla, P. Sánchez, Lavoisier: A dsl for increasing the level of abstraction of data selection and formatting in data mining, J. Comput. Lang. 60 (2020) 100987, http://dx.doi.org/10.1016/j.cola.2020.100987.
<a id="65">[65]</a>U. Fayyad, G. Piatetsky-Shapiro, P. Smyth, From data mining to knowledge discovery in databases, AI Mag. 17 (1996) 37, http://dx.doi.org/10.1609/ AIMAG.V17I3.1230.
<a id="71">[71]</a>A. de la Vega, Domain-Specific Languages for Data Mining Democratisation (Ph.D. thesis), Universidad de Cantabria, 2019, URL http://hdl.handle.net/ 10902/16728.
<a id="79">[79]</a>T. Kosar, S. Gaberc, J.C. Carver, M. Mernik, Program comprehension of domainspecific and general-purpose languages: replication of a family of experiments using integrated development environments, Empir. Softw. Eng. 23 (5) (2018) 2734–2763, http://dx.doi.org/10.1007/s10664-017-9593-2.
<a id="80">[80]</a>A. Barisic, V. Amaral, M. Goulão, Usability driven DSL development with USEME, Comput. Lang. Syst. Struct. 51 (2018) 118–157, http://dx.doi.org/10.1016/ j.cl.2017.06.005.
<a id="92">[92]</a>I. Al-Azzoni, N. Petrovic, A. Alqahtani, A utility to transform CSV data into EMF, in: Proceedings of the 8th International Conference on Software Defined Systems (SDS), Gandía (Spain), 2021, pp. 1–6, http://dx.doi.org/10.1109/SDS54264.2021.9732143.
<a id="93">[93]</a>J. Giner-Miguelez, A. Gómez, J. Cabot, A domain-specific language for describing machine learning datasets, J. Comput. Lang. 76 (2023) 101209, http: //dx.doi.org/10.1016/j.cola.2023.101209.
<a id="94">[94]</a>J. Giner-Miguelez, A. Gómez, J. Cabot, DescribeML: A dataset description tool for machine learning, Sci. Comput. Program. 231 (2024) 103030, http: //dx.doi.org/10.1016/j.scico.2023.103030.
<a id="82">[82]</a>A. Wortmann, O. Barais, B. Combemale, M. Wimmer, Modeling languages in Industry 4.0: an extended systematic mapping study, Softw. Syst. Model. 19 (1) (2020) 67–94, http://dx.doi.org/10.1007/s10270-019-00757-6.
<a id="114">[114]</a>M. Schleipen, R. Drath, Three-view-concept for modeling process or manufacturing plants with automationml, in: Proceedings of the Conference on Emerging Technologies & Factory Automation, EFTA, Palma de Mallorca (Spain), 2009, pp. 1–4, http://dx.doi.org/10.1109/ETFA.2009.5347260.
<a id="115">[115]</a>G.P. Gujarathi, Y. Ma, Parametric CAD/CAE integration using a common data model, J. Manuf. Syst. 30 (3) (2011) 118–132, http://dx.doi.org/10.1016/j.jmsy.2011.01.002.
<a id="116">[116]</a>A. Perzylo, N. Somani, M. Rickert, A. Knoll, An ontology for CAD data and geometric constraints as a link between product models and semantic robot task descriptions, in: Proceedings of the International Conference on Intelligent Robots and Systems (IROS), Hamburg (Germany), 2015, pp. 4197–4203, http: //dx.doi.org/10.1109/IROS.2015.7353971.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>JII</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>DSL</tag>
        <tag>Metamodel</tag>
        <tag>Industry 4.0</tag>
      </tags>
  </entry>
  <entry>
    <title>小记：Understanding the Affordability Benefits of Utilizing Additive Manufacturing (AM) for Legacy Liquid Rocket Engine Components and its Quantification Using Model-Based Systems Engineering (MBSE)</title>
    <url>/2024/08/29/008/</url>
    <content><![CDATA[
*作者来自阿拉巴马大学亨茨维尔分校（美国）。*

本次阅读关注涉及SysML的部分，不关注增材制造（AM）有关的内容。本文展示了一种分析火箭组件 MCC 表面粗糙度的方法，以及该表面粗糙度如何影响火箭发动机的性能。创建了 MATLAB 子程序来评估损失和性能，并运行在 SysML 中开发的基于模型的框架。然后使用 SSME 数据验证了该模型[[30]](#30)。

在进行这项研究时，我们更好地了解了使用 AM 升级火箭发动机部件与火箭性能之间的权衡。在此过程中，还展示了基于模型的方法的功能。 在可负担性方面，如果工程师要做出明智的决策，需求可追溯性至关重要。例如，使用此模型的制造工程师可以更好地估计 AM 部件需要多少后处理才能满足性能要求。这可以进一步缩短部件的交付周期，或减轻试验台上的潜在故障，从而减少认证发动机的时间。此外，本文探讨的方面是建立一种全面的以模型为中心的可负担性方法，确保系统整个生命周期阶段的可追溯性和一致性。最后，这将有助于在系统生命周期的早期设想以故障为中心的方面，优化测试-失败-修复周期所花费的时间，实现可负担性。 可负担性和重新认证传统火箭发动机的问题取决于测试-失败-修复周期所花费的时间。 使用 AM 可以缩短重新认证的准备时间，但是实施 AM 而不显著降低性能是一项持续的挑战。可以考虑 AM 来设计新的火箭发动机，但是，RS-25 等传统火箭发动机无法进行大量重新设计以适应 AM 的使用。此外，在进行升级时，预测整个系统的可靠性变化非常重要，这需要采用以模型为中心的方法。这将有助于以整体方式评估设计变更对系统的影响。虽然正在进行研究以建立基于模型的框架来跟踪可靠性变化，但执行交易的能力也将补充跟踪可靠性变化的努力，这对测试-失败-修复周期具有重要影响。本文中传达的分析结果将有助于开发一种方法，该方法可以评估 RS-25、其生产重启和重新认证的增材制造零件的可行性和实用性。由于基于模型的方法通常适用于多种火箭发动机架构，这些技术也可应用于其他液体火箭发动机和先进的推进系统，如核热推进（NTP）。

![Fig. 1 The Affordability Modeling Framework for the RS-25 Engine. [18]](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24083001.png)

基于模型的 RS-25 可负担性框架的开发是一项正在进行的研究工作 [[18]](#18) [[19]](#19) [[20]](#20) [[21]](#21)。可负担性框架如图 1 所示。它由四个方面组成，以实现可负担性：基于为 RS-25 发动机设定的成本降低目标开发的结构模型 [[20]](#20)；基于 104.5% 功率水平 SSME 数据开发的系统组件和性能模型 [[18]](#18)；正在为测试规划和可靠性开发的功能和行为模型 [[19]](#19) [[20]](#20) [[21]](#21)；以及其他工程分析模型，正在同时开发，首先是 RS-25 发动机的基于模型的故障模式、影响和危害性分析 (FMECA) [[19]](#19)。系统建模语言 (SysML) 用于利用 MBSE 实现可负担性框架。SysML 是一种图形建模语言，提供执行 SE 活动的语义。随后，本研究将利用 SysML 开发基于模型的范例，用于分析 AM 对 RS-25 发动机 MCC 的 SE 优势，这将有利于生产重启。本文的范围将涵盖可负担性建模框架的功能和行为模型以及其他工程分析模型（表面粗糙度的影响）以及系统和组件性能模型（用于估计 109% 功率水平的表面粗糙度影响的性能模型）。

Implementation in SysML and Results
根据方法论部分中描述的步骤，在 MATLAB 中开发了不同的子程序。开发的子程序被纳入 SysML 中基于 RS-25 模型的可负担性框架 。创建了一个参数图 (par) 来使用开发的子程序执行分析，如图 4 所示。par 包装了开发的 MATLAB 子程序，用于使用三种方法（能量平衡、直接压力损失和 Fanno 流）捕获结果。

![Fig. 4. RS-25 engine surface roughness analysis parametric diagram in SysML.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24083002.png)

组件鉴定的一个重要方面是评估组件测试和分析是否满足系统要求。因此，正在进行的分析分别与 RS-25 发动机和 MCC 的系统和组件级要求相关联。这封装在需求图 (req) 中，并与 [[20]](#20) 中开发的结构架构中的组件相关联，如图 5 所示

![Fig. 5. Requirement diagram (req) representing RS-25 engine and MCC requirements and its association to the structural architecture.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24083003.png)

代表 RS-25 发动机和 MCC 的 \<\< block >> 由表示为执行分析而开发的 MATLAB 子程序的约束组成，值表示基于方程 (1) – (17) 的输入和输出。一旦确定了 par 和 req，就会在 SysML 中创建 RS-25 发动机块的不同实例，这些实例表示不同的 AM 过程以及表 1 中列出的相关表面粗糙度值。

`参考文献`

<a id="18">[18]</a>Bower, A. J., and Thomas, D. “An Affordability Model Framework for the RS-25 Liquid Rocket Engine.” 2018 Joint Propulsion Conference, 2018, pp. 1–9. https://doi.org/10.2514/6.2018-4460.
<a id="19">[19]</a>Lakshmipuram Raghu, S., and Thomas, L. D. “Model Based Failure Mode, Effects and Criticality Analysis (MBFMECA) for the RS-25 Engine Using SysML.” AIAA Scitech 2021 Forum, 2021. https://doi.org/10.2514/6.2021-0305.
<a id="20">[20]</a>Lakshmipuram Raghu, S., and Thomas, L. “Modeling Behavior Elements for the RS-25 Engine Using SysML for Improved Affordability.” AIAA Propulsion and Energy 2021 Forum, 2021, pp. 1–12. https://doi.org/10.2514/6.2021-3578.
<a id="21">[21]</a>Lakshmipuram Raghu, S., Tudor, M., Thomas, L. D., and Wang, G. “MBSE Utilization for Additive Manufactured Rocket Propulsion Components.” 2022 IEEE Aerospace Conference, 2022. https://doi.org/10.1109/AERO53065.2022.9843586
<a id="30">[30]</a>Nickerson, G. R., and Dang, L. D. Performance Predictions for an SSME Configuration with an Enlarged Throat. Publication NASA-CR-178743. 1985.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Artical</category>
        <category>AIAA SCITECH Forum</category>
        <category>2023</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>Rocket Engine</tag>
        <tag>SysML</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>小记：Model Based Failure Mode, Effects and Criticality Analysis (MBFMECA) for the RS25 Engine using SysML</title>
    <url>/2024/08/31/010/</url>
    <content><![CDATA[
在这个载人航天不断飞翔的时代，对航天器的可靠性和可维护性的改进有着强烈的需求。成功航天器的主要驱动力之一是坚固而多功能的推进系统。推进系统的设计需要在性能、可靠性和成本之间取得适当的平衡。本研究的重点是可靠性。本研究提出了一个基于模型的框架，使用系统建模语言 (SysML) 进行故障模式、影响和危害性分析 (FMECA)。该框架以传统火箭发动机 RS-25（以前称为航天飞机主发动机 (SSME)）为例。将航天飞机时代的 SSME 用于太空发射系统 (SLS) 任务的目标是必须进行升级以降低发动机成本。此外，升级将需要重新认证发动机以进行载人发射。之所以选择这款发动机进行研究，是为了通过基于模型的故障模式、影响和危害性分析 (MBFMECA) 实现重新认证。因此，在基于模型的系统工程 (MBSE) 的背景下，MBFMECA 已经开发并详细阐述。提议的框架将补充正在进行的 RS-25 发动机可负担性研究工作。

故障模式和影响分析 (FMEA) 是一种用于识别导致系统故障的潜在问题及其原因的过程。FMEA 标准最初由 MIL-STD-1629 定义。自诞生以来，在 FMEA 中添加了方面危害性分析 (CA)，催生了故障模式、影响和危害性分析 (FMECA) 。FMEA 和 FMECA 通常可以互换使用，因为 FMECA 是 FMEA 的扩展。但是，为了转向 FMECA，编写一份主要 FMEA 报告非常重要。主要 FMEA 有助于评估故障的原因和影响，而 FMECA 有助于量化和确定与故障相关的风险的优先级。在火箭发动机的背景下，满足可靠性要求是实现任务保证的关键里程碑。任务保证的一个重要元素是包含隐式 FMECA 的 FMEA 报告。全面、完善的 FMEA 可确保最高安全性并提高任务的可靠性。

Izygon 等人 [[6]](#6) 首次在可靠性谱中使用 MBSE，他们开发了一个基于模型的框架，用于级联蒸馏系统 (CDS) 的 FMEA，CDS 是 NASA 约翰逊航天中心开发的先进水回收系统 (WRS)。此外，Huang 等人 [[8]](#8) 以及 Hansen 和 Huang [[5]](#5) 发起了用于燃气发生器循环液体发动机的 MBFMEA 框架的开发。这些研究包括一个基于模型的综合框架，用于主要 FMEA，该框架进一步扩展以得出 FMECA。这些研究探讨的 MBFMEA 的主要好处包括提高 FMEA 使用和任务执行的有效性、增强 FMEA 内容的全面性以及实现知识重用。过渡到基于模型的平台有助于实现设计灵活性，并将可靠性活动集成到 SE 活动中，例如需求分析、权衡研究以及验证和确认。

**1、建模语言：SysML**
RS-25 发动机的 MBFMECA 是使用系统建模语言 (SysML) 开发的，这是一种用于管理复杂工程系统的 SE 活动的图形建模语言。SysML 提供了执行各种 SE 活动的语义基础，例如行为分析、需求可追溯性、性能分析、模拟和需求分析。语义封装在九种类型的 SysML 图中：需求图、块定义图、内部框图、用例图、活动图、序列图、状态机图、参数和包图。为了促进 MBFMECA，安全性和可靠性分析工具包集成到 SysML [[15]](#15) 中。本研究使用此 MBSE 工具包为 RS-25 发动机的 MBFMECA 开发初始基础。

**2、RS-25 SysML Model**
![Figure 2. Block Definition Diagram representing major components of RS-25 engine in the context of affordability.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24083102.png)

为了建立 MBFMECA 的初始框架，主要 RS-25 发动机组件被组织成三个层次。结构架构封装在块定义图 (BDD) 中，如图 2 所示。顶级系统架构在 BDD 中表示。架构的上下文来自与 RS-25 发动机的主要成本削减目标相关的组件。RS-25 发动机通过组合抽象为燃烧装置、控制器、涡轮泵、管道、电气传感器和线束以及阀门和执行器。这些组件进一步抽象为子系统组件，如图 2 所示。考虑深入研究发动机架构的细节很有吸引力。然而，从建模的角度来看，保持基础模型简单和通用很重要。例如，通过图 2 中表达的结构视图，可以看出该架构在一般意义上也适用于液体火箭发动机。随着系统经历系统生命周期的不同阶段，可以完善此基础模型。

**3、Requirements Allocation**
![Figure 3. Requirement diagram with requirements associated with major components of the RS-25 engine.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24083103.png)

如介绍中所述，可靠性活动通常面临缺乏需求可追溯性的挑战。这可以通过开发 SysML 模型来克服。因此，从现有文献[[16]](#16)中综合了 RS-25 发动机及其组件的功能需求。然后将这些需求转换为 SysML 需求图，如图 3 所示。然后通过“满足”关联将这些需求连接到 RS-25 发动机的相应组件。通过这种关联，组件被约束为满足相关要求。这使得在系统生命周期的任何时间点都可以进行需求可追溯性。

目前，SSME（引用的是两篇远古论文）已有大量 FMEA 数据可用。参考文献 [[13]](#13) [[17]](#17) 中的故障信息和不满意状况报告 (UCR) 用于为 RS-25 发动机创建 MBFMECA。从 SSME 时代开始，人们了解到发动机的故障模式基本上可以分为泄漏、裂纹、侵蚀、磨损、凹痕和损坏、污染、分层和破损部件、电气、缺失或多余部件、扭矩振动和超程、松动部件以及公差或间隙问题。利用 SysML 中的安全性和可靠性分析器工具包，创建了这些故障模式。然后根据这些组件的 UCR 信息以及相关故障模式评估和创建潜在故障模式的原因和影响。此外，使用工具包中的 FMEA 表生成功能，生成了 FMEA 表，以可视化适合图 2 所示的 RS-25 发动机结构视图的 FMEA 报告。（表不放了）

**结果与讨论**
![Figure 4. FMEA table for the Combustion Devices.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24083104.png)

创建故障模式和影响并分配严重程度后，在 SysML 中为 RS-25 发动机的组件生成了 FMEA 表。图 4 表示燃烧装置的 FMEA 表。表中表示了七个故障项 F-1 至 F-7，分别对应于主燃烧室 (MCC)、热气歧管 (HGM)、热交换器 (HE)、主喷射器 (MI)、喷嘴 (N)、燃料预燃室 (FPB) 和氧化剂预燃室 (OPB)。‘分类’列表示故障性质，可以是机械的、电气的或软件的。‘项目’列显示分配给相应故障模式的组件（在 BDD 中创建）。所有燃烧装置都由不同严重程度的故障模式‘裂纹’组成。MCC 和 HGM 存在故障模式‘泄漏’。对于 FPB 和 OPB 观察到故障模式“侵蚀”，对于 MI 和 HE 分别观察到故障模式“松动部件”和“间隙问题”。可以观察到，MCC、HGM 和 MI 中的裂缝导致了灾难性的故障，需要成为在整个系统生命周期中跟踪的重要故障项目。对于 HGM，泄漏导致发动机损失，这使其成为一种重要的故障模式，需要严格的缓解措施。虽然故障模式可能对不同的组件相同，但影响和原因可能有所不同。影响和原因在 FMEA 表中是独立的。由于这是基础框架，因此局部和最终影响的定义更为广泛。但是，这些可以随着系统在系统生命周期中的进展而得到细化。

![Figure 5. FMEA table for the Turbopumps](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24083105.png)

与燃烧装置类似，图 5 表示涡轮泵的 FMEA 表。表中表示了四个故障项 F-8 至 F11，分别对应于高压燃料涡轮泵 (HPFTP)、高压氧化剂涡轮泵 (HPFTP)、低压燃料涡轮泵 (LPFTP) 和低压氧化剂涡轮泵 (LPOTP)。在 HPFTP、HPOTP 和 LPOTP 中观察到故障模式“磨损”。虽然这种故障模式对于 LPOTP 不太严重，但据观察，在 HPOTP 的情况下，它可能导致发动机故障，在 HPFTP 的情况下，它可能导致车辆故障。还可以观察到，在 HPOTP 的情况下，故障模式“分层和破损部件”和“扭矩、振动和过度行程”导致车辆故障。这表明这些故障模式是系统在生命周期过程中预期的重要故障项，应在设计生命周期的初始阶段设计适当的缓解措施。

![Figure 6. FMEA table for all other components of RS-25 engine expressed in structural view in Figure 2.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24083106.png)

图 6 表示故障项目 F-12 至 F-15 的 FMEA 表，分别对应于组件阀门和执行器、电气传感器和线束、管道（管道、管子和歧管的泛化）和控制器。这些故障模式的严重程度本质上很小。随着系统在设计生命周期中不断进步，架构的复杂性会增加，这可以得到改进。在这个基础框架的范围内，这些组件的故障信息已被广泛列出，适用于图 2 中表示的 RS25 架构的顶层层次结构。如前所述，开发 MBFMECA 的目标之一是确保系统组件在整个系统生命周期中能够追溯到需求。通过需求图（图 3），可以将 RS-25 架构（图 2）的组件与功能需求相关联。此外，这些组件还与 FMEA 表“项目”列中的故障模式相关联（图 4、5 和 6）。因此，现在可以生成一个表格来了解可靠性覆盖率分析和相关要求。

![Figure 7. Safety and Reliability Coverage Analysis Structure for Combustion Devices and Turbopumps of the RS-25 engine.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24083107.png)

图 7 表示在 SysML 中创建的安全性和可靠性覆盖率分析结构。‘设计元素’列包含 RS-25 引擎架构中包含的组件（图 2），‘可靠性分析覆盖’列表示为组件创建的适当故障项（图 4、5 和 6），‘满足’列包含与组件相关的功能需求信息（图 3）。此功能可以克服在开发 RS-25 引擎等复杂系统时经常遇到的 SE 活动不同步性质。实际上，这也有助于在设计生命周期的早期利用安全性和可靠性活动规划。当系统需要进行设计更改或升级时，需求通常会发生变化。通过安全性和可靠性覆盖率分析，还可以以省时的方式查看设计变更场景中受影响的需求。总体而言，组件、故障信息和受影响需求的视图使得在实施之前执行设计变更的功效分析成为可能。从今以后，这方面有助于实现 RS-25 发动机的高效可负担性框架。

**结论**
本文提出的 RS-25 发动机 MBFMECA 模型将成为改进发动机可靠性活动的初始基础框架之一。这项工作将 SSME 的传统 FMEA 数据提升到基于模型的 FMECA 平台。这种范式转变将能够为新型 RS-25 发动机的生产提供更高效的 FMEA 方法。此外，当采用不同的先进制造技术（例如增材制造）制造较新版本的 RS-25 发动机时，它将有助于评估权衡利弊。由于该平台基于现有的 SSME 故障数据，它将有助于创建一个强大的框架来评估实施较新技术对 RS-25 发动机生产重启的影响。在 NASA 为新型 RS-25 组件（例如涡轮泵）实施 FMEA 的现有文献背景下，应扩展提出的 MBFMECA，以便在未来的设计变更场景中实现此类实施活动的自动化。基础 MBFMECA 的未来研究方向包括： • 创建额外的 SysML 图表，以对已识别的故障模式的危险性等级进行建模。这将需要修改并从主要 MBFMECA 模型创建新的 SysML 图表和范例。

- 根据危险性等级对发动机的风险和最终影响进行定性评估。
- 提出简单的纠正措施（定性或定量）以减轻或降低风险的影响。
- 针对设计变更场景自动生成完整而全面的 FMECA 报告。

进一步的发展还包括集成基于模型的故障树分析 (FTA)，包括火箭发动机的成本考虑方面，并评估设计变更对 RS-25 发动机的影响。这些未来的发展涉及“做得更好”和“专注于提高效率和保真度”方面的设想里程碑（图 1），以实现可负担性。总体而言，将使用可执行的 SysML 模型同时分析性能、可靠性和成本方面。因此，整体努力将能够为 RS-25 引擎提供一个经济实惠的框架，该框架是在 MBSE 频谱内构思的。

`参考文献`
<a id="6">[6]</a>Izygon, M., Wagner, H., Okon, S., Wang, L., Sargusingh, M., and Evans, J. “Facilitating R&M in Spaceflight Systems with MBSE.” Proceedings - Annual Reliability and Maintainability Symposium, Vols. 2016-April, 2016, pp. 1–6.https://doi.org/10.1109/RAMS.2016.7448031.
<a id="8">[8]</a>Huang, Z., Swalgen, S., Davidz, H., and Murray, J. “MBSE-Assisted FMEA Approach - Challenges and Opportunities.” Proceedings - Annual Reliability and Maintainability Symposium, 2017, pp. 1–8. https://doi.org/10.1109/RAM.2017.7889722.
<a id="5">[5]</a>Hansen, R., and Huang, Z. “Toward FMEA and MBSE Integration.” Proceedings - Annual Reliability and Maintainability Symposium, Vols. 2018-January, 2018. https://doi.org/10.1109/RAM.2018.8463084.
<a id="15">[15]</a>Biggs, G., Post, K., Armonas, A., Yakymets, N., Juknevicius, T., and Berres, A. “OMG Standard for Integrating Safety and Reliability Analysis into MBSE: Concepts and Applications.” INCOSE International Symposium, Vol. 29, No. 1, 2019, pp. 159–173. https://doi.org/10.1002/j.2334-5837.2019.00595.x.
<a id="16">[16]</a>“Space Shuttle Main Engine Orientation, Space Transportation Training System Data.” BC98-04, Rocketdyne Propulsion and Power, Boeing, 1998.
<a id="13">[13]</a>Tischer, A. E., and Glover, R. C. “Studies and Analyses of the Space Shuttle Main Engine.” NASA-CR-183593, 1987.
<a id="17">[17]</a>Glover, R. C., Kelley, B. A., and Tischer, A. E. “Studies and Analyses of the Space Shuttle Main Engine: SSME (Space Shuttle Main Engine) Failure Data Review, Diagnostic Survey and Ssme Diagnostic Evaluation.” NASA-CR-178993, 1986.]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Artical</category>
        <category>AIAA SCITECH Forum</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>Rocket Engine</tag>
        <tag>SysML</tag>
        <tag>Simulation</tag>
        <tag>FMEA</tag>
      </tags>
  </entry>
  <entry>
    <title>小记：MBSE Utilization for Additive Manufactured Rocket Propulsion Components</title>
    <url>/2024/08/30/009/</url>
    <content><![CDATA[
`Abstraction`
基于模型的系统工程 (MBSE) 已在美国宇航局的各种航天计划中得到越来越广泛的应用，例如人类登陆火星现场资源利用 (ISRU) 和地月栖息地架构、商业载人计划 (CCP) 和太空发射系统 (SLS)。最近，MBSE 还帮助支持了美国宇航局的可靠性设计 (DFR) 和任务保障活动。MBSE 的使用有助于在数字环境中可视化整个系统的开发。对于火箭推进系统的开发，利用 MBSE 有助于找到以全面和连贯的方式在整个生命周期内降低成本、进度和风险的方法。为了在竞争激烈的太空竞赛环境中实现可负担性，重要的是要利用增材制造 (AM) 等较新的制造技术。在火箭推进系统的开发中，AM 为通常很复杂的火箭发动机设计提供了新的设计和性能机会。与传统生产技术相比，增材制造火箭推进元件的根本优势在于缩短了交货时间并降低了成本。增材制造设计有助于实现复杂的形状和几何形状，而使用传统生产方法生产这些形状和几何形状通常具有挑战性且成本高昂。
在火箭推进系统开发的背景下，AM 提供了实现技术和经济上可行的新型发动机设计的技术机会。NASA 的增材制造演示发动机 (AMDE) 等重大努力在火箭推进发动机的生产中采用了增材制造。另一方面，MBSE 提供了在数字环境中可视化设计变更影响的能力。**因此，本研究的目的是评估利用适合增材制造火箭推进元件环境的 MBSE 的好处。对当前最先进的增材制造火箭推进元件进行了文献综述，并确定了利用 MBSE 的潜在机会。**此外，还探索了一个设计示例（RS-25 或航天飞机主发动机），以展示本研究中研究理念的好处。选择设计示例是由于需要重新启动发动机生产以供 NASA 未来的发射清单使用。最后，在缩短发动机测试-失败-修复（重新设计、再制造、重新测试和重新认证）周期时间的范围内对本研究的结果进行了定性评估。

在管理和增强系统工程 (SE) 流程应用的新技术适应性方面，基于模型的系统工程 (MBSE) 在 NASA 内部得到了越来越多的接受和关注 [[19]](#19)。MBSE 是建模的形式化应用，用于支持各种基于系统工程 (SE) 的活动，例如系统需求、设计、分析、验证和跨系统生命周期阶段的确认。在 MBSE 中，模型取代文档成为 SE 流程的主要工件。因此，MBSE 有助于实现高效沟通、管理复杂性、增加多学科知识捕获、创建需求可追溯性并降低风险 [[20]](#20)。

对于火箭发动机，NASA 的 MBSE 注入和现代化计划 - MIAMI [[19]](#19) 曾探索过 MBSE 的使用。据观察，利用 MBSE 有助于实现：

- 自动化验证和确认 (V&V) 过程；
- 保持对需求的可追溯性；
- 节省后处理测试数据的时间。

MBSE 还帮助支持了 NASA 的可靠性设计 (DFR) 和基于模型的任务保障活动 (MBMA) 。因此，利用 MBSE 进行 RS25 发动机生产重启的测试-失败-修复，有助于评估可负担性选项（查看设计变更对发动机的影响），从而推断出最小化开发成本的潜在途径。

![Figure 1. The Affordability Modeling Framework for the RS-25 engine [6]](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24083001.png)

实现 RS-25 发动机的经济性是一项正在进行的研究工作的一部分。图 1 展示[[6]](#6)了实现 RS-25 经济性的设想框架。为了评估经济性，重要的是同时查看系统架构（组成）、性能、安全性和可靠性以及风险的各个方面。因此，RS-25 经济性模型框架分为四个相互依赖的方面：

- 结构模型[[30]](#30)
- 系统和组件性能模型
- 功能和行为模型[[33]](#33)
- 其他工程分析模型

**结论：**
本研究的总体目标是展示 MBSE 在增材制造火箭推进部件中的应用。本文在 MBSE 和 AM 应用范围内对近期文献进行了全面总结。利用 RS-25 发动机计划升级的设计示例，展示了开发可负担性框架的先前工作以及随后将 MBSE 机会应用于可负担性框架。针对 AM 技术带来的挑战和 MBSE 提供的机会（第 2 节），确定了利用 MBSE 实现可负担性的可能途径并展示了应用方法。虽然设计示例用于演示目的。所提出的模型本质上是通用的，有可能适合多种液体火箭发动机设计。此外，还展示了通用形状如何代表发动机部件的多种几何形状并提供测试可靠性。

对液体火箭发动机中代表性部件的结构裕度进行分析的最终结果是部件可靠性或部件故障概率信息。在生命周期设计阶段的早期获得这些信息对可负担性模型框架的其他一些方面大有裨益，例如在生命周期早期执行 FMECA。同时展示了一种扩展结构裕度效用以告知可靠性的方法。可靠性信息也可以追溯到基于模型的 FMECA，以评估风险。值得注意的是，所需的工作是同时利用一个或多个单一事实来源进行的，这表明 MBSE 可用于增材制造火箭推进元件。本质上，这个单一事实来源（RS-25 可负担性模型）也可以改进和开发，以探索其他用途（例如生产和成本）及其对可负担性的影响。

本研究以活动图 (act) 的形式展示了测试策略开发中的操作流程。介绍了每个单独操作的可执行文件开发，包括脚本和运行其他软件包 (FEA 包) 的实例。当前的重点是将这些以行为模型呈现的模型转换为完全可执行的 SysML 模型，这将有助于查看 RS-25 发动机的可负担性选项，旨在最大限度地减少发动机测试-失败-修复周期中发生故障和修复的概率。实现这一转变的研究包括：将 FEA 信息应用于神经网络，以及对设备设施和控制要求进行建模 (NASA-STD6033)。因此，这也需要为 RS-25 发动机执行特定的 AM 设计变更信息，以便进一步实施。

`参考文献`
<a id="19">[19]</a>J. B. Holladay, J. Knizhnik, K. J. Weiland, A. Stein, T. Sanders, and P. Schwindt, “MBSE Infusion and Modernization Initiative (MIAMI): ‘Hot’ Benefits for Real NASA Applications,” in 2019 IEEE Aerospace Conference, 2019, vol. 2019-March, pp. 1–14, doi: 10.1109/AERO.2019.8741795.
<a id="20">[20]</a>S. Friedenthal, A. Moore, and R. Steiner, A Practical Guide to SysML: The Systems Modeling Language, 3rd ed. Waltham, MA, MA: Morgan Kaufmann, 2015.
<a id="6">[6]</a>A. J. Bower and D. Thomas, “An Affordability Model Framework for the RS-25 Liquid Rocket Engine,” in 2018 Joint Propulsion Conference, 2018, pp. 1–9, doi: 10.2514/6.2018-4460.
<a id="30">[30]</a>S. Lakshmipuram Raghu and L. D. Thomas, “Model Based Failure Mode, Effects and Criticality Analysis (MBFMECA) for the RS-25 Engine using SysML,” in AIAA Scitech 2021 Forum, 2021, doi: 10.2514/6.2021-0305.
<a id="33">[33]</a>S. Lakshmipuram Raghu and L. Thomas, “Modeling Behavior Elements for the RS-25 Engine using SysML for Improved Affordability,” AIAA Propulsion and Energy 2021 Forum, pp. 1–12, Aug. 2021, doi: 10.2514/6.2021-3578.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>AERO</category>
        <category>2022</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>Rocket Engine</tag>
        <tag>SysML</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Model-Based Development of Engine Control Systems:Experiences and Lessons Learnt</title>
    <url>/2025/02/10/013/</url>
    <content><![CDATA[
[Model-Based Development of Engine Control Systems:Experiences and Lessons Learnt](https://ieeexplore.ieee.org/document/9592422)
**2021 MODELS Best Paper Award, Practice & Innovation Track**
`Abstraction`

> Rolls-Royce Control Systems supplies engine control and monitoring systems for aviation applications, and is required to design, certify, and deliver these to the highest level of safety assurance. To allow Rolls-Royce to develop safe and robust systems, which continue to increase in complexity, model-based techniques are now a critical part of the software development process. In this paper, we discuss the experiences, challenges and lessons learnt when developing a bespoke domain-specific modelling workbench based on open-source modelling technologies including the Eclipse Modelling Framework (EMF), Xtext, Sirius and Epsilon. This modelling workbench will be used to architect and integrate the software for all future Rolls-Royce engine control and monitoring systems.

本文介绍了一种名为CaMCOA Studio的软件工具，是由约克大学为劳斯莱斯开发的基于模型的引擎控制系统模型管理平台。整个论文只有四张图，声称用户可以使用但是没有开源代码，所使用的工具链全部都是开源工具（主要是Epsilon和Sirius）。论文分别介绍了几个问题：metamodel创建问题、Sirius的功能问题、模型管理中的EGL、ETL、EVL、ECL使用等，实现了一个Simulink和EMF的模型转换，（原文4.B节）其中，EMF2Simulink使用的是ETL+Simulink driver的组合，Simulink2EMF使用的是CaMCOA先转XML，后转EMF。后文还讨论了多人协同开发等一系列工程问题。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>Sirius</tag>
        <tag>Epsilon</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Failure Mode and Effects Analysis (FMEA Handbook)</title>
    <url>/2024/09/02/012/</url>
    <content><![CDATA[
# 引言

美国汽车工业行动集团（AIAG）和德国汽车工业联合会（VDA）的整车厂（OEM）和一级子供应商成员合作的成果。本手册替代了美国汽车工业行动集团FMEA第四版和VDA Volume 4 "Product and Process FMEA"。

## 目的和说明

FMEA作为一套面向团队的系统的、定性分析方法，其目的是：

- 评估产品/过程中失效的潜在技术风险(evaluate the potential technical risks of failure of a product or process)
- 分析失效的起因和影响(analyze the causes and effects of those failures)
- 记录预防和探测措施(document preventive and detection actions)
- 针对降低风险的措施提出建议(recommend actions to reduce risk)

本手册只考虑技术风险，不涉及财务、实践、战略风险。

## FMEA的目标和限制

> The objective of FMEA is to identify the functions of a product or steps of a process and the associated potential failure modes, effects, and causes. Furthermore, it is used to evaluate whether prevention and detection controls already planned are enough, and to recommend additional actions. The FMEA documents and tracks actions that are taken to reduce risk. The FMEA methodology helps engineers prioritize and focus on preventing product and/or process problems from occurring.

FMEA的目标是识别产品的功能或过程步骤，以及相关的潜在失效模式、影响和起因。此外，它还用于评估计划中的预防和探测措施是否是充分的，以推荐额外的措施。对于采取的措施，FMEA将形成文件并跟踪这些措施的实施情况，以降低风险。FMEA方法可帮助工程师将各种事项按照重要性排序，并将重点放在产品和/或过程中发生问题的预防上。FTA和FMEDA等其他方法可用于定量分析和多点失效分析。

## 企业FMEA整合

### FMEA实施潜在注意事项

- Clear：用严格准确的技术属于描述潜在的失效模式。
- True：准确描述潜在失效的后果。
- Realistic：失效的起因是合理的，不考虑极端事件。
- Complete：对不可预见的潜在失效进行隐瞒。

### 高层管理者的承诺

FMEA过程可能需要相当长的时间才能完成，参与者和高层管理者应重视。

### DFMEA和PFMEA中的知识经验保护

知识产权问题。

### 顾客和供应商之间的协议

包括但不限于：系统边界、必要的工作文件、分析方法和评估表。

### 过渡策略

从旧的两个手册过渡到此新手册的说明。

### FMEA基础版和衍生版

基础FMEA不针对某个具体项目，因此允许对需求、功能和措施进行笼统的概述。衍生版是面向企业或者场景的基础FMEA具体化。

## 产品和过程FMEA

FMEA的三种使用场景：（1）新设计、新技术或新过程；（2）现有设计或过程的新应用；（3）对现有设计或过程的工程变更。

### 设计FMEA（DFMEA）

一种主要由设计责任工程师/团队使用的分析技术，用于确保在将零件交付生产之前，尽可能考虑并解决潜在失效模式及其相关失效起因或机理。设计FMEA用于分析如快/边界图所示边界中所定义的系统、子系统或相关组件的功能，其内部要素之间的关系以及系统边界外要素之间的关系，从而识别出可能存在的设计缺陷，将潜在的失效风险降到最低。

### 过程FMEA（PFMEA）

分析制造、装配和物流过程中的潜在失效，以确保生产的产品符合设计的目的。过程FMEA通过考虑过程变差可能导致的潜在失效模式来分析过程，以确定预防措施的优先顺序，并根据需要改进控制。其总体目标是在生产开始之前分析过程并采取措施，以避免与制造和装配有关的不必要缺陷以及这些缺陷产生的后果。

### 不同FMEA之间的协作

对于制造商而言，一个好的开始是确保当失效影响相同时，DFMEA和PFMEA的严重度相同。

## 项目策划

……
]]></content>
      <categories>
        <category>Book</category>
        <category>Handbook</category>
        <category>AIAG &amp; VDA</category>
      </categories>
      <tags>
        <tag>FMEA</tag>
        <tag>Safety</tag>
        <tag>Management</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Advancing Domain-Specific High-Integrity Model-Based Tools:Insights and Future Pathways</title>
    <url>/2025/02/12/014/</url>
    <content><![CDATA[
[Model-Based Development of Engine Control Systems:Experiences and Lessons Learnt](https://dl.acm.org/doi/abs/10.1145/3640310.3674094)

`Abstraction`

> Rolls-Royce Control Systems supplies engine control and monitoring systems for aviation applications, and is required to design, certify, and deliver these to the highest level of safety assurance. To allow Rolls-Royce to develop safe and robust systems, which continue to increase in complexity, model-based techniques are now a critical part of the software development process. In this paper, we discuss the experiences, challenges and lessons learnt when developing a bespoke domain-specific modelling workbench based on open-source modelling technologies including the Eclipse Modelling Framework (EMF), Xtext, Sirius and Epsilon. This modelling workbench will be used to architect and integrate the software for all future Rolls-Royce engine control and monitoring systems.

本文是接着21年论文对CaMCOA Studio介绍的延续，介绍了这种联合Simulink和Sirius的MBSE工具，这篇展示了更多信息。第二节指出一个模型要在不同的抽象层级中表示，也就是NDSM、PDDM、EAM等，他们要在同一个平台上应对这些不同信息层级的模型，并处理追溯性、兼容性等问题。第三节介绍了一些挑战，有软件性能、模型间索引、版本变更带来的模型迁移。第四节汇总了一些代码开发的心得和经验。第五节结合了将软件迁移到Web端的可能性，如使用Sirius Web或GLSP。第六节提出了在云端创建的设想。总体上是对CaMCOA项目的更详细更全面的汇总报告和工具介绍。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>Sirius</tag>
        <tag>Epsilon</tag>
      </tags>
  </entry>
  <entry>
    <title>小记：Modeling Behavior Elements for the RS-25 Engine using SysML for Improved Affordability</title>
    <url>/2024/08/31/011/</url>
    <content><![CDATA[
为运载火箭（如太空发射系统 (SLS)）开发复杂推进系统的成功之路取决于性能、可靠性和成本之间的最佳平衡。在过去十年中，复杂推进系统的技术和创新应用超越了运载火箭的开发，转向提高可负担性和安全性。因此，本研究旨在补充正在进行的努力，即为 RS-25 发动机建立一个基于模型的平台，以实现可负担性。该发动机被选为研究候选是因为需要重启生产，采用新技术并降低成本。利用基于模型的系统工程 (MBSE) 的范例，结构架构和基于模型的平台用于执行故障模式、影响和危害性分析 (FMECA) 之前已在系统建模语言 (SysML) 中建模和开发。本研究的重点是扩展基于模型的可靠性框架，以包括 RS-25 发动机的行为方面（发动机性能、测试策略、设计变更实施和结果等）。我们已经详细说明了逐步的努力并讨论了结果，以开发 RS-25 发动机的全面可负担性平台。

主要介绍了用SysML创建RS-25的一些图的内容。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Artical</category>
        <category>AIAA Propulsion and Energy Forum</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>Rocket Engine</tag>
        <tag>SysML</tag>
        <tag>Simulation</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Automation in Model-Driven Engineering:A look back, and ahead</title>
    <url>/2025/02/13/015/</url>
    <content><![CDATA[
[Automation in Model-Driven Engineering: A look back, and ahead](https://dl.acm.org/doi/abs/10.1145/3712008)

`Abstraction`

> Model-Driven Engineering (MDE) provides a huge body of knowledge of automation for many different engineering tasks, especially those involving transitioning from design to implementation. With the huge progress made in Artificial Intelligence (AI), questions arise about the future of MDE, such as how existing MDE techniques and technologies can be improved or how other activities that currently lack dedicated support can also be automated. However, at the same time, it has to be revisited where and how models should be used to keep the engineers in the loop for creating, operating, and maintaining complex systems. To trigger dedicated research on these open points, we discuss the history of automation in MDE and present perspectives on how automation in MDE can be further improved and which obstacles have to be overcome in both the medium and long-term.

![纵轴对应MDE能实现的功能，横轴对应所属技术领域](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/25021301.png)

一篇综述性质的文章，一方面回顾了典型的MDE技术，一方面做了技术展望。
回顾方面如图所示，该文章按照建模、模型验证、模型管理等类型对功能进行了分类（2.1节），然后介绍了几种MDE的技术类型（这个分类挺让人迷惑的，没看懂这么分有什么意义，可能是想突出AI和LLM）（2.2节）。从第三节开始介绍对AI的思考，介绍了个别工作，其余的都是设想，本质上是技术驱动不是工程需求。提出了几个其他的工程需求：标准不统一、性能提升，也是常见的问题。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>TOSEM</category>
        <category>2025</category>
      </categories>
      <tags>
        <tag>Review</tag>
        <tag>MDE</tag>
        <tag>Epsilon</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Picto Web:A Tool for Complex Model Exploration</title>
    <url>/2025/02/15/017/</url>
    <content><![CDATA[
MODELS2022: [Picto web: a tool for complex model exploration](https://dl.acm.org/doi/abs/10.1145/3550356.3559094)

CPS2024: [Exploring complex models with picto web](https://www.sciencedirect.com/science/article/pii/S0167642323001193)

[Picto Web开源代码](https://github.com/epsilonlabs/picto-web)

`Abstraction`

> Picto Web is a multi-tenant web-based tool for complex model exploration. It can transform different types of models into a variety of transient web-based views in formats such as HTML, Graphviz and PlantUML using rule-based model-to-text transformations. Picto Web implements a lazy view computation approach to support large models and complex transformations efficiently, and includes model and transformation template monitoring and push notification facilities to automatically recompute views when either are modified and deliver updated views to clients. The tool is packaged as a Docker container for ease of deployment.

![展示效果](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/25021501.png)

本文是对原来Eclipse Picto工具的网页支持，模型在本地生成，然后可以用网页打开与查看，使用效果和本地一样。

- 第一节介绍了两种技术路线，也就是相关工作Sprotty（也是基于Eclipse的）和本文的Picto。
- 第二节分别讲技术层级（分为了FileWatcher、Transformer、ViewContentCache、PictoController）、效果演示和中间件的工作模式（分别是EGL、EGX和Picto）。
- 第三节展示了一次操作在整个平台当中的运行过程。

未来展望里提到的不同版本模型对比很好。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS</category>
        <category>2022</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Epsilon</tag>
        <tag>Picto</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Towards Runtime Monitoring for Responsible Machine Learning using Model-driven Engineering</title>
    <url>/2025/02/14/016/</url>
    <content><![CDATA[
[Towards Runtime Monitoring for Responsible Machine Learning using Model-driven Engineering](https://dl.acm.org/doi/abs/10.1145/3640310.3674092)

`Abstraction`

> Machine learning (ML) components are used heavily in many current software systems, but developing them responsibly in practice remains challenging. ‘Responsible ML’ refers to developing, deploying and maintaining ML-based systems that adhere to humancentric requirements, such as fairness, privacy, transparency, safety, accessibility, and human values. Meeting these requirements is essential for maintaining public trust and ensuring the success of ML-based systems. However, as changes are likely in production environments and requirements often evolve, design-time quality assurance practices are insufficient to ensure such systems’ responsible behavior. Runtime monitoring approaches for ML-based systems can potentially offer valuable solutions to address this problem. Many currently available ML monitoring solutions overlook human-centric requirements due to a lack of awareness and tool support, the complexity of monitoring human-centric requirements, and the effort required to develop and manage monitors for changing requirements. We believe that many of these challenges can be addressed by model-driven engineering. In this new ideas paper, we present an initial meta-model, model-driven approach, and proof of concept prototype for runtime monitoring of human-centric requirements violations, thereby ensuring responsible ML behavior.We discuss our prototype, current limitations and propose some directions for future work.

本文做的事情有：设计了一个元模型MoReML，在list123中展示了例子，用EVL做约束+EGL做M2T，一个截图说例子能运行。本文的动机是说：机器学习模型的运行中涉及到人的因素，因此要对人的行为加以约束，以使用基于模型的技术对模型的输入进行限制和警告。想法是好的，但是未免理想，使用MDE的动机也不强，且本文工作量过于少了，很多方面仅是点到为止，实验部分甚至只有一张cmd截图，在MODELS上出现一个正文6页这样的文章也是出乎意料了。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Epsilon</tag>
        <tag>Responsible</tag>
        <tag>Monitor</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Towards the Formal Verification of SysML v2 Models</title>
    <url>/2025/02/22/020/</url>
    <content><![CDATA[
[Towards the Formal Verification of SysML v2 Models](https://dl.acm.org/doi/abs/10.1145/3652620.3687820)

`Abstraction`

> Systems Modeling Language (SysML) is the de facto standard in the industry for modeling complex systems. SysML v2 is the new version of the language with reworked fundamentals. In this paper, we explore how the new formal semantics of SysML v2 can enable formal verification and various forms of automated reasoning. Formal verification involves mathematically proving the correctness of a system’s design with respect to certain specifications or properties. This rigorous approach ensures that models behave as intended under all possible conditions. Through a detailed examination, we demonstrate how five specific tools – Gamma, MP-Firebird, Imandra, SAVVS, and SysMD – can formally analyze SysML v2 models. We show how these tools support the different concepts in the language, as well as the set of features and technologies they provide to users of SysML v2, such as model checking, theorem proving, contract-based design, or automatic fault injections. We propose a workflow for applying formal methods on SysML v2 models, illustrated by example models and artifacts generated by the above tools.

较早探讨有关SysML v2模型的论文，虽然只是发在MODELS-C上。本文的作者团队来自是布达佩斯大学[ftsrg组(Fault Tolerant Systems Research Group)](http://inf.mit.bme.hu/en)。本文围绕SysML v2，介绍了几种形式化验证工具，并结合案例进行了说明。第二节介绍SysML v2中的与本文有关的要素。第三节介绍了形式化方法的一些特点。第四节介绍了五款工具，分别是：

- SysMD（一种基于SysML v2进行需求建模与开发的工具）
- MP-Firebird（美国海军用于形式化建模的框架+工具）
- Gamma（ftsrg组研发的一套Eclipse开源形式化验证套件）
- Imandra（一种云自动推理平台）
- SAVVS（用于SysML v2的安全分析与验证的Eclispe工具）

第五节一口气介绍了五小段SysML v2的例子，然后用上述这些工具应用在这些案例中，分别展现他们各自的功能。结论是向大家展示SysML v2在形式化验证方面的能力，特别是文本的输入输出是如何被呈现的。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS-C</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>SysMLv2</tag>
        <tag>Formal Methods</tag>
        <tag>Formal Verification</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Modular Language Product Lines:A Graph Transformation Approach</title>
    <url>/2025/02/20/018/</url>
    <content><![CDATA[
MODELS2022:[Modular Language Product Lines:A Graph Transformation Approach](https://dl.acm.org/doi/abs/10.1145/3550355.3552444)

SoSyM2024:[Modular language product lines: concept, tool and analysis](https://link.springer.com/article/10.1007/s10270-024-01179-9)

[Capone开源代码](https://capone-pl.github.io/)

`Abstraction`

> Modelling languages are intensively used in paradigms like modeldriven engineering to automate all tasks of the development process.These languages may have variants, in which case the need arises to deal with language families rather than with individual languages.However, specifying the syntax and semantics of each language variant separately is costly, hinders reuse across variants, and may yield inconsistent semantics between variants.
>
> To attack this problem, we propose a novel, modular way to describe product lines of modelling languages. Our approach is compositional, enabling the incremental definition of language families by means of modules comprising meta-model fragments, graph transformation rules, and rule extensions. Language variants are configured by selecting the desired modules, which entails the composition of a language meta-model and a set of rules defining its semantics. This paper describes a theory able to check consistent semantics among all languages within the family, an implementation as an Eclipse plugin, and an evaluation reporting drastic specification size reduction w.r.t. an enumerative approach.

![展示效果](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/25022001.png)

本文围绕着一个概念展开：元模型家族与元模型变体。

描述一个系统，元模型可能存在局部差异，包括表达相同含义但是结构不同，或者某些属性是否存在。由此引申出，在模型管理过程中，同样含义的模型操作，在实现过程中也存在微小的差异。本文认为，作为同一个元模型家族的MDE体系，不同模型之间因为微小的差异而不能关联在一起使用，是一种信息上的浪费。可以试图寻求元模型之间的类似“最大公约数”的表示法，“求同存异”，将一个元模型家族的最小不可拆视为一个单元（product），构建一个属于这个家族的树状结构（Language Product Line，LPL），对一系列类似的元模型和模型操作进行建模，同时LPL结构中通过逻辑操作符表达。

本文第三节讲这种概念。第四节讲LPL元模型部分的结构和（离散）数学模型。第五节讲在模型操作视角下，LPL的数学模型，大概含义就是构建了一种动作三元组，通过原子化操作规则（rule）来实现复杂操作的拼装组合。第六节讲工具支持，开发了一种名为Capone（Component-bAsed PrOduct liNEs）的工具，这个工具是基于EMF的，也使用了Henshin库和FeatureIDE库，展示效果如图所示。

本文数学推导较多，概念十分抽象，阅读难度较大。整体概念还是很扎实有趣的，严肃活泼。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS</category>
        <category>2022</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Ecore</tag>
        <tag>Graph</tag>
        <tag>EMF</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Product Lines of Graphical Modelling Languages</title>
    <url>/2025/02/20/019/</url>
    <content><![CDATA[
[Product Lines of Graphical Modelling Languages](https://dl.acm.org/doi/abs/10.1145/3640310.3674082)

[Capone-CS开源代码](https://github.com/antoniogarmendia/capone-graphical-pl)

`Abstraction`

> Modelling languages are essential in many disciplines to express knowledge in a precise way. Furthermore, some domains require families of notations (rather than individual languages) that account for variations of a language. Some examples of language families include those to define automata, Petri nets, process models or software architectures. Several techniques have been proposed to engineer families of languages, but they often neglect the language’s concrete syntax, especially if it is graphical.
> 
> To fill this gap, we propose a modular method to build product lines of graphical modelling languages. Language features are defined in modules, which comprise both the abstract and graphical concrete syntax of the feature. A language variant is selected by choosing a valid configuration of modules, from which the abstract and concrete syntax of the variant is synthesised. Our approach permits composition and overriding of graphical elements (e.g., symbol styles, visualisation layers), the injection of pre-defined graphical styles into language families (e.g., to obtain a high-intensity contrast variant for accessibility), and the analysis of graphical conflicts at the product line level. We report on an implementation atop Eclipse/Sirius, and demonstrate its benefits by an evaluation which shows a substantial specification size reduction of our product line method with respect to a case-by-case specification approach.

![展示效果](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/25022002.png)

本文是对MODELS2022年论文的延续，之前关注的是元模型和模型操作两件事，这篇是对模型家族在Sirius中的显示与操作问题做扩展。Sirius的图形编辑本质上是用.odesign文件控制的，因此本文提出了一种元模型，对这种映射关系做了建模，来支持家族模型结构到Sirius上的元素映射。

第二节都是在回顾Capone的概念和数学模型，工具上也是开发了扩展版的Capone-CS，也就是添加了对Sirius的支持。第三节专门讲元模型和对Sirius是如何映射的。第四、五节讨论了一些细节问题。第六节是对软件的简介，如图所示。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Sirius</tag>
        <tag>Ecore</tag>
        <tag>Graph</tag>
        <tag>EMF</tag>
      </tags>
  </entry>
  <entry>
    <title>Eclipse Modeling Framework 2.0 笔记</title>
    <url>/2025/02/25/022/</url>
    <content><![CDATA[前言：

- 第一部分（1-4章）介绍基本概念；
- 第二部分（5-9章）介绍Ecore和其他形式的关系（UML、Java、XML Schema）；
- 第三部分（10-13章）分析EMF的代码生成工具和案例；
- 第四部分（14-21章）介绍EMF的运行库架构。

# 第1章 Eclipse

## 项目
Eclipse项目本身可以划分为4个主要子项目：Equinox、平台、Java开发工具（Java Development Tools）、插件开发环境（Plug-in Development Environment，PDE）。

# 第2章 EMF介绍

# 第3章 使用EMF.Edit编辑模型

# 第4章 使用EMF——简单概述
用一个例子说明如何在Eclipse中创建一个EMF（不使用Emfatic）。

# 第5章 Ecore建模概念


# 第6章 UML

# 第7章 Java源代码

# 第8章 扩展的Ecore建模

# 第9章 XML Schema

# 第10章 EMF生成器模式

# 第11章 EMF.Edit生成器模式

# 第12章 运行生成器

# 第13章 示例——实现模型和编辑器

# 第14章 探索元数据

# 第15章 持久化

# 第16章 客户端编程工具箱

# 第17章 更改模型

# 第18章 验证架构

# 第19章 EMF.Edit编程

# 第20章 Eclipse IDE之外的应用领域

# 第21章 EMF 2.3和2.4

# 附录A UML符号

# 附录B 示例模型概述

# 附录C 参考文献

]]></content>
      <categories>
        <category>Book</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>EMF</tag>
        <tag>Eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>SysML v2手册导读</title>
    <url>/2025/02/24/021/</url>
    <content><![CDATA[
[ **OMG System Modeling Language (Version 2.0 beta 2)** ](https://www.omg.org/spec/SysML)

## 第六章：介绍

> Clause 7 describes SysML from a user point of view. Its subclauses describe the modeling constructs in SysML, including for each a general overview, related abstract syntax diagrams and a description of the textual and graphical notation. The overviews in this clause should be considered informative. The abstract syntax and notation subclauses, however, are normative, including descriptions of the processing of the textual notation and its relationship to the graphical notation and the abstract syntax.

**第七章是从用户的视角描述的SysML。** 每个子章节描述了SysML的构造，包括一个总体视角、相关抽象语法图、一个文本表示和一个图形表示。这部分内容应该是“信息性的”。

> Clause 8 provides the normative specification of the metamodel that defines the SysML language. This includes the concrete syntax (textual and graphical notations), the abstract syntax and the semantics for the language. The SysML abstract syntax and semantics are formally extensions of the Kernel abstract syntax and semantics provided by KerML (as discussed in 6.1 ). However, this clause does not cover details of the Kernel metamodel, which are included by normative reference to the KerML specification.

**第八章提供了定义SysML语言的元模型的标准说明。** 包括具体语法（本文和图形表示）、抽象语法和语言语义。SysML的抽象语法和寓意是KerML的扩展。

> Clause 9 specifies a set of model libraries defined in SysML itself. The Systems Library extends the Kernel Library in order to provide systems-modeling-specific semantics to SysML language constructs. The Domain Libraries provide domain-specific models on which users can draw when creating their own models. Each model library is described with a set of subclauses that covers each of the top-level packages in the model library, referred to as its library models.

**第九章介绍了SysML的模型库。** 为了提供构造SysML语言架构系统建模的具体语义，系统库扩展了Kernel库。领域库提供了特定领域模型，使得用户能在创建自己的模型时候进行加工。每个模型库都由对应的library model子章节包描述。

## 第七章：语言描述

SysML直接继承的KerML的部分（对应原文7.2-7.6节）：

- Elements和Relationships：定义模型的基本图形结构。
- Dependencies：建模元素之间的关系。
- Annotations：为一个模型附加元模型，包括评论和文字表示。
- Namespaces：包含和命名元素。
- Packages：组织模型中的元素。
- Specialization：元素的专业化（可以理解为某种描述细化），包括subclassification子分类、subsetting子集、redefinition重定义和featureTyping特征类型。
- Expressions：指代计算、案例结果、约束和形式化需求。和KerML规范的Expressions相等。

以下是建立在KerML基础上的建模结构（对应原文7.6-7.26节）：

- Definition和Usage：这两个是SysML语言的基本范式。一个概念能被define一次然后被用在不同的地方，一个usage可以被specialize。Variability表示定义或用例的变体。
- Attributes和Enumerations：表示事物的属性性质信息。
- Occurrences：用在时空场景下的建模，如时间段或者空间位置坐标。
- Individuals：对个例进行建模。
- 对structure结构进行建模，包括分解、互联、分类等：
- - Items：表示过程、流程或者一个系统的项目。
- - Parts：结构的基本单元。
- - Ports：用于parts连接用的端点/端口。
- - Connections和Interfaces：parts和ports内在连接的表示形式。
- - Allocations：通过一个元素实现对另一个元素的责任/功能分配。
- 对Behavior表现进行建模，描述parts的内在行为：
- - Actions：动作是由part执行的，包括时序和内在items流。
- - States和Transitions：状态机由part表示的，转换存在与状态之间，这两者外加动作都能在一个状态或者一个转换期间执行/运行。
- Calculations：建模计算是一种参数化表示，能够用于评估生成的具体结果。
- Constraints：建模约束是一种条件，可以被定量为是或否，也可以被假设被是或否。
- Requriements：建模需求是一种特殊的constraint，它包含一个subject，subject满足之后才能成为一个有效的解决方案。
- Cases：建模案例用来定义一系列步骤，这些步骤被用来生成相关预期subject结果、可能的外部actors角色或者实现一个具体的objective目标。
- - Analysis Cases：分析一个subject用的actions。
- - Verification Cases：验证一个需求如何被subject满足。
- - Use Cases：用来衡量好处的一种行为。
- Viewpoints和Views：建模视点反应了利益攸关者的关注信息，视角反应了满足特定视点的检索和检索结果。
- Metadata：用来标记其他SysML语言创建的模型。

## 第八章：元模型

- Concrete Syntax具体语法：包括用于描述文本语序的文本语法和用于视图的图形符号。两种表示法均可以独立描述一个完整模型。
- Abstract Syntax抽象语法：抽象语法被specified as指定为MOF模型（Meta-Object Facility，元对象工具）。抽象语法为具体语法提供基础，使得模型可以在不同的表示形式之间转换，同时保持其语义完整性。在SysML v2中，抽象语法通过KerML进行定义，提供了统一的元模型结构，支持系统工程建模的各个方面。
- Semantics语义：是基于KerML构建的。
**（具体语法是比较直观的，就是建模时候的文本规则；抽象语法和语义这两者介绍得比较繁琐，但是没看出来在实际建模中的含义…有待讨论）**

SysML中的关键词：

> about abstract accept action actor after alias all allocate allocation analysis and as assign assert assoc assume at attribute bind binding block by calc case comment concern connect connection constraint decide def default defined dependency derived do doc else end entry enum event exhibit exit expose filter first flow for fork frame from hastype if implies import in include individual inout interface istype item join language loop merge message metadata nonunique not objective occurrence of or ordered out package parallel part perform port private protected public readonly redefines ref references render rendering rep require requirement return satisfy send snapshot specializes stakeholder state subject subsets succession then timeslice to transition until use variant variation verification verify via view viewpoint when while xor

特殊字符：

- DEFINED_BY = ':' | 'defined' 'by'
- SPECIALIZES = ':>' | 'specializes'
- SUBSETS = ':>' | 'subsets'
- REFERENCES = '::>' | 'references'
- REDEFINES = ':>>' | 'redefines'
]]></content>
      <categories>
        <category>Document</category>
        <category>OMG</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>SysMLv2</tag>
        <tag>OMG</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Partial Bidirectionalization of Model Transformation Languages</title>
    <url>/2025/02/26/024/</url>
    <content><![CDATA[
[Partial Bidirectionalization of Model Transformation Languages](https://dl.acm.org/doi/abs/10.1145/3640310.3674083)

`Abstraction`

> While most model-transformation languages in Model-Driven Engineering are unidirectional, bidirectionality is valuable when artifacts need two-way synchronization. Although several bidirectional transformation engines have been developed, their behavior is generally considered more difficult to formulate and predict compared to the unidirectional case. In the bidirectionalization approach, users write the forward direction of their transformations in the same unidirectional language they are used to, and obtain a system that (besides performing the complete forward transformation) can automatically propagate in the backward direction the target updates. When possible, full bidirectionalization is desirable, but far from trivial.
> In this paper we propose a partial bidirectionalization approach, by partial compilation of a unidirectional language into a bidirectional language, and coupled execution of the two language engines. Forward transformation is still complete, whereas the target updates that can be back-propagated are deletions and modifications of a well-defined part of the target model. While the extent of the bidirectionalization depends on the two coupled systems, in this paper we provide a general combination scheme and we briefly discuss its well-behavedness. Then we use our technique to bidirectionalize the ATL model-transformation language on top of the GRoundTram bidirectional graph-transformation system.

本文就ATL的模型双向转换做了讨论，提出了一种在一定条件下能自动化模型双向转换的技术，ATL+GroundTram。

- 第二节给出了案例，并介绍了GRoundTram工具（内部使用UnQL），GRoundTram有一套离散表示体系没看太明白，大致是能将支持单向转换的ATL代码生成出一个支持双向转换的UnQL代码，然而这种转换只在一定条件下成立，正向转换不难反向难。
- 第三节分析这种双向化操作的本质：完整的单向与定义明确的双向属性的结合。文中用一张图分析单向转换语言和双向转换语言之间的映射机制，翻译器能将部分内容翻译为双向转换语言，双向转换产生的目标模型必须是相应单向系统的目标模型的子模型。
- 第四节介绍支持工具，即将ATL集成到GRoundTram上，包括大致流程、支持双向的部分和不支持双向的原因。
- 第五节对结果评估和讨论，包括代码数量（成功转换的比例）、证明其运行良好（写定义+证明……）和应用在其他语言上的前景。

全文的表述是很抽象的，我理解得很表面，有关论述方面讨论得比较深入，评估部分值得再看。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Model Transformation</tag>
        <tag>ATL</tag>
        <tag>UnQL</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：10 years of Model Federation with Openflexo:Challenges and Lessons Learned</title>
    <url>/2025/02/27/025/</url>
    <content><![CDATA[
[10 years of Model Federation with Openflexo: Challenges and Lessons Learned](https://dl.acm.org/doi/abs/10.1145/3640310.3674084)

`Abstraction`

> In the context of complex system development, heterogeneous modeling responds to the need to integrate several domains. This need requires the use of the most appropriate formalism and tooling for each domain to be efficient. Model federation promotes the semantic interoperability of heterogeneous models by providing the means to reify correspondences between different model elements, add custom behaviors and bridge the gap between technological spaces. As such, it can be used as an infrastructure to address many different system engineering problems. This is what we have been doing for over a decade, as part of a close collaboration between a small software engineering startup and academia. This paper reports on this experience.
> Concretely, we discuss the context, ambitions, and challenges that led to the inception of our practice of model federation, and we present five use cases experiences, stemming from real industrial and academic needs, and elaborate on lessons learned. In addition, we also report on challenges and lessons learned regarding the development and maintenance of a model-driven model federation tool, the Openflexo framework. Finally, we set up a road map for the future of model federation and Openflexo.

当年的best paper之一。本文是Openflexo团队回顾MDE方面的经验的论文，强调了他们对MDE开发的学术与工程理想——模型联合体，然后讲他们是如何理解相关环节的（四个挑战），怎么为之实践的（五个例子），最后给出了他们最终的愿景。

第二节介绍了四个挑战：

- Preserving existing practices：尽量确保现有的工作模式和工作模型不被破坏或干扰；
- seeing everying as a model：一个系统信息应该来自模型；
- Conceptualizing and organizing：不同领域的概念互相独立分隔，但是存在一定的语义连接；
- Mastering evolution：模型的不同侧面应该确保整体系统的一致性。

第三节介绍模型联合体（Model Federation）的概念。第四节就开发过的五个例子来分析，就上面四个挑战分别讨论，并评估了他们分别做到了哪些方面。第五节讨论经验教训：

- Separate business from technology：流程概念和技术建模分开，每个人应该专注做当前层级的模型而不要跨模型建模。
- Tool maintenance & dissemination：开发完的软件工具应该不断维护和向工业界推广。
- Need for many concrete syntax：文本建模在模型多的时候比图建模有用。
- Federation requires organization：模型联合体的概念需要统一。
- Modeling requires flexibility：建模应具有一定的灵活性，在一些方面应该可以自定义。
- Modeling needs model capitalization：好的模型和模型工具应该可以被大量重用，建立一个复用性强的知识库有利于新模型的开发效率。

本文叙述思路明确，表达简明易读，讨论的逻辑也很在理，很符合我对MDE的一些理解和认知，总结的一些内容也值得再日后回头翻阅。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>MBSE</tag>
        <tag>Model Federation</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Solving the Instance Model-View Update Problem in AADL</title>
    <url>/2025/03/06/026/</url>
    <content><![CDATA[
[Solving the Instance Model-View Update Problem in AADL](https://dl.acm.org/doi/abs/10.1145/3550355.3552396)

`Abstraction`

> The Architecture Analysis and Design Language (AADL) is a rich language for modeling embedded systems through several constructs such as component extension and refinement to promote modularity of component declarations. To ease processing AADL models, OSATE, the reference tool for AADL, defines another model (namely ‘instance’ model) computed from a base ‘declarative’ model/s. An instance model is a simple object tree where all information from the declarative model is flattened so that tools can easily use this information to analyze the system. However for modifications, they have to make changes in the complex declarative model since there is no automated backward transformation (deinstantiation) from instance to declarative models. Since the instance model is a ‘view’ of the declarative model, this is a view-update problem. In this paper, we propose the OSATE Declarative-Instance Mapping Tool (OSATE-DIM1 ), an Eclipse plugin for deinstantiation of AADL models implementing a solution of this view-update problem. We evaluate OSATE-DIM with a benchmark of existing AADL model processing tools and verify the correctness of our deinstantiation transformations. We also discuss how our approach could be useful for decompilation of Object-Oriented languages’ intermediate representations.

在写法上很受启发的一篇工程文章。作者修补了AADL工具OSATE的图形化显示同步问题，提出了OSATE-DIM工具并开源。

OSATE存在一个问题：修改图形之后对应的文本不能自动更新，也就是Instance model和Declarative model之间并不是天然的一一对应。Declarative model作为文本模型，能生成Instance model，但是如果直接修改Instance model，Declarative model不会发生变化。为解决这个问题，作者首先在2.1节介绍了AADL的元模型和类继承情况，然后在2.2节用数学语言介绍了两种不同的文本和图形映射关系，参考的是Lenses的框架（原文引用8），本文使用的是通过监控变化量，来反向修补模型变化的。3.1节提出假设条件，3.3节围绕一个案例做了几种转换分析，3.4节说明了避免冲突的措施。第4节介绍开发的工具，包括场景和选择参数配置。第5节评估，称其在两个例子上做了测试。第6节对一些问题做了讨论（没看太懂），介绍了相关工作，并无其他实验和量化。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS</category>
        <category>2022</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Model-View</tag>
        <tag>AADL</tag>
        <tag>OSATE</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Model Transformation Testing and Debugging:A Survey</title>
    <url>/2025/03/07/028/</url>
    <content><![CDATA[
[Model Transformation Testing and Debugging:A Survey](https://dl.acm.org/doi/abs/10.1145/3523056)

`Abstraction`

> Model transformations are the key technique in Model-Driven Engineering (MDE) to manipulate and construct models. As a consequence, the correctness of software systems built with MDE approaches relies mainly on the correctness of model transformations, and thus, detecting and locating bugs in model transformations have been popular research topics in recent years. This surge of work has led to a vast literature on model transformation testing and debugging, which makes it challenging to gain a comprehensive view of the current state-of-the-art. This is an obstacle for newcomers to this topic and MDE practitioners to apply these approaches. This article presents a survey on testing and debugging model transformations based on the analysis of 140 papers on the topics. We explore the trends, advances, and evolution over the years, bringing together previously disparate streams of work and providing a comprehensive view of these thriving areas. In addition, we present a conceptual framework to understand and categorize the different proposals. Finally, we identify several open research challenges and propose specific action points for the model transformation community.

本文是研究“模型转换测试和调试”的综述，通过对140篇论文的调研，从不同的角度分析了现有该领域工作的特点，包括进行分类和讨论。

- 第一章介绍论文动机和文章结构。
- 第二章介绍研究背景，包括一些基本术语：元模型、模型转换和先前的一些工作。
- 第三章介绍了本文所用使用的分类方法，围绕图4中展示的结构对测试和调试环节进行分类梳理（也就是说不是所有的140篇论文都涵盖这个图4的全流程）。
- 第四章讲论文调研的流程，包括主要的四个问题、论文收集和选择标准、数据分类等。
- 第五章进入正题，回答问题一“每个论文的测试过程重点研究了什么？”，开始围绕四个问题就收集到的论文和分类结果进行一一陈述。其中5.2讨论的Test Oracle是有关模型转换理念的分类
- 第六章回答问题二“模型转换调试的方法是什么？”。
- 第七章回答问题三“如何评估模型转换方法？”。7.1节先介绍了调研中提到的一些工具，7.2节介绍一些案例，但没有介绍具体的评估方法。
- 第八章回答问题四“未来挑战有哪些？”。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>CS</category>
        <category>2023</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Model Transformation</tag>
        <tag>Survey</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Incremental execution of model-to-text transformations using property access traces</title>
    <url>/2025/03/06/027/</url>
    <content><![CDATA[
[Incremental execution of model-to-text transformations using property access traces](https://link.springer.com/article/10.1007/s10270-018-0666-5)

`Abstraction`

> Automatic generation of textual artefacts (including code, documentation, configuration files, build scripts, etc.) from models in a software development process through the application of model-to-text (M2T) transformation is a common MDE activity. Despite the importance of M2T transformation, contemporary M2T languages lack support for developing transformations that scale with the size of the input model. As MDE is applied to systems of increasing size and complexity, a lack of scalability in M2T transformation languages hinders industrial adoption. In this paper, we propose a form of runtime analysis that can be used to identify the impact of source model changes on generated textual artefacts. The structures produced by this runtime analysis, property access traces, can be used to perform efficient source-incremental transformation: our experiments show an average reduction of 60% in transformation execution time compared to non-incremental (batch) transformation.

本文是对EGL和EGX在运行速度方面的优化，通过设计一种运行时分析工具，降低了转换时间，提高了代码运行效率。是对引用三（Property access traces for source incremental model-to-text transformation.Modelling Foundations and Applications—11th European Conference 2015）论文的扩展。第二章结合扫了EGL。第三章介绍Property access traces，包括基本概念、EGX的使用、Metamodel、离线运行模式和在线运行模式。第四章结合两个例子对效率提升进行分析，并加以讨论。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>SoSyM</category>
        <category>2019</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Epsilon</tag>
        <tag>Model-to-text Transformation</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Tree-Based versus Hybrid Graphical-Textual Model Editors:An Empirical Study of Testing Specifications</title>
    <url>/2025/02/25/023/</url>
    <content><![CDATA[
[Tree-Based versus Hybrid Graphical-Textual Model Editors: An Empirical Study of Testing Specifications](https://dl.acm.org/doi/abs/10.1145/3640310.3674102)

`Abstraction`

> Tree-based model editors and hybrid graphical-textual model editors have advantages and limitations when editing domain models. Data is displayed hierarchically in tree-based model editors, whereas hybrid graphical-textual model editors capture high-level domain concepts graphically and low-level domain details textually. We conducted an empirical user study with 22 participants to evaluate the implicit assumption of system modellers that hybrid notations are superior, and to investigate the tradeoffs between the default EMF-based tree model editor and a Sirius/Xtext-based hybrid model editor. The results of the user study indicate that users largely prefer the hybrid editor and are more confident with hybrid notations for understanding the meaning of conditions. Furthermore, we found that the tree editor provided superior performance for analysing ordered lists of model elements, whereas activities requiring the comprehension or modelling of complex conditions were carried out faster through the hybrid editor.

本文是测试与讨论类型的论文，不是技术文章。

本文围绕一个工程场景做了树状模型和图文混模型工具的性能对比。工程场景是一个MRS多机器人系统，文章第三节介绍了元模型。文章第四节介绍两种模型所用工具，分别是EMF默认的树状编辑器和开发的Graphite图文混合编辑器，介绍了元模型和例子。第五节开始介绍测试过程，22个参与者是如何被培训和测评的，论文设计了三个目标，分别是Performance（与树编辑器相比，用混合编辑器执行某些任务时，用户如何执行？）、Confidence（用户对解决方案的正确性和完整性对​​给定任务有多信心？）、Preference（用户喜欢混合编辑器或树编辑器吗？），通过他们对5个问题的理解和5个任务操作的结果进行分析。第六节介绍结果评价，五六节占全文一半以上。结论是：“关于性能，使用编辑者执行任务的速度之间存在了权衡。混合编辑器更适合理解和建模复杂条件，而树编辑器更适合分析模型元素的有序列表。当建模条件时，混合编辑器会发现更多校正的误差。但是，犯下的错误很小。同样，与混合编辑器进行建模条件的更多击键和更少的点击量。当使用混合编辑器了解条件的含义时，用户对解决方案更有信心。最后，在研究之前，有50％的参与者更喜欢混合编辑。最后，百分比增加到73％，显示对混合动力编辑者的偏好增加。”
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Conference</category>
        <category>MODELS</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Sirius</tag>
        <tag>Xtext</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Unlocking Synergy:Leveraging SysML and Modelica with Bi-Directional Transformation and Simulation Integration Standards</title>
    <url>/2025/04/27/029/</url>
    <content><![CDATA[
[Unlocking Synergy: Leveraging SysML and Modelica with Bi-Directional Transformation and Simulation Integration Standards](https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/iis2.13239)

`Abstraction`

> Both the SysML and Modelica standards are used in the field of Systems Engineering (SE) to model systems from different perspectives, on different abstraction levels. SysML is strong when modeling systems on a functional level because it provides different views. With the capabilities of other simulation specifications, the engineers can simulate the system architecture. On the other hand, an open standard, such as Modelica is a key enabler for representing multi-physical systems described by differential, algebraic, and discrete equations. With the symbolic manipulation, the dynamics of the systems are represented in state space form, and solved by the numerical integration methods fixed or variable step. However, it is clear that the connection between systems engineering and system simulation, with their respective domain knowledge of the actual equipment in their system, is missing. By seeing these complementary values, the authors demonstrate language interaction to integrate SysML and Modelica to achieve complimentary values through bi-directional transformation and simulation.

- 在行为模型中增强物理级系统架构的复用性；
- 通过Modelica标准命令促进仿真集成；
- 进行各种类型的分析，包括确认、验证、预测分析和资产分析来对比不同的需求。

本文的贡献：

- 管理系统的复杂性和异构性：管理SysML的三个OOSEM级别概念级、逻辑级和物理模型。
- 标准化集成
- 集成仿真
- 早期需求确认和资产分析的补充性价值
- 支持标准兼容的工具开发

本文使用的方法：

- 使用SysML-Modelica转换和SysPs标准。（OMG 2012和OMG 2021）
- 与Modelica指令库集成（Open Source Modeica Consortium 2023）

工具的操作流程：

![流程](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025042701.png)

本文有三个工具

- CATIA Magic Cyber Systems Engineers，用于在SysML语言中建模系统结构；
- CATIA Magic Model Analyst，用于执行模拟，从而实现对系统体系结构的需求分析和资产分析
- Dymola，Modelica软件，用于仿真

![步骤](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025042702.png)

七个步骤：

- 导入Modelica连接器：根据OMG的两个标准，把Modelica的基本组件导入到CATIA Magic中；
- 创建基于需求的系统架构：建立三级模型Concept Model、Logical Model和Physical Model；
- 导出Modelica模版模型：导出物理层的Modelica模型，转换到modelica中；
- 行为扩展：通过使用Modelica中的已经写好的组件，填充到转换完的模型中；
- 编译：仿真；
- 优化：针对用户而言，进行参数调整；
- 确认与验证：输出的结果用于资产分析等

此示例演示了如何通过整合Catia Magic（SYSML）和Dymola（ModelICA）工具来处理系统工程的复杂性。Modelica被导入CATIA Magic，系统体系结构是根据需求构建的，模板模型从SYSML导出到Modelica，通过Modelica库将行为添加到导入的SYSML模型中，模型Model进行了编译和优化，并根据SYSML系统需求对结果进行了检查和验证。这种集成方法使基于动态物理的行为建模成为可能的一个示例是对水分配系统（WDS）的模拟。该分析包括成本贸易和税收周期评估，允许根据水需求预测做出明智的决策。

个人总结：
本文是CATIA Magic的人完成的一篇工作，展现了如何使用CATIA-Dymola进行SysML和modelica的联合MBSE工作的，整个案例比较完整，涵盖设计到仿真优化全过程，有借鉴意义。思考：本文先进行的SysML建模，后用Modelica进行反补物理模型，这一点跟一些工程顺序可能不同；资产分析等部分没有介绍是如何执行的，大部分功能应该被集成在CATIA Magic软件中了；迭代优化写得也比较模糊；整体工作可能还是偏理想，没有体现多人协同在MBSE中的效果，但已经很好了。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>INCOSE-IS</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>SysML</tag>
        <tag>Simulation</tag>
        <tag>Model Transformation</tag>
        <tag>Modelica</tag>
        <tag>CATIA Magic</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Investigating the Flexibility of the MBSE Approach to the Biomass Mission</title>
    <url>/2025/05/10/031/</url>
    <content><![CDATA[
[Investigating the Flexibility of the MBSE Approach to the Biomass Mission](https://ieeexplore.ieee.org/abstract/document/8986828/)

`Abstraction`

> Model-based systems engineering (MBSE) represents a move away from the traditional approach of document-based systems engineering (DBSE), and is used to promote consistency, communication, clarity, and maintainability within systems engineering projects. MBSE offers approaches that can address issues associated with cost, complexity, and safety. One way that this can be achieved is by performing early functional validation of the high-level spacecraft functional avionics system. The use case discussed in this article focusses on the Biomass model, a systems modeling language-based representation of the Biomass Earth-observation mission. The MBSE approach is used to calculate the required size of the data handling unit onboard the Biomass spacecraft. The functional response of the system in terms of the onboard memory usage throughout the mission is simulated. Traditionally, this level of analysis would not be available at this early stage. The approach aims to replace ad hoc, spreadsheet-based calculations with a formal representation of the system that can be executed, interrogated and quantified. The flexibility of this MBSE approach is demonstrated by applying changes to the Biomass project and assessing the time required to implement these changes in the Biomass model and propagate them through to the results of the simulation. The changes have been made independently of each other and include: changes to the logical architecture, changes to the functional definition, changes to the mission profile, and changes to the requirements. Potential areas for improvement regarding the structure of the Biomass model are highlighted and discussed.

## 介绍

![卫星1.5天的轨道](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051001.jpg)

MBSE的用途：A core question that MBSE seeks to answer is how to integrate engineering models across tools and domain boundaries [6]. MBSE is the formalized application of modeling to support system requirements, design, analysis, optimization, verification, and validation [7]–[9]. By using interconnected models to store, represent, and relate this information and data, projects can expect improvements in consistency, communication, clarity, visibility, maintainability, etc.—thus addressing the growing issues associated with cost, complexity, and safety [10], [11].

本文的目的是展示MBSE方法的“灵活性”（也可以理解为灵敏度）。这是通过将可能的更改应用于生物质项目并评估在生物质模型中实施这些更改所需的时间和精力来完成的，并将它们传播到分析结果。这些更改彼此独立进行，包括：逻辑体系结构的更改，功能定义的更改，更改任务配置文件以及要求的更改。changes to the logical architecture, changes to the functional definition, changes to the mission profile, and changes to the requirements.

本文之所以重要，是因为“changes”是一个成功的系统工程的重要组成部分。

本文提出的两个问题：

- 对于发生在系统规范system specification (functional definition and logical architecture)的变更，MBSE的灵活度如何？
- 对于发生在系统需求和任务规范system requirements and the mission specification的变更，MBSE的灵活度如何？

本文的创新点还在于：介绍了MBSE方法和模型结构的定义，该定义可以用于航天器的电子学功能（high-level functional avionics of a spacecraft, in terms of both structure and behavior），还包括仿真。

## MBSE

While there have been significant efforts to develop the MBSE approach to the simulation and analysis of spacecraft, the focus has remained on the description of system designs, and overlooks the importance of using this information, present in the model, to automatically analyze and validate the system itself.

本文使用的工具：Cameo System Modeler (18.5), produced by No Magic.

## System modeling language

本文使用SysML，尽管有局限性，例如: some semantics have to be modified or used out of their originally intended context, and the notation does not use formal activity specifications.但是他是“最常用的”。

## Biomass mission

生物量检测卫星：一个在25年5月发射的卫星。搭载了一个P波段合成孔径雷达（435MHz）。每年两次全球覆盖。sun-synchronous orbit，每三天基本重复。

SAR雷达的三种模式：OFF（发射前），Ready（休眠状态，海面上时），Measurement（记录科学数据，陆地上时）。

一个PDHU内存（960Gb），内存中有三个目录，一个housekeeping data（7.5kb/s保存），两个science data（分别是66.2Mb/s）。

每次飞行会经过ESA的Svalbard地面站，通过X波段下行天线（X-band downlink antenna）传输数据（467Mb/s），XDA有三个模式Off关闭，Ready准备和Downlink下传。

## Biomass model

本节分析卫星的SAR-PDHU-XDA系统。分为四个层级：System Requierment, Mission definition, Functional Definition(described using structural block definition and internal block diagrams), Logical Architecture(described using behavioral activity and state machine diagrams)。

Mission definition：卫星的四种工作模态（海上关闭、陆地测量、地面站传输和陆地测量+地面站传输同时）。任务定义和系统设计是分离的，不能混淆。

本文实际介绍模式切换的过程是通过模型架构总视图推进的，根据轨道计算得到四种基本工作模态，然后把模态信息（对应mission definition）结合配置信息（functional definition）传输给执行单元进行计算，实际的数学计算仍然是由Matlab完成的。

## Methodology

针对问题一和二的修改案例，来检验MBSE的灵活性。

- A 更新内存限制：960G调整为400G
- B 更新文件夹数量：添加了个文件夹4，内存机制有所改变
- C 更新系统模式定义：SAR数据速率变为原来的四倍
- D 添加behavior：不下传数据
- E 更新任务配置文件：任务和系统是分离的，只更改任务（轨道）不改系统。
- F 更新SAR最大速率：将最大下传速率调整为120Mb/s。

## Results

对A-F的各个案例进行分析，介绍了更改配置所需时间和收集结果所需时间。

## Discussion

好处：更改所需要的时间很短；直观；选取的案例有代表性；任务和系统分离；
局限：设计仿真完需要迭代优化；需要熟练使用者操作；SysML语法和实际场景不太匹配。

## Future work

将这个案例扩展成一个模版；仿真时间需要减少；应用在别的工程案例上。

个人总结：本文围绕生物量监测卫星的测量和下传两个任务做了模拟分析，用SysML建模用Matlab仿真，整体上就是MBSE的一个数学建模，调整了几个配置参数进行分析，甚至可以让Matlab代替SysML的部分独立完成全部环节的仿真，没有实质上凸显SysML的作用。第五节模型介绍部分和第八节讨论部分介绍得略显散乱；前后几张图的串联关系不容易理解；实验略单薄。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>TSMCS</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>SysML</tag>
        <tag>satellite</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Sirius Web:Insights in Language Workbenches An Experience Report</title>
    <url>/2025/05/12/032/</url>
    <content><![CDATA[
[Sirius Web: Insights in Language Workbenches An Experience Report](https://inria.hal.science/hal-04797246/)

`Abstraction`

> Sirius Web is an open-source, web-based language workbench maintained by Obeo and hosted under the Eclipse Foundation. It is the successor of Sirius Desktop, an Eclipse-based language workbench used for producing numerous industrial graphical modeling workbenches in the past decades. Leveraging on this valuable experience, in this article we provide an overview of Sirius Web and document the rationales and good practices that have shaped its development. Specifically, we focus on: 1/ the rationales behind modeling and usability features; 2/ their impact on the development lifecycle of tool-supported modeling languages; 3/ the software architecture of the language workbench and the resulting modeling environments. Concrete examples illustrate both the detailed rationales and the use of the tool. We also discuss alternative approaches Obeo considered. In addition to introducing Sirius Web, this paper also aims to help language workbench developers make informed design choices for the future development of web-based language workbenches. It also identifies current open questions for the software language engineering community. Moreover, by addressing current open questions in software language engineering, this study contributes to the ongoing dialogue in the community, potentially steering future research directions.

本文关注：基本原理、对软工的影响和作用、语言工作台软件架构。

## Introduction

Sirius Web（后文简称SW）是一种基于Web的语言工作台（language workbench）。

本文的一作Théo Giraudet是开发人员、二作Mélanie Bats是Obeo的CTO、五作Pierre-Charles David是Sirius Desktop的项目负责人。

## Sirius Web

### Overview of the tool

SW is a web application that can be accessed through a web browser client.
The server part is developed using Java, Spring Boot, and EMF, and the client is made with TypeScript and React.
SW uses GraphQL for defining the communication protocol between the server and client.
作用：SW is agnostic of the application domain and mainly targets domain experts. It may be useful for any domain that has to build graphical DSMLs for their own concerns.

SW的使用者分为两个类型：studio maker和end user。

![基本概念](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051201.jpg)

SW提供了两个源语言来定义领域模型和领域视图。语言设计者可以通过GEMOC Studio或Epsilon使用Java API或SW来定义语法semantics。抽象语法符合Ecore。

To describe the mapping between the concrete syntax elements and the abstract syntax elements, the studio maker uses from the View DSL an embeded query language called AQL (Acceleo Query Language) and inspired by OCL (Object Constraint Language).

SW also proposes to create languages with its Java APIs, enabling the use of Ecore to develop abstract syntax.

![效果图](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051202.jpg)

- explorer view
- representation editor
- details view
- model root

当前使用SW的工具：

- [SysON for systems engineering](https://mbse-syson.org/)
- [Papyrus Web for UML](https://gitlab.eclipse.org/eclipse/papyrus/org.eclipse.papyrus-web)
- [parts of Obeo SmartEA for enterprise architect](https://www.obeosmartea.com/en/)

### Sirius Web team

SW由七个工程师开发！Mélanie Bats和Benoît Combemale都有十年工作经验。

### Overview of the main considered requirements

We elicited six main requirements to fulfill for developing language workbenches dedicated to graphical modeling environments.

- Heterogeneous Modeling: Language workbenches must be able to deal with different models in a coordinated and usable way.
- Collaborative modeling: Each studio maker has different domain expertise but needs to work together to build a unique system.
- Agile language development: The language workbench must provide a way to ease the iteration during the language development process between these two roles.
- Separation of Concerns: For example, a studio maker may design the abstract syntax once, to then let other studio makers work on various concrete syntaxes on the same abstract syntax and over different periods (e.g., different projects over time).
- Deployment: This requirement follows the DevOps approach, aiming to bridge the gap between the development and the production.
- Interoperability: Developed studios usually have to interoperate with other tools of the end users.

## Rationales

### Language workbench development features

#### Rationale 1: Adapting the language workbench to the studio maker expertise

Sirius Web offers three different development interfaces:

- the low-code facilities in the browser;
- a Java-based API based on the Domain and View DSLs;
- a Java-based API directly based on EMF.

Each interface provides different abstractions, each with varying degrees of customization possibilities. Through one specific interface, the studio maker can contribute to extending the other interfaces with new services.

#### Rationale 2: Enabling heterogeneous representations

A language workbench should propose the development of multiple representations from different representation types (e.g., diagram, form) for a DSL.

Sirius Web proposes different representation types (diagrams, forms) for which a studio maker can create a representation type description.Moreover, from the Java API the studio maker can create new representation types and use them from the low-code interface.

新的问题：语言工作台应该支持模型变体表示法。

#### Rationale 3: Bootstrapping the language workbench

The features available in the language workbench (representations, interactive features such as completion, layouting) should also be available or even customizable for the developed studios.
In other words, the language workbench should mainly be a specific studio that proposes meta-languages.

Bootstrapping is a common technique when designing a language workbench. For example, Xtext (Efftinge & Völter 2006), MPS (Pech et al 2013), Spoofax (Wachsmuth et al. 2014) are bootstrapped.

新的问题：A current challenge is how to help developers in reporting issues as they develop their language workbench.

#### Rationale 4: Bridging the gap between the concrete and the abstract syntax

AQL is the language that Obeo provides in Sirius Desktop and Sirius Web for navigating the model. In particular, it is used to describe the mapping from the abstract syntax elements to the concrete syntax elements in the View DSL. The mapping can be conditional to be applied only when an abstract syntax element’s property has a specific value, for instance, enabling more dynamic concrete syntax. Finally, it is also used to describe the behavior of the different tools. 

AQL is inspired by OCL (OMG 2014) and has a very similar syntax, with the following specific difference: AQL has a static typing system like OCL, but the type system checking is separated from the execution phase. This enables to type check on demand: enabled for validation at design time, for the studio maker; and disabled in the studio, to avoid performance overhead and thus execute AQL queries faster. AQL supports union types to avoid falling back on a top type such as Object when a variable can have different types. This allows the list of common attributes of the possible types to be collected and provided to the studio maker via auto-completion.

### Language Development Lifecycle

#### Rationale 5: Uncoupling abstract syntax and concrete syntax development lifecycles

The abstract and concrete syntaxes should be developed as independently as possible, even at different times when possible.

In Sirius Web, the development of abstract syntax and concrete syntax are two different activities with their own lifecycle. This rationale follows the classical separation of concerns between views and models as widely adopted in the human-computer interaction domain (the MV* pattern). However, this requires the co-evolution of the abstract syntax and the concrete syntax: each time the studio maker modifies the abstract syntax, they might have to modify the concrete syntax and vice versa.

#### Rationale 6: Enabling seamless studio deployment

When a studio maker creates or modifies a studio, Sirius Web automatically and seamlessly deploys this studio on the current Sirius Web instance.

### Software Architecture

#### Rationale 7: Enabling model edition by interacting with the concrete syntax elements

![三种具体语法和抽象语法的解析方式](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051203.jpg)

[Xtext](https://www.eclipse.org/Xtext/)和[Langium](https://langium.org)是第一种方案。 In this approach, the instance of the abstract syntax (AST) is directly inferred from the manipulation of the model through the concrete syntax.

[MPS](https://www.jetbrains.com/mps/)和[Freon](https://www.freon4dsl.dev)是第三种方案。which is used only to project the AST to the end user.

Obeo的SW使用的是第二种方案。

#### Rationale 8: Relying on a cloud-native architecture

The language workbench and the developed studios should be accessible without any installation on the devices of the different users.

![Sirius Web云架构](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051204.jpg)

#### Rationale 9: Integrating the studios with other tools and vice versa

Sirius Web provides mechanisms to be integrated with, or to integrate, other environments. Since the Sirius Web front-end is web-based, it can work with other environments that support web view or are web-based, e.g., Eclipse RCP, Visual Studio Code, documentation websites. Moreover, as being cloud-native, Sirius Web uses a standardized protocol between its front-end and its back-end, namely GraphQL over HTTP. So, integration can be performed with environments that use this protocol to get data from and send data to a Sirius Web server. Finally, other web-based environments can be integrated in Sirius Web as a representation type for instance.

### The Sirius Web project development since 2020

Sirius Web是一种通用工具，因此大多数设置都涉及其支持大多数DSML常见的大型工业模型和通用功能的能力。关于可扩展性，Sirius Web旨在支持数百万个元素的模型，这些模型通过具有数千个节点的图形表示显示。这些不同的价值来自与其不同客户的OBEO体验。关于最常见功能的支持，其中一部分来自Sirius桌面和用户要求。其他人来自客户要求或开发特定的独立工作室，例如Syson，其他工作室可能感兴趣的功能是Sirius Web本身的上游。

### Discussion

三类开放性问题：

- several usability concerns of the language workbench and produced studios低代码复用和具体语法交互
- co-evolutioin between the studio and the language, as well as between the language and the models
- operation in an open ecosystem where there is a distinction between the clients and the server如何像Eclipse IDE一样发展

## Use Cases

简单案例Tax Studio和复杂案例SysON。

![例子](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051205.jpg)

![例子](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051206.jpg)

![例子](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051207.jpg)

![例子](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051208.jpg)

![例子](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051209.jpg)

## Related Works

### Language workbenches

![Sirius Web与其他非文本语言工作台的比较](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051210.jpg)

个人总结：Sirius Web的开山之作，搞MDE的要认真阅读。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>JOT</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>MBSE</tag>
        <tag>Sirius</tag>
        <tag>language workbench</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Value and benefits of model-based systems engineering (MBSE):Evidence from the literature</title>
    <url>/2025/05/15/034/</url>
    <content><![CDATA[
[Value and benefits of model-based systems engineering (MBSE):Evidence from the literature](https://incose.onlinelibrary.wiley.com/doi/abs/10.1002/sys.21566)

`Abstraction`

> Traditional document-based practices in systems engineering are being transitioned to model-based ones. Adoption of model-based systems engineering (MBSE) continues to grow in industry and government, and MBSE continues to be a major research theme in the systems engineering community. In fact, MBSE remains a central element in the International Council on Systems Engineering (INCOSE)’s vision for 2025. Examining systems engineering literature, this paper presents an assessment of the extent to which benefits and value of MBSE are supported by empirical evidence. A systematic review of research and practice papers in major systems engineering archival journals and conference proceedings was conducted. Evidence was categorized in four types, two of which inductively emerged from the results: measured, observed (without a formal measurement process), perceived (claimed without evidence), and backed by other references. Results indicate that two thirds of claimed MBSE benefits are only supported by perceived evidence, while only two papers reported measured evidence. The aggregate assessment presented in this paper indicates that claims about the value and benefits of MBSE are mainly based on expectation. We argue that evidence supporting the value and benefits of MBSE remains inconclusive.

## Introduction


个人总结：
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>INCOSE-SE</category>
        <category>2021</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>MBSE</tag>
        <tag>Sirius</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Bibliometric Analysis of Model-Based Systems Engineering:Past, Current, and Future</title>
    <url>/2025/05/07/030/</url>
    <content><![CDATA[
[Bibliometric Analysis of Model-Based Systems Engineering: Past, Current, and Future](https://ieeexplore.ieee.org/abstract/document/9829034/)

`Abstraction`

> Model-based systems engineering (MBSE) is considered an important approach for understanding multidomain fields and is widely used in complex systems such as aerospace. In this article, a detailed survey ofMBSE literature was conducted from its commencement to the present trends through bibliometric analysis.
> Some bibliometric tools were used to implement a visual network analysis of MBSE-related manuscripts. The results of the bibliometric study revealed the interrelationship and distribution of researchers in multidomain fields. The authorized sources ofMBSE papers were also assorted. The current practices of MBSE were analyzed. The future directions for MBSE based on the current practices were discussed. We found that MBSE’s research has been conducted by many research teams with distinctive characteristics, and the top publishing sources in this field have emerged. Research on MBSE focuses on system engineering, languages, system of systems, and digitalization. The development of new technologies such as next-generation modeling languages is improving current practical problems. The findings of this study may help researchers gain a faster and more comprehensive understanding of the current and future developments in MBSE.

![MBSE时间线](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025050701.jpg)

INCOSE在2006年的系统工程2020一文中提到的MBSE的定义是：
> Model-based systems engineering is the formalized application of modeling to support system requirements, design, analysis, and V&V activities beginning in the conceptual design phase and continuing throughout development and later lifecycle phases.

本文面向的三个问题：

- 建模语言的升级是否和MBSE有关？建模语言升级的方向是什么？建模语言仍然占据了图11中的当前研究阶段，以SYSML为代表。该语言的未来方向是建立与语义建模相关的功能。
- 数字工程、数字孪生和人工智能的概念和MBSE的关系？图8-11均表明这些新概念已经作为独立的研究集群存在。此外，图11还显示，在此阶段，数字双胞胎和区块链代表的新概念已成为研究的热门话题。结合图8中的关键字连接，这些新的数字化概念与MBSE的建模和模拟有关。它在系统模型的构建和权威性真实来源中起着重要作用。
- MBSE的应用领域仍在航空航天中吗？在表V中，我们可以看到MBSE应用程序已经开始扩展，涉及电动汽车和智能电网等复杂系统。

![学者团队分布](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025050702.jpg)

![学者团队发文量](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025050703.jpg)

22个团队通过广泛的跨阵容合作建立了联系，这在图4中构成了多数。团队之间的关联以红色标记，并且至少出现了35个不同的关联。此外，黑色圆圈中的团队表明它与圈子外的作者几乎没有联系。尽管有27支球队与最大的合行集团（多数）没有联系，但五支大型团队拥有7个以上的成员，这比大多数球队的数量还多。这表明MBSE产生了不同的研究特征，归于研究团队，这又意味着在MBSE社区中至少认可了10种技术。因此，MBSE处于显着的扩展阶段。最大的研究团队是由Vogel-Heuser代表的研究团队，该团队不仅拥有第二大小组基础（有22个核心成员），而且还与九个研究团队合作。

为了评估每个研究团队的活动，我们构建了所有团队发行的年度出版物的统计数据。由于团队的区别特征是合行，因此同时计算团队所有成员的年度出版物将导致严重的重复。为了避免数据重复，我们认为每个集群中出版物数量最多的作者是计算每年出版物数量的代表。图5说明了10位代表作者的年度出版物，在图4中的49个集群中，代表中的出版物数量最多。图5中的点（值）的大小（值）是指作者一年中的出版物数量。就出版物的平均数量而言，这些主要研究团队随着时间的推移增加了产量，这与总体结果一致。Dori在整个2008年至2022年的整个期间都持续了产出。尽管Choley和Vogel在TP方面排名前两名，但它们的出版物主要是2014年及以后的。 Lu和Albers从近年来发表的研究中推断出，过去三年发表的论文数量最多，这表明他们的研究可能与MBSE的下一代技术有关。此外，这些研究人员专注于数字双胞胎，机电系统设计，本体论，工业4.0等。

对于地理分析，我们使用Vosviewer收集出版物的地理信息。作者的地理位置是根据机构或组织的位置而不是其国籍来计算的。图6提出了结果。大多数MBSE研究人员来自美国（25.1％），其次是德国（14.2％），法国（9.0％）和中国（8.0％）。美国，欧洲和中国的研究人员占研究人员总数的80％，这些地区也是航空航天行业快速发展的地区，NASA，ESA和中国航空航天科学技术公司（CASC）等机构。以欧洲太空研究与技术中心（ESTEC）所在的荷兰为例，我们从该国收集的10份出版物是由ESA或ESTEC的研究人员撰写的。此外，我们发现MBSE软件公司还推动了区域MBSE研究。该设施的研究人员撰写了一个名为No Magic（Kaunas，立陶宛）的软件开发设施，来自立陶宛的22个出版物中的7个是欧盟（Kaunas）。

MBSE出版物目前在包括期刊，会议和书籍在内的一千多个来源发表。根据对Vosviewer的引文分析，本研究检查了这些来源之间引文连接的数量和强度。总的来说，出版物来自系统工程，仿真，制造，航空，计算机科学和技术等的来源。图7的左侧显示了完整的源分析结果，以做出整体判断。

为了更清晰地描绘出值得注意的来源，每个来源的最低出版物门槛设置为17，这意味着只有达到阈值的来源才会出现在网络上。在1174个来源中，有45（3.8％）达到了约束。这45个来源生产的出版物数量占所有出版物的51.6％。所有这些来源由于相互引用而相互联系，并且没有独立的来源。图7说明了右侧45个来源的引文网络。网络中的每个节点代表一个不同的来源，其大小代表出版物的数量。调色板代表了源的平均引用数量。

根据引文分析的规则，两个节点之间的联系表明它们具有“相互引用”或相互引文关系。每个链接的强度表示这种关系的数量。因此，节点的总强度越高，该节点与其他节点之间的关系越强，这表示节点的重要性。系统工程与大多数来源的联系，并且在294的强度上具有最高的强度，这表明其可识别性很高。第二个梯队由四个来源：Procedia计算机科学，系统，IEEE航空航天会议，IEEE Systems Journal组成，每个杂志的强度超过80。

![论文引用量排名](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025050704.jpg)
![论文发文量排名](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025050705.jpg)

为了提供图7的详细分析，表I和II列出了10个来源，以总引用（TC）和总出版物（TP）排名。 INCOSE在TP和TC中均排名前2名，证明它是MBSE中重要的出版物。七个来源同时出现在TC和TP排名的前10名中。系统工程仅发表了113项研究，并收到了1257次引用。此外，《 IEEE系统杂志》已获得441次引用，其中有43篇出版物，这证明了其内容的高质量。 IEEE关于工业信息学的交易被高度引用，值得研究人员的注意，尽管到目前为止已经发表了少量与MBSE相关的出版物。国际宇航大会（IAC）的TP较高，TC明显较低，这意味着IAC中发表的论文的引用往往比表II中列出的其他来源少。除了表I和II中排名前10的TP/TC源外，图7中还可以找到一些较低但值得注意的来源。

![十个最高引文章](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025050706.jpg)

表III列出了最引用的十大MBSE出版物，这些出版物主要来自期刊。除非三本书，否则所有这些出版物都是研究和审查文章。十个最引用的文章反映了MBSE的当前趋势，并以1：5：4的比率对应于II节的三个阶段。在技​​术触发阶段，研究人员更关心概念的定义，但是这些研究并没有吸引更多的研究人员。在膨胀的期望和幻灭阶段的潮流中，MBSE开始朝着应用实践迈进，这也吸引了更多的研究人员。当前的亮相阶段，研究人员开始与新技术（例如数字双胞胎）结合使用MBSE，也吸引了最多的研究。有496篇引文，引用最多的文章发表在2019年的IEEE工业信息学交易（Tao F.等）中。

![关键词图](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025050707.jpg)

![未来演化分析（X轴表示和其他主题之间的关联程度，Y轴表示发文密度）](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025050708.jpg)


![MBSE主题地图](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025050709.jpg)

![MBSE主题演变](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025050710.jpg)

个人总结：最新的MBSE论文综述，对当前MBSE领域常见的学术概念和发文领域做了统计，整体比较清晰。本文主要都是围绕关键词分析的，偏概念，对实际文章内容的讨论很少，没有区分MBSE在不同的领域发挥了什么作用。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>TEM</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>review</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Event-based safety and reliability analysis integration in model-based space mission design</title>
    <url>/2025/05/15/033/</url>
    <content><![CDATA[
[Event-based safety and reliability analysis integration in model-based space mission design](https://www.sciencedirect.com/science/article/pii/S0951832022004835)

`Abstraction`

> Model-based safety and reliability (S&R) analysis, which improves analysis accuracy and reduces cost and development time is applied in various industries. With the developments in model-based systems engineering (MBSE) and the use of systems modelling language (SysML), S&R analysis based on SysML models is gaining more attention. However, the emerging methods are inadequate for complex space missions. Thus, the main objective of this study involves integrating S&R analysis in SysML-based space mission design. First, a framework for integrating S&R analysis in model-based space mission design is presented. Based on the characteristics of the development of complex space missions and the MBSE process, a multisystem collaborative failure analysis method is proposed to comprehensively identify the failure modes (FMs) of the entire system. Subsequently, an event-based analysis method integrating the process of functional architecture definition is proposed, which fills the identified gaps in model-based S&R analysis for mission-level systems. Based on the identified FMs and proposed criterion, the event tree can be mapped from the SysML activity diagram. Finally, the proposed methodology is applied to a case study of a complex space mission in the near future: the manned mission to the Moon.

## Introduction

介绍部分和相关工作混在一起讲的，提到了一些过去的基于SysML的安全分析工作。本文的三个贡献：

- A multisystem collaborative failure analysis method is proposed based on the characteristics of the development of complex space missions and the process of SysML-based system design. The failures or FMs of the system defined by RAAML can be identified while the functions or structures of the system are designed, and thus, the failure analysis of the entire system can be completed through iterations and interactions of the models among systems.
- We integrate the event-based analysis method into the functional architecture definition of the system to complete the S&R analysis of the mission-level system. Utilising the proposed mapping method, the event tree established in the parametric diagram can be extracted and transformed from the AD. Each FM in the event tree is also a top-level FM for the FTA of the underlying system, such as the component-level system.
- We employ one of the most complex space missions—manned missions to the moon—as an example to showcase the application of the proposed model-based S&R analysis method.

## Methodology and modelling language overview

![七步法](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051501.jpg)

分两部分介绍方法和语言。方法参考了[SafeSysE: a safety analysis integration in systems engineering approach.]这篇文章，分为七个步骤，其中第六步是第三节中提到的多系统故障分析方法，第七步根据故障识别期间构建的故障传播关系的安全性和可靠性分析，采用基于事件的分析方法在第四节中介绍。建模语言使用的是扩展自UML和SysML的RAAML，还针对空间任务缓解措施增加了一个measure的模块和SucessRate的值，描述缓解措施的成功率。

## Multi-system collaborative failure analysis method

This section proposes a failure analysis method that relies on the processes of SysML-based systems engineering and RAAML.

![多系统故障分析过程](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051502.jpg)

如图所示，高层的基本故障和底层的故障效果是对应的，一个故障事件的发生会在总体和自己系统之间通过这个树结构传递。对于整个流程来说：

- 1、首先进行系统设计，确定空间任务的各个阶段和系统；
- 2、在整个系统和所有子系统中进行FTA并为已经识别的FMs进行建模；
- 3、从整体系统和每个子系统的基础层中识别FM，对每个FM建立一个FMEA项目；
- 4、针对单个系统进行故障分析的迭代，每次得到新的FM就进行一圈分析传播；
- 5、对所有系统的故障分析迭代，确保一致性；
- 6、将缓解措施整合到FMEA项目中。

## Event-based safety and reliability analysis using SysML

![三种故障-事件模式](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051503.jpg)

将FTA集成到系统工程的方法不适合对任务级的S&R分析。空间任务通常在连续多个阶段完成，功能分解也应该依次完成。故障事件的传播分为三个基本类型，如图所示。通过建立一个“故障-事件”图，可以根据故障概率计算对应事件的发生概率。

![事件树与SysML实现](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/2025051504.jpg)

## Cases study

对载人登月的18个环节进行流程建模画活动图，进行故障识别和迭代分析（建立FTA和FMEA）画架构图，然后进行S&R分析画事件树进行计算，每个环节都是一个1x7的向量（概率之和为1）。最后对案例进行了有效性讨论。

个人总结：501的论文，第一个顶刊用RAAML的，论文整体使用的是MagicDraw的SysML建模，流程比较规范，RAAML的涉及略浅，多系统的故障模型建模值得参考，实验案例介绍得比较潦草，只给了一个结果，讨论也不清楚。整体上偏工程的一篇论文，技术创新不多，能中更多也是因为背景够硬吧，是值得读的。
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>RESS</category>
        <category>2023</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>SysML</tag>
        <tag>FMEA</tag>
        <tag>S&amp;R</tag>
        <tag>RAAML</tag>
        <tag>FTA</tag>
      </tags>
  </entry>
</search>
