<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>笔记：Early Validation and Verification of System Behaviour in Model-based Systems Engineering:A Systematic Literature Review</title>
    <url>/2024/08/14/001/</url>
    <content><![CDATA[
[Early Validation and Verification of System Behaviour in Model-based Systems Engineering:A Systematic Literature Review](https://dl.acm.org/doi/full/10.1145/3631976)

*作者来自瑞典Mälardalen大学和Volvo建筑集团。*

`Abstraction`

> In the Systems Engineering (SE) domain there has been a paradigm shift from document-based to model-based system development artefacts; in fact, new methodologies are emerging to meet the increasing complexity of current systems and the corresponding growing need of digital workflows. In this regard, Model-Based Systems Engineering (MBSE) is considered as a key enabler by many central players of the SE community.
> MBSE has reached an adequate level of maturity, and there exist documented success stories in its adoption in industry. In particular, one significant benefit of utilising MBSE when compared to the traditional manual and document-centric workflows is that models are available from early phases of systems development; these enable a multitude of analyses prior any implementation effort together with other relevant capabilities, like the automation of development tasks. Nonetheless, it is noticeable there is a lack of a common understanding for how formal analyses for the verification and validation (V&V) of systems behaviour, specifically in the early phases of development, could be placed in an MBSE setting.
> In this article, we report on the planning, execution, and results of a systematic literature review regarding the early V&V of systems behaviour in the context of model-based systems engineering. The review aims to provide a structured representation of the state of the art with respect to motivations, proposed solutions, and limitations. From an initial set of potentially relevant 701 peer-reviewed publications we selected 149 primary studies, which we analysed according to a rigorous data extraction, analysis, and synthesis process. Based on our results, early V&V has usually the goal of checking the quality of a system design to avoid discovering flaws when parts are being concretely realised; SysML is a de facto standard for describing the system under study, while the solutions for the analyses tend to be varied; also V&V analyses tend to target varied properties with a slight predominance of functional concerns, and following the variation mentioned so far the proposed solutions are largely context specific; the proposed approaches are usually presented without explicit limitations, while when limitations are discussed,readiness of the solutions, handling of analysessimplifications/assumptions, and languages/tools integration are among the most frequently mentioned issues.
> **Based on the survey results and the standard SE practices, we discuss how the current state-of-the-art MBSE supports early V&V of systems behaviour with a special focus on industrial adoption and identify relevant challenges to be researched further.**

## Introduction

系统工程的基本定义、基本流程、关键环节，基于模型的系统工程提出的缘由、基本定义与发展目标。本文通过调研149篇论文，从工业视角中从最先进的技术中得到可用的V&V分析模型，以及从建模角度采用此类分析所需要的先决条件。

系统定义：
> System Engineering (SE) is defined as “... an integrated set of elements, subsystems, or assemblies that accomplish a defined objective” in the SE handbook by the International Council on Systems Engineering (INCOSE). "[[88]](#88)

系统开发前提：
> Indeed, standard SE practices put a lot of emphasis on the precondition that starting to build/implement a System of Interest (SoI) should be only done once there exists enough confidence that it will meet stakeholder expectations and needs.[[88]](#88)

MBSE定义：
> INCOSE defines Model-Based Systems Engineering (MBSE) as “... the formalised application of modelling to support system requirements, design, analysis, verification and validation activities beginning in the conceptual design phase and continuing throughout development and later lifecycle phases”.[[88]](#88)

MBSE名言：
> To confirm this, the INCOSE 2035 vision states: “The future of Systems Engineering is predominantly Model-Based.” A model is any description of a system that is not the thing-in-itself [[56]](#56). The quote “all models are wrong, but some are useful,” from Box and Draper[[10]](#10), captures a vital essence of modelling.

## Background and Motivation

相比于基于文档的系统工程，MBSE有更强大的推理和评估能力[[36]](#36)。

相比于传统系统工程，MBSE更直观、更容易识别、有更好的追溯性和通过图表编辑的能力[[31]](#31) [[35]](#35)，增加了V&V的机会[^17] [^36]，更好的处理建模的保真度（不过粗也不过细），降低了解决故障和错误的成本。

在早期进行系统建模和分析是系统工程的主要研究阶段。问题：通用建模语言如SysML缺少系统模拟成熟度[[67]](#67) [[94]](#94)。工业工具的互操作性问题限制MBSE的应用[[20]](#20) [[53]](#53)。

### Motivating Example

![Typical MBSE views early in system development.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24081401.png)

以建筑设备Construction Equipment (CE)为案例展开说明。早期的V&V可以加快设计和决策，降低大量迭代的风险。用MBSE技术的SE视图，容易更严格地进行分析，通过MBSE进行重用、分析、模拟等，更早地获得有关系统可行性的分析。但系统映射上仍存在差距。

## Related Work

其他类MBSE相关综述。

[[60]](#60) MBSE工具链的调研综述，主要针对SysML，还有工具准备的一些指标，包括集成能力、互操作性和可追溯性等。

[[73]](#73) 嵌入式系统重的MBSE工具，UML、SysML、MARTE相关，论文侧重代码实现。

[[25]](#25) 从语言、工具和方法三方面对MBSE进行分类，SysML是主流，稳健的方法是缺乏的。

[[66]](#66) MBSE多领域建模问题，指出FMI是有前景的，但基于SysML的互操作性和模拟存在问题。

[[94]](#94) 大部分MBSE缺少模拟功能，认为需要扩展实践并质疑符号工具的可行性。

[[41]](#41) MBSE的价值尚未定论。 [[58]](#58) MBSE仍停留在较小的研究群体中。

[[53]](#53) 调研法国工业MBSE从业者，分析积极影响，并提出应将多物理和多学科设计集成到MBSE框架当中。

[[5]](#5) 对机器人和自主系统 Robotic and Autonomous Systems (RAS) 进行文献调研，发现缺乏工业应用，认为系统模型不希望通过低保真度模型给出。

[[2]](#2) 关注UML进行调研，结论：缺乏非功能性测试、缺乏工业或精细评估、对特定领域的描述过于严格、缺乏通用的方法。

[[21]](#21) 研究多学科设计分析和优化Multidisciplinary Design Analysis and Optimisation (MDAO)与MBSE的关系，因为它可以与低保真模型集成并考虑模型不确定性等。

[[86]](#86) 模拟模型验证和测试：运筹学、仿真与计算机科学领域，结果是缺乏通用术语、理论与实践之间缺乏联系等。

## Research Method

遵循[[51]](#51)的研究方法，三阶段：**planning, performing and reporting**。

规划阶段：确定文献中的差距和审查需求（2、3节）；定义推动工作的研究问题（4.1节）；定义审查流程和所涉及的作者的指导方针。

执行阶段：步骤有Search, Selection, Snowball, Definition of data collection table, Data extraction, and Data analysis。确定论文，构建数据收集表，验证提取编码，横纵向分析。

报告阶段：记录审查结果（6节）并对有效性的潜在威胁以及应采用的相应环节策略（5节）。

### Research Questions

提出5个问题：

- 定义：How is early V&V **defined and motivated** in the MBSE literature? 在MBSE文献中，早期V&V是**如何定义和激发**的？
- 方法：What are the **means for describing system behaviour** at an early stage of development? 在开发早期阶段**描述系统行为的方法**有哪些？
- 结论：What are the **results of interest** for the early V&V, and what techniques are employed for performing the analysis? 早期V&V**感兴趣的结果**是什么？以及使用哪些技术进行分析？
- 应用：Which are the **application domains** employing early V&V? 早期V&V的**应用领域**有哪些？
- 限制：What are the **limitations** of the existing approaches for early V&V? 现有的早期V&V方法有哪些**局限性**？

### Search Process

数据库：The following databases were searched for information: ACM, IEEE, ScienceDirect, and Scopus.

关键字：(“MBSE” OR “Model-based systems engineering” OR “Model based systems engineering”) AND (“Validation” OR “Verification” OR “V&V” OR “Evaluation”) AND (“Behavior” OR “Behaviour”).

### Inclusion Process with Inclusion and Exclusion Criteria

制定了调研范围论文的纳入规则（2条）与排除规则（6条）inclusion criteria (IC) and exclusion criteria (EC)。

### Data Collection and Analysis

介绍了论文统计信息的表格，对应5个问题共计12条。
横纵分析：纵向分析是对每个特定的问题进行深入探讨（6节）；横向分析侧重跨数据模式和相关性，包括是否采用SysML、工具的许可类型与限制类别（7节）。

## Threats to Validity

参考[[92]](#92)进行有效性分析。

### Data Reproduceability

为了易读性和简洁性，总结了结果并突出显示了选定的特殊结果。开源了统计数据，在[github](https://github.com/BeeCub3/Replicate-package)中。

### External Validity

外部有效性的威胁主要与要分析的论文的检索有关。通过进行8轮snowballing操作检索论文，确保没有论文遗漏。在论文写完后又检索了一遍。

### Internal Validity

内部效度是指任何主要因参与研究的审稿人偏见而产生的威胁。解释了没有偏见的原因，包括提取论文内容后进行重新编码，使用Covidence确保评论之间的一致性。

### Construct Validity

结构效度主要与从看待方式和得出结论之间的关系得出错误结论的风险有关。解释snowballing操作的好处。

### Conclusion Validity

对结论有效性的威胁是指对研究结果进行误解的任何风险。又解释了一下。

## Findings

### Pubiolication Details

![The distribution of the analysed papers as clustered by year and type of publication.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24081402.png)

### RQ1 - How Is Early Validation and Verification Motivated and Defined in the Literature for MBSE?

*How Does the Community Define Early V&V?*
7成认为设计阶段，2成认为需求阶段，1成认为两者都有。

*What Are the Main Motivating Reasons for Doing Early V&V?*
依次是“在继续实施后确保设计达到所需的水平”、“通过后期缺陷检测降低风险”、“缩短开发时间”、“降低不完整需求的风险”、“在实施前探索系统行为”。

- V&V of design before implementation
- Reduce risk with late flaw detection
- Reduce risk for incomplete requirements
- Explore system behaviour before implementation

*RQ1 discussion*
总而言之，虽然提取的动机原因存在一些分歧，但人们似乎一致认为，在开发的早期阶段进行V&V是降低开发成本和减少开发生命周期后期缺陷风险的关键。
提取的数据表明，MBSE 在系统设计中使用分析方法已达到成熟度，具有显著的优势，也可能意味着需求阶段对当前方法的附加功能的需求较低。

*Actionable Insights RQ1*
From the analysis performed we believe the following action point to be valuable for the community in the context of RQ1:

- Motivations for V&V stakeholders seem to be somewhat unclear or implicit. Seemingly, there is no clear view of the expected value in performing early V&V.**V&V利益相关者的动机似乎有些不清楚或不明显。从表面上看，对于执行早期V&V的期望值没有明确的看法。**
- Processes typically span several development stages, seen through the divide between requirements and design, yet, there is little discussion on holistic approaches or possible benefits expected by models to bridge stages.**过程通常跨越几个开发阶段，通过需求和设计之间的划分来看，然而，很少有关于整体方法的讨论或者模型预期的可能的好处来跨越阶段。**
- Artefacts should be used by several domains and users during development, yet there is little discussion on the interoperability or re-use of V&V artefacts.**在开发过程中，工件应该被几个领域和用户使用，但是很少有关于V&V工件的互操作性或重用的讨论。**
- There is a broad range of definitions (and many papers make no attempt) for early V&V. Subsequently the expected stakeholders tend to diverge in the papers, and there is a vague understanding about how early V&V slots into the overall SE processes and how it can guide development effectively.**早期V&V有各种各样的定义(许多论文没有尝试)。随后，预期的利益相关者往往在论文中出现分歧，并且对于早期V&V如何融入整个SE流程以及它如何有效地指导开发存在模糊的理解。**

### RQ2 - What Are the Means of Describing System Behaviour at an Early Stage of Development?

*How Is System Behaviour Represented in Early V&V?*
描述系统行为的语言：主流的语言是SysML，占一半，UML也比较多，其余的依次有OCL、Custom language、Simulink、MARTE、AADL、ModelicaML、EAST-ADL、Informal/Nature Language、OWL、Language agnostic、DoDAF等，还有其他自定义的语言。SysML中，活动图和状态机图比用例图和序列图更受欢迎。

*What Language or Formalism Is Utilised for Behaviour Analysis?*
解决方案中用于执行分析的语言：很大一部分会选其他，其余比较多的依次是SysML、Simulink、Modelica、Petri Net、UPPAAL等。

*If the Description and Analysis Language Differ, Then How Is the Transformation Performed?*
SysML主要用于表示系统行为，但很少用于分析。大多数时候需要对不同语言和形式间进行转换，将表示语言转换为分析语言。63%的论文使用了自动转换，12.7%使用了半自动转换。

*RQ2 discussion*
最常被提及的语言是 SysML、Simulink 和 Modelica。 Petri 网图（具有各种形式）、UPPAAL 和其他类似语言也经常被使用。
从更广泛的角度来看，基于 SysML 和 UML 的语言被广泛用于行为描述，这可能证实了它们作为早期系统建模事实上的标准的地位。
依靠模型转换来创建分析模型会对这些转换产生相关的依赖性，但对转换可行性的讨论却很少。同样，除了互操作性和可扩展性之外，跨不同语言的一致性管理概念也大多缺失。在工业环境中实施 MBSE 通常会依赖于大型工具链，在工具、标准和用户不断变化的环境中依赖一组模型转换具有相当大的风险。对于不使用转换的语言，许多都是在 Simulink 等高级工具或 Cameo Systems Modeller 或 MagicDraw 等集成 MBSE 工具包中实现的，这暗示这些解决方案与行业需求更紧密地联系在一起。

*Actionable Insights for RQ2*
From the analysis performed we believe the following action points to be valuable for thecommunity in the context of RO2:

- There is little discussion on the transformation details, are they two-way, how oftenshould they be employed, consistency management, coupling, maintainability, etc.**很少有关于转换细节的讨论，它们是双向的吗，它们应该多久被使用一次，一致性管理，耦合，可维护性，等等。**
- Scalability oflanguages for analysis could be a weak point, top choices are implementedin industrial tools while many academic choices are based on small scale examples.Few solutions present general approaches that can be implemented in more than onelanguage and/or formalism for description or analysis.**用于分析的语言的可扩展性可能是一个弱点，顶级选择是在工业工具中实现的，而许多学术选择是基于小规模的例子。很少有解决方案提出可以用一种以上的语言和/或形式来实现描述或分析的通用方法。**
- Considering many commonlyused languages like SysML are semi-formal the reliance on specifc notations andlanguages (and per extension tools) reduces generalisability.**用于分析的语言的可扩展性可能是一个弱点，顶级选择是在工业工具中实现的，而许多学术选择是基于小规模的例子。很少有解决方案提出可以用一种以上的语言和/或形式来实现描述或分析的通用方法。**

### RQ3 - What Are the Results of Interest for Authors Performing Early V&V, and What Techniques Are Employed for the Required Analysis?

*What Methods and Techniques Are Used for Analysis?*
最常见的是模拟，或者分析用的包括静态分析和模型检查。

*What Results Are of Interest for the Authors?*
主要关注分析反馈的结果。与航空航天或汽车等代表性领域相比，发电厂、运河/水路系统、Web应用程序和医疗系统等领域的词汇量各不相同。尽管如此，我们仍然可以发现一些明显的趋势，例如执行轨迹和预期的功能行为备受关注。同样，通常通过静态分析获得的结果（例如活性、不一致性、无死锁性、可达性等）也经常被报道。一些论文认为，他们的分析方法适用于特定环境下的应用，因此感兴趣的结果可能因使用场景而异。

*What Are the Tools Used for Analysis?*
与之前关于系统描述和 V&V 分析语言的结果一致，使用的工具数量非常多，而且大多数工具在所分析的论文中只出现过一两次。更常见的类别是集成 MBSE 工具包、图形编程/仿真环境、模型检查器、建模框架和仿真工具包。 最常用的单个工具是 MATLAB/Simulink 及其相应的库和基于 EMF 的解决方案。EMF 是领先的免费/开源建模平台之一，这使其成为学术研究的一个有吸引力的工具/平台。类似地，MATLAB/Simulink 既适用于学术界也适用于工业界，在基于模型的社区中有着丰富的应用历史。除了这些工具之外，许多专有的 SysML 编辑器因其集成的分析功能而被广泛使用，至少部分消除了对描述和分析行为的不同工具的需求。

*RQ3 discussion*
模拟是迄今为止最常用的分析方法。这或许表明，为了在早期阶段进行有意义的分析，需要有先进的分析方法，尤其是针对动态行为。除了模拟之外，还有更广泛的不同方法可以简化为模型检查或自动审查/检查。
总体而言，嵌入式系统领域似乎对早期 V&V 的流程和范围有更清晰的认识，这反映在与其他类型的领域相比更紧凑的工具、语言和结果集上。此外，嵌入式系统领域在早期验证实践方面表现出一定的成熟度，在早期 V&V 的观察时间线中，有较早的出版物。
SysML 和 UML 配置文件等通用语言的半形式化特性的强大灵活性。当然，这种半形式化描述通常需要转换为更结构化的表示形式进行分析，这增加了复杂性并降低了建模的自由度，因为自动转换需要结构化格式。
Eclipse/EMF、MATLAB/Simulink、Papyrus、OpenModelica 和 UPPAAL 是更常见的报告工具。论文中还介绍了一些不执行语言间转换的工具，如 MagicDraw 和 Cameo Systems Modeler。
虽然工具与 MBSE 紧密相关，但令人惊讶的是，很少有解决方案声称与工具无关。事实上，如果工具是核心，那么 MBSE 同样会考虑方法、方法论和语言。然而，许多解决方案都依赖于特定于工具的分析，无论解决方案是否广泛。学术工具往往更紧凑、更开放，以获得最佳效果，而工业工具通常应该集成到更大的流程中，而且人们不愿意使用公开可用的工具，因为除了知识产权保护问题外，对于大型企业来说，它很少具有可扩展性和可维护性。因此，许多工具都是针对特定案例的，这一事实导致了已知的互操作性和可维护性问题。

*Actionable Insights RQ3*
From the analysis performed we believe the following action points to be valuable for thecommunity in the context of RO3:

- Tooling should carry much of the weight in terms of MBSE processes, many of the observed tools are disjoint from the overall processes and need to be integrated efcientlywhile few solutions emphasise interoperability.**工具应该在MBSE过程中占很大比重，许多观察到的工具与整个过程脱节，需要有效地集成，而很少有解决方案强调互操作性。**
- Few solutions discuss approaches that can be adapted or applied in more than onenotation/tool, further reinforcing the vendor lock-in.**很少有解决方案讨论可以在一个以上的旋转/工具中适应或应用的方法，这进一步加强了供应商锁定。**
- While simulation is the most common analysis method it is rarely discussed for whatconditions and boundaries its results can be considered valid or not, Moreover, how theanalysis should be integrated into decision-making concretely, apart from high-levelobservations, is left unspecifed.**虽然模拟是最常见的分析方法，但很少讨论其结果在什么条件和边界下被认为是有效的，此外，除了高水平的观察之外，如何将分析具体地整合到决策中，也没有具体说明。**
- The target properties for the proposed early analysis are many with no evident pattern of classifcation or catalogue referenced in the literature.**提议的早期分析的目标属性很多，在文献中没有明显的分类或目录模式。**

### RQ4 - What Are the Results of Interest for Authors Performing Early V&V, and What Techniques Are Employed for the Required Analysis?

*What Is the Reported Domain?*
论文中观察到的领域众多，其中最突出的是航空航天和航空电子。14 其他存在感很强的领域包括嵌入式系统、信息物理系统、安全关键系统、汽车和铁路。最后，还有一大类领域在论文中只被提及过一次，例如核电站、运河系统、网络应用程序和云计算。

鉴于所开发系统的复杂性和该领域的历史相关性，航空航天有望成为最常被报道和研究的领域之一。事实上，MBSE 有著名的推动者，例如 NASA，他们就该主题开展了高质量的研究。同样，嵌入式系统在形式化方法和模型检查方面也相当成熟，这些方法经常在论文中报道。此外，汽车和铁路行业在基于模型的实践方面有着坚实的基础，并且存在针对汽车的标准，例如 AUTOSAR。信息物理和安全关键系统是比前面提到的更广泛的类别，但我们无论如何都观察到了强大的存在。在这种情况下，CPS 通常受益于模型提供的统一视图（例如，出于集成分析目的），而安全关键系统需要早期分析以提供必要的证据，证明系统将满足所施加的要求。

*Is the Solution Domain Specific?*
绝大多数论文用于特定领域，少数说领域无关或者领域可扩展。

*How Was the Solution Validated?*
3成论文在工业环境中进行了评估并展示了影响力。7成的论文使用[[79]](#79)定义的某种形式运行示例来验证解决方案。
关于早期验证用户的结果与其他类别一致，因为存在很大且显著的分布。这方面的异常值是航空航天（相关领域涉及航空电子）、嵌入式系统、CPS、安全关键系统、铁路和汽车。有趣的是，嵌入式系统领域的解决方案在分析的论文中提出的解决方案方面往往是一致的，而其他领域则并非如此。事实上，在大多数较大的报告领域中，对于预计如何进行早期 V&V，没有共同/共享的观点。例如，在航空航天领域，有需求分析、模拟、可调度性分析、模型检查、图表检查等例子。

*RQ4 discussion*
正如人们所料，大多数解决方案都是特定领域的，只有大约 11% 的解决方案声称适用于任何领域。事实上，由于在 SE 流程的早期进行分析需要做出假设或管理不确定性，因此解决方案往往是特定领域的，因为需要更精确、更可靠的信息来构建分析。此外，由于许多目标语言或工具通常与某个领域紧密相关，因此需要制定配置文件和约束，以便能够足够严格地应用 SysML 和类似的半正式（通用）语言。
大约 34% 的分析论文描述了在工业环境中进行的研究，这似乎表明许多解决方案具有工业适用性。事实上，MBSE 是一种具有坚实工业视角的范式，它对各种解决方案提出了许多要求。与这一广泛的工业范围相关，我们还注意到，大多数解决方案都是不同程度地基于示例，较少关注经验测量。事实上，只有少数论文讨论经验证据来支持解决方案，而这些解决方案在很大程度上依赖于对感知到的益处的争论。这些观察结果与之前报道的 MBSE 的弱点一致，即缺乏经验证据。在这方面，我们认为，对于这种性质的解决方案，经验证据可能很难产生，因为测量定义复杂，在工业环境中执行可能具有挑战性，而不会引入偏见和其他有效性威胁的高风险。然而，这是一个反复出现的问题，涉及基于模型的实践，阻碍了更广泛范围内的基于证据的讨论。

*Actionable Insights RQ4*
From the analysis performed we believe the following action points to be valuable for thecommunity in the context of RO4:

- SE at its core pursues customer satisfaction and correct delivery of systems, yet thereare few attempts to measure and compare solutions, and there is a general lack ofbaselines for V&V approaches.**系统工程的核心是追求客户满意和系统的正确交付，但是很少尝试测量和比较解决方案，并且普遍缺乏V&V方法的基线。**
- MBSE processes are large and map well to complex domains. However many of theexamples included in academic works seem to be too simplistic to be convincinglyadopted in industrial contexts and make no attempt to discuss these concerns.**MBSE过程很大，并且很好地映射到复杂的域。然而，学术著作中的许多例子似乎过于简单，难以令人信服地应用于工业领域，也没有试图讨论这些问题。**
- MBSE artefacts are often complex and domain-specific. More unified/standard approaches could be very valuable, and a common-ground for different domains couldimprove training and enable easier comparison of methods and solutions.**MBSE人工制品通常是复杂的和特定领域的。更统一/标准的方法可能是非常有价值的，不同领域的共同点可以改善培训，并使方法和解决方案更容易比较。**
- There is seemingly no clear indication of whom the target user(s) is in the broadercontext of early V&V, further indicating a lack of clear definition and placement in MBSE processes.**在早期V&V的大背景下，似乎没有明确的迹象表明谁是目标用户，这进一步表明在MBSE流程中缺乏明确的定义和定位。**

### RQ5 - What Limitations Do Authors See, if Any, with Their Implemented Solutions?

并非所有作者都指出了他们提出的早期 V&V 方法的局限性。那些确实指出了局限性的作者的结果。最大的局限性是所提出的解决方案尚未完全开发，通常只部分涵盖了作者感兴趣的内容；另一个重大挑战是由于在描述和分析语言或形式主义存在差异时集成语言；报告的其他问题包括缺乏自动化；行为描述语言的表达能力有限是另一个常见的限制

*RQ5 discussion*
我们注意到，许多所述的限制与开发过程处于早期阶段这一事实直接或间接相关。事实上，如果抽象程度很高和/或已知系统的细节很少，那么分析应该会很有限或很肤浅。不过，作者明确表示，这是解决方案的一个可观察到的缺点，突出了在早期阶段平衡模型的保真度和抽象性的难度。同样，我们注意到许多与工具和学习曲线有关的问题，这些问题是软件和系统建模中常见的问题。
从更广泛的角度来看，MBSE 和 SE 通常针对整个系统生命周期。许多 MBSE 方法，例如 MagicGrid 为各个生命周期阶段的活动和方法提供了一个框架。有趣的是，只有少数解决方案讨论了将早期 V&V 活动和结果与后期阶段互连的潜在局限性。值得注意的是，虽然一些论文将各个阶段联系起来，但对每个阶段工件之间可追溯性的讨论和应用却很有限。在 INCOSE 等组织提出的愿景中，经常重申未来的建模应该涵盖系统生命周期的所有部分。**然而，如果在各个阶段生成的模型之间没有更复杂的可追溯性手段，就存在引入不一致或与跨工件管理信息相关的额外工作量的风险。** 事实上，这是以文档为中心的开发中发现的问题之一，经常被用作转向基于模型的实践的论据。

*Actionable Insights RQ5*
From the analysis performed we believe the following action points to be valuable for thecommunity in the context of RO5:

- MBSE processes are continuous (and often iterative) methodologies for system refne-ment. The limitations hint at the difculty in managing model fdelity and abstractionto correctly leverage analysis results from considered artefacts.**MBSE过程是系统改造的连续(通常是迭代)方法。这些限制暗示了管理模型交付和抽象的困难，以正确地利用来自被考虑的工件的分析结果。**
- MBSE artefacts are expected to evolve, therefore the limitations related to integration,abstraction management, and scalability have an important impact.**MBSE工件预计会发展，因此与集成、抽象管理和可伸缩性相关的限制会产生重要的影响。**
- Often the main stakeholders in MBSE are the engineers, since many of the limitationsare due to the difculty to apply the methods for the corresponding scenario, it can bederived a general lack of prioritisation for usability concerns.**通常，MBSE的主要利益相关者是工程师，因为许多限制是由于难以将方法应用于相应的场景，这可能导致可用性问题的优先级普遍缺乏。**
- Frequently recurring limitations are due to analytical simplifcations, which seems tocontradict the inherent essence of early V&V, This hints at a missing clear definitionof what early is, and what can be expected from analysis at such a stage.**经常重复出现的局限性是由于分析上的简化，这似乎违背了早期V&V的内在本质，这暗示了早期是什么，以及在这样一个阶段可以从分析中期待什么，缺少一个明确的定义。**

## Horizontal Analysis

### SysML and Simulation

本节只关注使用了SysML的论文。采用模拟的方法倾向于使用SysML，不使用的有4成。

### Tools and Extra Results

当作者对更广泛的反馈感兴趣而不仅仅是 V&V 结果时，他们不太可能使用多种工具进行分析。相反，当作者对 V&V 之外的结果不感兴趣时​​，他们可能会使用更多工具进行分析。也许这可以归因于所提出的解决方案的成熟度：不太成熟的方法可能包括更多软性优势以达到说服目的，而成熟的解决方案则更注重应用场景中衡量的性能。

### License and Development Phase

工具许可在设计阶段往往是专有的，而在需求阶段则更有可能是免费的。 此外，与专有许可相比，涉及两个阶段的解决方案显示出开源和免费工具的（大致）均匀混合。

### Industry, License, and SysML

虽然（如预期的那样）学术解决方案倾向于免费或开源工具，而行业则倾向于专有工具，但我们在三向映射中看到了两个不同的类别。首先，我们注意到，如果 SysML 在学术界使用，那么工具更可能是专有的而不是免费的，而非 SysML 解决方案最有可能是免费或开源的。此外，对于行业而言，非 SysML 解决方案更可能是免费的，而不是专有的。在这种情况下，我们观察到，无论 SysML 在何处使用，所使用的工具更可能是专有的，而如果解决方案不使用 SysML，则许可证更可能是免费或开源的。

### Other Observations form Horizontal Analysis

- SysML 在设计中的使用比在需求中的使用更多。这可能部分是因为需求阶段的解决方案可以正式完成，而不是依赖于 SysML 这样的非正式语言，因此避免了转向更正式的语言进行分析的需要。
- 模拟在特定领域的解决方案中更为常见，因为 117 个（70.9%）特定领域的解决方案中有 83 个使用了模拟，而非特定领域的解决方案中只有 16 个（43.7%）使用了模拟。
- 特定领域的解决方案拥有更多的专有许可证，在这方面，特定领域的解决方案可能需要更高级或更专业的软件，从而导致可用的开源或免费解决方案更少。
- 在工业环境中的 51 个解决方案中，有 32 个（62.7%）使用 SysML，在 98 个学术解决方案中，有 49 个（50%）使用 SysML。我们预计工业和学术之间的差异会更大，尤其是考虑到大多数 SysML 工具都不是免费的或开源的。然而，工业和学术提取的数据相对相似。这进一步加强了 SysML 是 MBSE 的事实标准语言这一观点。
- 工业环境倾向于使用多种工具，因为在工业环境中，51 个解决方案中有 34 个（66.6%）使用多种工具，而在学术环境中，98 个解决方案中有 52 个（53%）使用多种工具。这种趋势可以通过以下事实来解释：工业环境更有可能需要高级或专门的工具来实现其目的，而一种工具很少能用于所有分析目的。
- 作者更有可能在学术环境中发现局限性，因为在学术环境中的 98 篇论文中有 64 篇（65.3%）讨论了其解决方案的局限性。相比之下，在工业环境中的 51 篇论文中有 28 篇（54.9%）描述了其环境中的局限性。这可能与学术界和工业界在传播研究成果方面有不同的兴趣有关（例如，讨论开放的挑战与强调成功的实践）。
- 大多数使用 SysML 的实现无论如何都需要对语言进行某种扩展或转换为另一种语言或形式主义以用于分析目的。因此，在与领域无关的情况下，可能更倾向于采用一种需要较少努力来执行 V&V 分析的行为描述语言。

*Actionable Insights Horizontal analysis*
From the analysis performed we believe the following action points to be valuable for thecommunity in the context of the horizontal analysis:

- SysML as a language is more dependent on proprietary tooling and extensions withother mechanisms for analysis compared to other languages, reducing the option foranalysis without heavy investment in surrounding technologies.**与其他语言相比，SysML作为一种语言更依赖于专有工具和具有其他分析机制的扩展，这减少了在没有对周围技术进行大量投资的情况下进行分析的选择。**
- The gap between academia and industry is noticeable in many categories, hinting at agreater misalignment. Particularly, the tools, languages, and methods differ in termsof preferences.**学术界和工业界之间的差距在许多领域都很明显，暗示着更大的错位。特别是，工具、语言和方法在偏好方面有所不同。**
- Few general purpose solutions utilise simulation, hinting at the need for domain.specifc information for valid simulations. This, in conjunction with the overwhelminguse of simulation as a V&V method, could explain the lack of general approaches.**很少有通用的解决方案利用模拟，这暗示了对有效模拟的领域特定信息的需求。这一点，连同作为V&V方法的模拟的过度使用，可以解释通用方法的缺乏。**

## Discussion and Outlook

### Limitations of Early V&V

多亏了好的工具，集成更先进的工作流程和强大的功能将变得更加容易，正如其他评论中广泛讨论的那样。尽管工具是 MBSE 分类的核心，但直到今天，它仍然是更广泛采用基于模型的实践的关键障碍。工具经常出现的问题，例如互操作性和可扩展性，似乎限制了学术解决方案在工业领域的应用。
早期开发阶段的另​​一个相关特征是存在强烈的不确定性，被分析的系统需要考虑可能结果的不确定性。特别是，由于使用高抽象层次的模型，不确定性会增加。此外，在处理异构模型和系统时，由于各种类型的不确定性以及具有不确定性的不同模型之间的相互作用，复杂性也增加了。
文献中讨论了 MBSE 中不确定性的存在和管理 [[7]](#7) [[63]](#63) [[90]](#90)。据这些作者所知，没有具体的指标或方法可以有效地管理 MBSE 中的不确定性。
似乎缺乏易于获取且富有成效的方法来学习所审查文献中讨论的基于模型的方法。

### Early V&V in the Broader Context of MBSE

人工智能将发挥作用的两个场景：早期开发中的不确定性和为新手提供帮助。
在审查这些论文时，缺少关于传播在各个生命周期阶段开发的工件以及 SE 生命周期与早期 V&V 活动的关系的讨论。如果不将不确定性或早期模型的演变/细化传播到开发的后期阶段，则很有可能会创建并丢弃此类模型，这通常被称为基于文档的开发的弱点，并且可能不利于重用。
在 SE 生命周期中更稳健地传播工件的可能解决方案也可以与敏捷 MBSE [[76]](#76) 和 DevOps [[62]](#62) 相关。这些范例被视为数字线程的推动者 [[80]](#80)，并引起了业界越来越多的兴趣。
另一个相关方面是使用数字孪生 (DT) [[48]](#48)：利用 DT 被视为设计过程中的强大推动者，也是在系统实施之后集成分析的一种手段。

### Empirical Measurements and Benchmarks in MBSE

对于所研究的解决方案类型，没有基准或类似的参考测量，作者通常采用临时或特定案例的指标。
测量通常仅限于所提出的 V&V 解决方案的质量属性，而没有尝试在 MBSE 环境中测量解决方案的有效性。
对 MBSE 感知价值的批判性评论发现，采用 MBSE 带来的好处中只有大约 10% 是与任何指标相对照的，测量评估的低比例同样反映在这篇评论中，约为 11%。缺乏适当的 MBSE 使用情况报告指标限制了研究的影响，因为它通常仅限于轶事例子或观察，很难放在更广泛的背景下。
Garousi 等人 [[33]](#33) 对产学研合作面临的挑战进行了文献综述，发现常见的挑战与学术解决方案在工业环境中的适用性不足以及对有价值解决方案的不同看法有关。此外，Garousi 等人强调，合作的最佳实践是以现实世界的问题为基础进行研究。但研究和实践之间仍然存在相当大的差距。在这方面，一个可能的解决方案是通过对学术界开发的解决方案提出更明确的要求来具体化与 MBSE 相关的工业需求。从工业角度对 MBSE 解决方案定义更严格的要求可能是弥补目前观察到的一些差距的一种手段。

### Barriers for Industrial Adoption of Early V&V in MBSE

![Challenges for industry adoption of Early V&V for system behaviour in MBSE.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24081403.png)

*Model Based*
找到抽象和保真度之间的正确平衡是一个反复出现的挑战，并且通常是在 MBSE 背景下实现成熟的早期 V&V 的先决条件。事实上，从业者本身在论文中大多被忽略，解决方案的整体可用性并不是优先事项。似乎没有明确的观点来解决这个问题，也许是因为 RQ4 中看到的许多领域的广泛应用。 此外，基于模型的实践在很大程度上依赖于工具，并且在提取过程中遇到了许多传统问题，例如互操作性、自动化和可扩展性，这再次证实了该领域以前的工作。学术工具与更重要的工具环境集成的讨论明显不足。正如预期的那样，挑战是重叠的，但当行业越来越多地转向 OSLC15 等标准以促进更标准化的数据交换时，观察到的许多学术解决方案都存在目标非常狭窄、工具和语言独特的问题。此外，行业从业者和学术研究人员之间似乎存在差距，而且为学术界开发的工具可能旨在解决与行业需求不同的其他问题。

*Systems Engineering*
使用 SE 的大部分行业正在向至少部分采用 MBSE 的方向转变。然而，遗留问题往往是巨大的，不能简单地为了新方法或工作方法而丢弃，但关于如何在 RQ3 数据提取中促进这种集成的讨论却很少。然而，这些解决方案通常是为专家受众设计的，这限制了解决方案的更广泛适用性（特别是因为许多工程师在基于模型的方法方面都是完全的新手）。采用的一大障碍是难以提供 MBSE 方法的可衡量效益。许多解决方案仅限于扩展到周围活动，例如，解决方案缺乏上下游联系。同样，关于如何管理分析模型以促进重复使用和高效的未来决策的讨论很少。可追溯性以及最近的数字线程在很大程度上被忽略了，从而降低了它们的适用性。普遍缺乏与领域无关的和更通用的解决方案阻碍了现有解决方案的采用。

*Validation & Verification*
解决方案中一个很大的空白是讨论不确定性和分析有效性，这也是 RQ5 中的局限性之一。在开发的早期阶段，所有模型中都存在不确定性，需要付出相当大的努力来缓解和推理，以便正确定位结果并将其用于决策。然而，很少有人讨论如何在解决方案中管理不确定性，以及分析抽象会带来什么影响，这是作者在 RQ5 中报告的更突出的局限性之一。分析有效性也是如此。如果对重复使用感兴趣，那么就需要对何时可以使用方法或模型进行正确分析以及用户如何根据案例确定所考虑的模型是否足够丰富以产生有效的分析结果进行分类。同样，许多解决方案使用自定义工具进行实施，限制了 SE 流程中的集成。特别是，依赖几种特定的工具会增加流程的复杂性，并可能导致供应商锁定增加。

## Conclusions

> This article reports the results of a systematic literature review on early behaviour validation and verification in model-based systems engineering. From a set of 701 papers retrieved through searches and snowballing activities, we selected 149 relevant contributions, we extracted and coded the obtained data, and we performed analyses whose results and findings are presented in the work. In this respect, we notice an increased interest in performing early V&V and observe a broad range of domains in the analysed papers, with a corresponding variety of methods, tools, and languages. Further, we note a strong industrial presence in the literature and several industrial perspective trends that differ from the academic ones. To name a few of our findings, we note that SysML is the most represented language in industry and academia for describing system behaviour. In contrast, the language or formalism for analysis varies between most solutions. Additionally, several limitations are identified, indicating a lack of readiness for the solutions together with the concerns about managing analysis with low-fidelity models. Finally, a significant divide emerges between the academic and industrial implementation of solutions; such a divide is especially observable for SysML, utilised across all contexts but relying on different tooling for the contexts.
> We contextualise the review findings and discuss the current status of early validation of system behaviour in the context of industrial MBSE adoption. The review is structured according to the needs of the industry to promote the eventual adoption of early V&V and MBSE processes at large. The review provides actionable insights for the five presented research questions to promote further investigation into this area. Furthermore, we distinguish three areas, Model-Based, Systems Engineering, and Validation & Verification, and highlight a set of corresponding barriers for each area, which we feel need to be addressed to promote and support industrial adoption of early V&V techniques. As such, we hope the findings of this review can provide an adequate state-of-the-art view and pave the way for future investigations for researchers and practitioners.

`个人总结`

本文是一篇高质量的MBSE领域综述，综述的结构本身值得借鉴，文章以V&V过程为对象，研究了MSBE的方法、工具、技术和发展等内容，提出了领域研究的若干关键问题和相关质疑，有很高的参考价值，值得反复查阅。

`参考文献`

<a id="88">[88]</a>David D. Walden, Garry J. Roedler, and Kevin Forsberg. 2015. INCOSE systems engineering handbook version 4: updating the reference for practitioners. In Proceedings of the INCOSE Annual International Symposium, Vol. 25. Wiley Online Library, 678–686.
<a id="56">[56]</a>Edward A. Lee and Marjan Sirjani. 2018. What good are models? In International Conference on Formal Aspects of Component Software. Springer, 3–31.
<a id="10">[10]</a>George E. P. Box and Norman R. Draper. 1987. Empirical Model-building and Response Surfaces.John Wiley & Sons.
<a id="31">[31]</a>Sanford Friedenthal, Regina Griego, and Mark Sampson. 2007. INCOSE model based systems engineering (MBSE) initiative. In Proceedings of the INCOSE Annual International Symposium, Vol. 11. sn.
<a id="35">[35]</a>Iris Graessler and Julian Hentze. 2020. The new V-model of VDI 2206 and its validation. at-Automatisierungstechnik 68, 5 (2020), 312–324.
<a id="36">[36]</a>Joe Gregory, Lucy Berthoud, Theo Tryfonas, Alain Rossignol, and Ludovic Faure. 2020. The long and winding road: MBSE adoption for functional avionics of spacecraft. J. Syst. Softw. 160 (2020), 110453.
<a id="17">[17]</a>Joe Gregory, Lucy Berthoud, Theo Tryfonas, Alain Rossignol, and Ludovic Faure. 2020. The long and winding road: MBSE adoption for functional avionics of spacecraft. J. Syst. Softw. 160 (2020), 110453.
<a id="67">[67]</a>Mara Nikolaidou, George-Dimitrios Kapos, Anargyros Tsadimas, Vassilis Dalakas, and Dimosthenis Anagnostopoulos. 2016. Challenges in SysML model simulation. Adv. Comput. Sci. Int. J. 5, 4 (2016), 49–56.
<a id="94">[94]</a>Bernard P. Zeigler, Saurabh Mittal, and Mamadou Kaba Traore. 2018. MBSE with/out simulation: State of the art and way forward. Systems 6, 4 (2018), 40.
<a id="20">[20]</a>M. Chami and J. M. Bruel. 2018. A Survey on MBSE Adoption Challenges. In INCOSE EMEA Sector Systems Engineering Conference (INCOSE EMEASEC’18). 1–16.
<a id="53">[53]</a>Christopher Laing, Pierre David, Eric Blanco, and Xavier Dorel. 2020. Questioning integration of verification in modelbased systems engineering: An industrial perspective. Comput. Industr. 114 (2020), 103163.
<a id="60">[60]</a>Junda Ma, Guoxin Wang, Jinzhi Lu, Hans Vangheluwe, Dimitris Kiritsis, and Yan Yan. 2022. Systematic Literature Review of MBSE Tool-Chains. Appl. Sci. 12, 7 (2022), 3431.
<a id="73">[73]</a>Muhammad Rashid, Muhammad Waseem Anwar, Farooque Azam, and Muhammad Kashif. 2016. Model-based requirements and properties specifications trends for early design verification of embedded systems. In Proceedings of the 11th System of Systems Engineering Conference (SoSE’16). IEEE, 1–7.
<a id="25">[25]</a>Pierre De Saqui-Sannes, Rob A. Vingerhoeds, Christophe Garion, and Xavier Thirioux. 2022. A taxonomy of MBSE approaches by languages, tools and methods. IEEE Access (2022).
<a id="66">[66]</a>Christian Nigischer, Sébastien Bougain, Rainer Riegler, Heinz Peter Stanek, and Manfred Grafinger. 2021. Multidomain simulation utilizing SysML: State of the art and future perspectives. Proc. CIRP 100 (2021), 319–324.
<a id="41">[41]</a>Kaitlin Henderson and Alejandro Salado. 2021. Value and benefits of model-based systems engineering (MBSE): Evidence from the literature. Syst. Eng. 24, 1 (2021), 51–66.
<a id="5">[5]</a>Hugo Araujo, Mohammad Reza Mousavi, and Mahsa Varshosaz. 2022. Testing, validation, and verification of robotic and autonomous systems: A systematic review. ACM Trans. Softw. Eng. Methodol. (2022).
<a id="2">[2]</a>T. Ahmad, J. Iqbal, A. Ashraf, D. Truscan, and I. Porres. 2019. Model-based testing using UML activity diagrams: A systematic mapping study. Computer Science Review 33 (2019), 98–112.
<a id="21">[21]</a>Jean-Charles Chaudemar and Pierre de Saqui-Sannes. 2021. Mbse and mdao for early validation of design decisions: A bibliography survey. In Proceedings of the IEEE International Systems Conference (SysCon’21). IEEE, 1–8.
<a id="86">[86]</a>Naoum Tsioptsias, Antuela Tako, and Stewart Robinson. 2016. Model validation and testing in simulation: A literature review. In Proceedings of the 5th Student Conference on Operational Research (SCOR’16). Schloss Dagstuhl-LeibnizZentrum fuer Informatik.
<a id="58">[58]</a>Zihang Li, Jinzhi Lu, Guoxin Wang, Lei Feng, Didem Gurdur Broo, and Dimitris Kiritsis. 2021. A Bibliometric Analysis on Model-based Systems Engineering. In Proceedings of the IEEE International Symposium on Systems Engineering (ISSE’21). IEEE, 1–8.
<a id="51">[51]</a>Barbara Kitchenham, Rialette Pretorius, David Budgen, O. Pearl Brereton, Mark Turner, Mahmood Niazi, and Stephen Linkman. 2010. Systematic literature reviews in software engineering—A tertiary study. Inf. Softw. Technol. 52, 8 (2010), 792–805.
<a id="92">[92]</a>Claes Wohlin, Per Runeson, Martin Höst, Magnus C. Ohlsson, Björn Regnell, and Anders Wesslén. 2012. Experimentation in Software Engineering. Springer Science & Business Media.
<a id="79">[79]</a>Mary Shaw. 2002. What makes good research in software engineering?Int. J. Softw. Tools Technol. Transf. 4, 1 (2002), 1–7.
<a id="7">[7]</a>Johan Bergelin, Antonio Cicchetti, and Emil Lundin. 2022. Early validation of heterogeneous battery systems in the railway domain. In Proceedings of the IEEE International Systems Conference (SysCon’22). IEEE, 1–8.
<a id="63">[63]</a>Yaroslav Menshenin, Carolina Moreno, Yana Brovar, and Clement Fortin. 2021. Integration of MBSE and PLM: Complexity and uncertainty. Int. J. Prod. Lifecycle Manage. 13, 1 (2021), 66–88.
<a id="90">[90]</a>James R. Williams, Frank R. Burton, Richard F. Paige, and Fiona A. C. Polack. 2012. Sensitivity analysisin model-driven engineering. In International Conference on Model Driven Engineering Languages and Systems. Springer, 743–758.
<a id="76">[76]</a>Bill Schindel and Rick Dove. 2016. Introduction to the agile systems engineering life cycle MBSE pattern. In Proceedings of the INCOSE Annual International Symposium, Vol. 26. Wiley Online Library, 725–742.
<a id="62">[62]</a>John T. J. Mathieson, Thomas Mazzuchi, and Shahram Sarkani. 2020. The systems engineering DevOps lemniscate and model-based system operations. IEEE Syst. J. 15, 3 (2020), 3980–3991.
<a id="80">[80]</a>Victor Singh and Karen E. Willcox. 2018. Engineering design with digital thread. AIAA J. 56, 11 (2018), 4515–4528.
<a id="48">[48]</a>David Jones, Chris Snider, Aydin Nassehi, Jason Yon, and Ben Hicks. 2020. Characterising the digital twin: A systematic literature review. CIRP J. Manufact. Sci. Technol. 29 (2020), 36–52.
<a id="33">[33]</a>Vahid Garousi, Kai Petersen, and Baris Ozkan. 2016. Challenges and best practices in industry-academia collaborations in software engineering: A systematic literature review. Inf. Softw. Technol. 79 (2016), 106–127.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>TOSEM</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>Validation &amp; Verification</tag>
        <tag>MBSE</tag>
        <tag>Review</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Model Transformation Development Using Automated Requirements Analysis, Metamodel Matching, and Transformation by Example</title>
    <url>/2024/08/17/002/</url>
    <content><![CDATA[
[Model Transformation Development Using Automated Requirements Analysis, Metamodel Matching, and Transformation by Example](https://dl.acm.org/doi/abs/10.1145/3471907)

*作者是KCL的Kevin Lano。*

`Abstraction`

> In this article, we address how the production of model transformations (MT) can be accelerated by automation of transformation synthesis from requirements, examples, and metamodels. We introduce a synthesis process based on metamodel matching, correspondence patterns between metamodels, and completeness and consistency analysis of matches. We describe how the limitations of metamodel matching can be addressed by combining matching with automated requirements analysis and model transformation by example (MTBE) techniques.
> We show that in practical examples a large percentage of required transformation functionality can usually be constructed automatically, thus potentially reducing development effort. We also evaluate the efficiency of synthesised transformations.
> Our novel contributions are:
>
> - The concept of correspondence patterns between metamodels of a transformation.
> - Requirements analysis of transformations using natural language processing (NLP) and machine learning (ML).
> - Symbolic MTBE using “predictive specification” to infer transformations from examples.
> - Transformation generation in multiple MT languages and in Java, from an abstract intermediate language.

## Introduction

Model Transformations (MT)是MDE的关键要素。大型手动转换成本高管理难[[9]](#9) [[49]](#49)。元模型匹配技术[[1]](#1) [[17]](#17) [[31]](#31)。

四个困难：1、匹配方法只能找到一种转换，但实际上有多种；2、穷举搜索复杂度高；3、无法检测源和目标的关系；4、通常只处理单一语言转换的场景。

- (i) many different transformations may be possible between two given metamodels, and a matching approach typically only detects a single transformation;
- (ii) exhaustive search for possible matches becomes infeasible even for cases of moderate size (around 25 to 30 metaclasses in the combined metamodels);
- (iii) detailed functional relationships between source and target data, such as applications of specific numeric or string functions, cannot normally be detected;
- (iv) the process is usually directed to and optimised for producing transformations in a single MT language.

MTBE(Transformation by example)处理1-3的问题，使用$\mathcal{T}\mathcal{L}$[[48]](#48)处理4的问题。

![Transformation synthesis process.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24081601.png)

图展示了整体流程。其中$\tau _{re}\tau _{mm}\tau _{cc}\tau _{f}$是映射的三个中间量。

研究问题：

- RQ1 : To what extent can automated metamodel matching be combined with interactive enhancement of matchings to accurately capture the mapping rules of an intended transformation?匹配的程度
- RQ2 : Can automated requirements analysis using NLP/ML and MTBE techniques improve the accuracy of the approach compared to stand-alone metamodel matching?本文的NLP+MTBE技术能否提高准确性
- RQ3 : Can the combined approach engineer transformations with appropriate correspondence and design patterns?
- RQ4 : Can the combined approach produce efficiently executable transformations?

### Illustrative Example: Gantt2CPM

本文用到的一个例子：甘特图到CPM网络。介绍了该MT的原则。

## Scope and bcakground

### Scope of the Approach

对于M2M问题，根据[[55]](#55)进行分类：

- (General) migration 抽象层级相同但元模型不同
- Evolution migration 一个元模型版本变更
- Refinement 高抽象层级向低抽象层级映射
- Abstaction 低抽象层级向高抽象层级映射
- Code generation 从设计规范模型生成代码
- Semantic mapping 将源模型映射到有形式化语义的模型
- Bidirectional(Bx) 双向映射，支持模型同步和变更传播
- Refactoring 单个模型转换

### $\mathcal{T}\mathcal{L}$ Transformation Repersentation

使用$\mathcal{T}\mathcal{L}$语法描述转换过程。包括集合的划分、符号标识、每个环节的输入输出和$\tau _{re}\tau _{mm}\tau _{cc}\tau _{f}$符号对应的环节。

### Natural Language Processing and Machine Learning

介绍了NLP的主要技术类型和划分词义的种类和机器学习的基本概念。

## Automated MT Requierments Analysis

如果转换过程存在自然语言需求声明，原则上可以应用NLP技术提取有关转换预期映射的一些信息，有助于元模型匹配。

### Automated Requirements Analysis Using NLP

使用NLP对Gantt2CPM案例进行需求分析。
首先使用Stanford POS tagger标记需求语句中的词类型，然后构建语法树。创建了CART决策树作为分类器，对需求语句中的关键词类型进行识别。

### Tool Support for MT Requirements Analysis

在工具中如何使用的说明。

## Metamodel Correspondence Patterns

{% note flat %}
这篇文章太长太难，还没看完，先记到这里……
{% endnote %}

### Occurrence of Correspondence Patterns in Practice

### Catalogue of Correspondence Patterns

### Correspondence Patterns in Gantt2CPM

### Tool Support for Recognising Correspondence Patterns

## Metamodel Matching Techniques

### Metamodel Matching Concepts

### Similarity Measures for Metamodel Matching

### Metamodel Matching for the Gantt2CPM Case

### Tool Support for Metamodel Matching

## Transformation Correction and Enhancement

### Completeness and Consistency Analysis

### Specification Enhancement for the Gantt2CPM Case

## MTBE Using Perdictive Specification

### Empirical Study of Transformation Mappings and Conditions

### Correction and Extension of Transformations using MTBE

### MTBEfortheGantt2CPMCase

### Tool Support for MTBE

## Transformation Synthesis

### Synthesis of UML-RSDS and Java

### Transformation Synthesis for the Gantt2CPM Case

### Tool Support for Transformation Synthesis

## Evaluation

### RQ1:Correspondence Recognition

### RQ2:Contributions of Automated Requirements Analysis and MTBE

### RQ3:Transformation Design

### RQ4:Transformation Efficiency

## Threats to Validity

### Threats to Internal Validity

### Threats to External Validity

### Threats to Construct Validity

### Threats to Content Validity

### Threats to Conclusion Validity

## Related and Future Work

### Automated Requirements Engineering

### MTBE Approaches

### Correspondence Patterns

### Metamodel Matching Approaches

### Summary

### Limitations and Future Work

## Conclusions

`个人总结`

`参考文献`
<a id="9">[9]</a>L. Burgueno, J. Cabot, and S. Gerard. 2019. The future of model transformation languages: an open community discussion J. Obj. Technol. 1–11. Retrieved from www.jot.fm/issues/issue_2019_03/article7.pdf.
<a id="49">[49]</a>K. Lano, Q. Xue, and S. Kolahdouz-Rahimi. 2020. Agile Specification of Code Generators for Model-Driven Engineering. In Proceedings of ICSEA 2020. IARIA, 9–15.
<a id="1">[1]</a>L. Addazi, A. Cicchetti, J. D. Rocco, D. D. Ruscio, L. Iovino, and A. Pierantonio. 2016. Semantic-based model matching with emfcompare, me workshop, models. CEUR-WS 1706, 40–49.
<a id="17">[17]</a>S. Fang and K. Lano. Extracting correspondences from metamodels using metamodel matching. In STAF 2019. Retrieved from CEUR-WS.org/vol-2405/02_paper.pdf.
<a id="31">[31]</a>M. Kessentini, A. Ouni, P. Langer, M. Wimmer, and S. Bechikh. 2014. Search-based metamodel matching with structural and syntactic measures. Journal of Software and Systems 97, 2014 (2014), 1–14.
<a id="48">[48]</a>K. Lano, S. Fang, and S. Kolahdouz-Rahimi. TL: An abstract specification language for bidirectional transformations. MODELS’20 Comp. Proc. 77 (2020), 1–10.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>TOSEM</category>
        <category>2022</category>
      </categories>
      <tags>
        <tag>MDE</tag>
        <tag>Model Transformations</tag>
        <tag>Requirements Engineering</tag>
        <tag>Automated Software Engineering</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Testing, Validation, and Verification of Robotic and Autonomous Systems:A Systematic Review</title>
    <url>/2024/08/23/003/</url>
    <content><![CDATA[
[Testing, Validation, and Verification of Robotic and Autonomous Systems: A Systematic Review](https://dl.acm.org/doi/full/10.1145/3542945)

*作者是KCL的Hugo Araujo。*

`Abstraction`
> We perform a systematic literature review on testing, validation, and verification of robotic and autonomous systems (RAS). The scope of this review covers peer-reviewed research papers proposing, improving, or evaluating testing techniques, processes, or tools that address the system-level qualities of RAS.
Our survey is performed based on a rigorous methodology structured in three phases. First, we made use of a set of 26 seed papers (selected by domain experts) and the SERP-TEST taxonomy to design our search query and (domain-specific) taxonomy. Second, we conducted a search in three academic search engines and applied our inclusion and exclusion criteria to the results. Respectively, we made use of related work and domain specialists (50 academics and 15 industry experts) to validate and refine the search query. As a result, we encountered 10,735 studies, out of which 195 were included, reviewed, and coded.
> Our objective is to answer four research questions, pertaining to (1) the type of models, (2) measures for system performance and testing adequacy, (3) tools and their availability, and (4) evidence of applicability, particularly in industrial contexts. We analyse the results of our coding to identify strengths and gaps in the domain and present recommendations to researchers and practitioners.
> Our findings show that variants of temporal logics are most widely used for modelling requirements and properties, while variants of state-machines and transition systems are used widely for modelling system behaviour. Other common models concern epistemic logics for specifying requirements and belief-desireintention models for specifying system behaviour. Apart from time and epistemics, other aspects captured in models concern probabilities (e.g., for modelling uncertainty) and continuous trajectories (e.g., for modelling vehicle dynamics and kinematics).
> Many papers lack any rigorous measure of efficiency, effectiveness, or adequacy for their proposed techniques, processes, or tools. Among those that provide a measure of efficiency, effectiveness, or adequacy, the majority use domain-agnostic generic measures such as number of failures, size of state-space, or verification time were most used. There is a trend in addressing the research gap in this respect by developing domainspecific notions of performance and adequacy. Defining widely accepted rigorous measures of performance and adequacy for each domain is an identified research gap.
> In terms of tools, the most widely used tools are well-established model-checkers such as Prism and Uppaal, as well as simulation tools such as Gazebo; Matlab/Simulink is another widely used toolset in this domain.
> Overall, there is very limited evidence of industrial applicability in the papers published in this domain.
> There is even a gap considering consolidated benchmarks for various types of autonomous systems.

## Introduction

### Motivation-1

Robotic and Autonomous Systems (RAS)机器人和自主系统。本论文涵盖了RAS的广度和系统性二次研究的调研，并对结果进行分析。

### Scope and Audience

受众：研究者和从业者。所调研的RAS研究的范围。

### Research Questions

几个关键名词的含义，包括types of models, efficiency, effectiveness, coverage measures, (public available) tools, evidence of applicability。

### Structure of the Article

本文的其余部分结构如下：在第 2 部分中，我们回顾了相关工作，重点关注相关主题的二手研究（文献调查和评论）。在第 3 部分中，我们定义了本文的范围并解释了此结构化综述的背景。在那里，我们报告了我们开始研究的核心结果集，作为我们搜索的种子，以形成研究。在第 4 部分中，我们回顾了我们用于系统评价的方法；这包括我们的搜索和选择策略的描述、用于编码结果的分类法的开发、我们的数据提取和综合方法。在本节中，我们还反思了对我们研究的威胁。在第 5 部分中，我们展示了我们的编码结果并对其进行分析以回答我们的研究问题。在第 6 部分中，我们反思了我们的分析并为目标受众（即研究人员和从业人员）提供了具体的建议。在第 7 部分中，我们总结了本文并提出了一些未来研究的方向。

## Related Work

[[55]](#55)这项研究的目标是为机器人软件开发人员提供提示，帮助他们根据感兴趣的属性和软件系统选择合适的分析方法。

[[99]](#99) [[181]](#181)概述了自主系统测试和验证面临的挑战以及可用的技术和结果。

[[118]](#118)聚焦了自动驾驶汽车环境中的问题。

[[79]](#79)概述了V&V领域的研究，主要有关机器学习和自动驾驶场景。

[[114]](#114)自动驾驶与软件的挑战，通过采访从业者的角度进行的。

[[180]](#180)汽车行业中使用的神经网络功能安全性评估的三个具体问题。

[[108]](#108)对公开可用的驾驶数据集以及自动驾驶算法的虚拟测试进行了调查。

[[20]](#20)作者提到了自动驾驶功能的复杂性、场景和参数的变化、场景选择和测试生成等挑战。

[[138]](#138)对用于自主机器人系统的形式化规范和验证方法及工具进行了调查。除了此类系统的内部结构之外，还提出了许多正式建模和验证机器人系统运行环境的挑战。

[[89]](#89)概述了集成形式化方法在机器人和自主系统中的优势、劣势、机遇和威胁。

[[207]](#207)对自动驾驶汽车基于覆盖范围的验证、确认和安全保障技术进行了系统的文献综述。

[[178]](#178)对自动驾驶汽车的软件验证和确认进行了广泛而系统的文献综述。

## Background and Rationale

### Motivation-3

结合相关工作，提出了二次研究的几个问题：（1）对现有的机器人和自主系统验证和确认结果进行结构化回顾；（2）讨论了以下四个具体问题：(a) the types of models, (b) measures of efficiency and effectiveness, (c) available tools, and (d) evidence of applicability to large-scale and industrial systems。

### Robotic and Autonomous System

RAS定义：
An autonomous system is an intelligent system that is designed to deal with the physical environment on its own and work for extended periods of time without explicit human intervention. They are built to analyse, learn from, adapt to, and act on the surrounding environment.

### Testing and the SERP-Test Taxonomy

![Illustration of taxonomy.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082301.png)

本文的论文分类方法基于SERP-Test分类法[[68]](#68)，测试分类四个方面：intervention, effect, scope, and context。

- Intervention pertains to the test techniques, their adaptation, and adoption in different context.
- Effect facet is used to identify the improvement or adaptation in a given practise as well as any insights gained through assessment.
- The scope specified whether the effect has been materialised in planning, design, execution, or analysis of tests.
- Context, as its name suggests, specifies the environment where the intervention takes place, in terms of people and their knowledge, the system under test, and the required models and other types of information.

## Methodology

### Seed Papers

- 收集初始搜索查询的关键字
- 完善纳入和排出标准
- 评估和调整SERP-Test分类法

### Selection Strategy

#### Inclusion Criteria

纳入标准的规则。

#### Exclusion Criteria

排出标准的规则。

### Taxonomy

介绍基于SERP-Test分类法的具体的分类原则。

### Search Strategy

#### Initial Query

关键词搜索。

#### Validated Query

对搜索完的结果进行验证。

### Overview of the Results

![Relevant and included papers by year.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082302.png)

最后确定了195篇论文。

## Results

### RQ1: Models

关注用于描述RAS的模型和形式类型及其在测试干预中的属性。

#### Modelling Properties

表一关注表示属性的模型。不到三分之一使用模型或逻辑来描述系统的属性，这类算形式模型。所有属性语言都是领域无关的。

#### Modelling System Behaviour or Structure

表二关注描述RAS行为或结构的模型。三分之一采用定性模型。

### RQ2: Effect

评估各种测试干预措施的efficiency (testing time or resources), effectiveness (testing quality), and coverage (testing adequacy)的指标。

#### Measuresfor Interventions

大多数其他概念仅用于单一干预措施。

#### Measures for Subject Systems

### RQ3: Tooling

#### Context Tools

模拟工具是最常用的工具之一；它们的实用性来自于一种成本较低的可视化方法，可以直观地显示设计和流程是否令人满意。中间件 ROS 与 3D 模拟器 Gazebo 相结合，形成了最流行的机器人模拟工具。此外，Simulink 是 MATLAB 的图形扩展，是动态系统建模和仿真最常用的工具。此外，形式化验证工具也得到了广泛应用，其中最突出的是模型检查器。统计模型检查器 Prism 提供对马尔可夫链或概率自动机中随机系统的建模和分析。至于定性模型，UPPAAL 为定时自动机模型提供了形式化验证，但可以扩展以使用数据类型。

#### Effect Tools

关注了哪些工具是否开源的问题和使用领域。

### RQ4: Applicability

我们的观察发现，工业界对干预措施的评估存在很大差距；只有 20 项干预措施在工业背景下进行了评估。可以理解的是，大多数案例研究都是在学术环境中进行的。其中，约有一半使用了小规模模型，这些模型通常不能代表真实系统。另一半将他们提出的干预措施应用于大规模主题和数据集，包括物理系统。

## Suggestions and Recommendations to Study Audience

在本节中，我们将分析前几节的结果，以确定我们的研究问题和两个目标受众群体（研究人员和从业者）的相对优势和劣势。我们将从我们的分析中为研究人员和从业者提出建议，以此结束本节。

### Analysis

#### Domain

针对RAS特定子领域的测试、验证和确认。

……跳过对表8的介绍……

- 在所有子领域中，大多数模型都是正式的和定量的，并且在使用定性和非正式模型进行测试方面可以发现很大的差距（最明显的是在飞行器和移动机器人子领域）。
- 在所有研究的子领域中，在使用有效性、效率和覆盖率的精确概念方面存在明显差距。其中，一些通用的有效性和效率概念（如测试时间和状态空间大小）以及覆盖率概念（如节点和转换覆盖率）是量化效果的最常用度量。常见的、更复杂的有效性、效率和充分性度量，如平均故障检测百分比 (APFD) ，似乎尚未在 RAS 领域被采用或扩展到 RAS 领域。我们确实看到最近出现了一些针对特定领域的有效性和覆盖率概念的趋势；几乎所有这些概念都已应用于自动驾驶汽车领域，但其中大多数也可以调整以适用于其他领域。
- 在测试 RAS 的工具支持方面存在相当大的差距。开源工具很少，主要是在自动驾驶汽车和飞行器子域中。没有开源工具支持移动机器人系统的特定领域方面。专有工具也存在同样的模式，但差距更大。在所审查的文献中，开发或使用的公共（但不是开源）工具非常少。
- 在使用工业案例研究评估 RAS 测试干预措施方面，所有子领域也存在非常严重的差距。最值得注意的例外是少数案例研究，主要是在自动驾驶汽车和飞行器子领域，是在工业环境中进行的。许多干预措施使用小型案例研究，大多没有任何特定的应用子领域（例如，使用移动机器人的通用模型）；在这些情况下，模型不包含足够的细节来成为一般基准的一部分。还有一些基于无人机和无人驾驶飞机的小型案例研究进行评估。

*Analysis for Researchers*
**Gaps:** 在我们对所研究子域的分析中，我们发现在处理海洋和海底 RAS 方面存在明显差距。此外，在处理飞行器和移动机器人方面也存在相对薄弱之处。此外，在处理非正式和定性模型方面，各个子域之间也存在相对薄弱之处。开发一套通用的有效性和效率概念来比较不同的干预措施是一项值得研究的挑战，文献中在针对特定领域量身定制这些概念方面存在差距。同样的观察结果也适用于测试充分性的概念。工具，尤其是针对特定子域量身定制的工具，是所有干预措施的普遍弱点。此外，在工业环境中应用干预措施是一项突出的挑战。
**Strengths:** 道路车辆子域在所有研究问题中都具有相当大的优势。此外，针对通用 RAS 系统开发的干预措施远多于针对子域的特定关注点的干预措施。形式化和定量模型是迄今为止最强大的干预措施，无论是在技术研究数量还是在执行的评估方面，即使在工业领域也是如此。

*Analysis for Practitioners*
**Gaps:** **由于大多数提出的干预措施尚未在工业背景下进行评估，因此评估它们的适用性（包括研究学习曲线和培训等因素）仍然是一个巨大的差距。**
**Strengths:** 由于形式化和定量模型具有优势，开发此类模型提供了一个起点，可以从已开发和研究的干预措施中受益。道路车辆领域肯定有更成熟的实践可供借鉴，但我们可以设想，通过调整特定领域的方面，其他子领域也可能受益于这些优势。

#### Cooperation and Connectivity

验证方法对于自主系统的广泛部署和公众接受至关重要。由于通信协议、控制软件（例如，用于合作规则）和系统动态之间的密切交互，对此类方法的需求在网络服务支持的功能中得到了加强。现有的（手动）分析技术通常无法扩展到这些功能的巨大设计空间和输入空间，因此，在这项工作中，我们调查了文献中发现的自动验证技术。

总体而言，这是一个 RAS 测试研究不足的领域，文献中很少关注合作和连接场景的测试。对于文献中报道的极少数干预措施，几乎没有任何效率或有效性的证据。 少数报告的评估仅在小规模案例研究中进行，并且没有附带开源工具。

……跳过对表9的介绍……

- 关于用于分析 RAS 中合作场景的模型，我们注意到形式概率模型（基于时间逻辑、过程代数和时间自动机的变体）是最常用的模型类型。这些模型通常用于检查合作场景的抽象模型。非正式模型使用较少，仅作为模拟工具的输入。在这种情况下，定性和非正式模型使用得很少。
- 大多数有效性和效率概念都是通用概念，例如技术的状态空间大小、验证时间和测试覆盖率以及被测系统的死锁自由度和时间逻辑公式满足的概率。使用领域特定效率和有效性概念的唯一例外涉及群体的聚集时间和人机交互的有效性。
- 显然缺乏用于测试 RAS 中的合作和群体场景的工具。唯一的例外是公共模型检查工具和用于联网无人机的模拟工具。
- 很少有研究评估他们在工业规模案例研究和基准上的干预措施。

*Analysis for Researchers*
**Gaps:** 对纳入的研究进行分析表明，在 RAS 的合作场景中，通信网络和协议的作用及其对 RAS 系统的功能、安全性和可靠性的影响研究严重不足。将通信中可用的知识体系与 RAS 的测试和验证相结合显然是未来研究的领域。现有的研究非常少，没有提供与合作方面和新兴合作行为相关的领域特定效率和有效性衡量标准。此外，缺乏足够的证据表明这些策略已应用于工业规模的案例研究和基准。
**Strengths:** 抽象理论在群体参数化模型检验方面确实有优势。除此之外，没有其他集中的优势领域。

*Analysis for Practitioners*
**Gaps:** **如上所述，我们认为，协作机器人和群体机器人的研究成果还不够成熟，无法应用于实践。即使是现有技术也尚未应用于许多工业案例研究，目前也没有稳定的工具集。与研究人员合作定义有意义的效率和有效性概念，并提供基准和工业案例研究，可能会带来有影响力的未来研究议程。**
**Strengths:** 在测试合作和群体 RAS 场景时没有实际的优势领域。

#### Testing Strategy

到目前为止，最广泛使用的策略是形式验证，其次是模拟和运行时监控。基于模型的测试是研究最少的策略。

……跳过对表10的介绍……

- 到目前为止，定量测试技术是研究最广泛的策略（这也是领域和连接方面的常见观察结果）。
- 在用于评估干预措施的措施中，效率是最常用的，有效性紧随其后。然而，很少有干预措施使用覆盖率的概念进行评估。值得注意的是，对于运行时监控，只有两篇出版物采用了效率指标。
- 基于模型的测试和运行时监控工具严重缺乏。对于模拟和形式验证，在工具支持方面似乎有相当大的优势。
- 大约54%的干预措施使用小规模案例研究进行评估，而只有10%的干预措施在工业背景下评估其策略，这表明存在明显差距。

### For Researchers

如前几节所述，许多效率和有效性措施都非常通用，而且在适合 RAS 子域的领域特定措施方面也存在相对差距。缺乏领域特定建模语言和运行时验证方法数量有限表明 RAS 测试策略还有改进的空间。

另一个相当大的差距是使用定量规范语言来指定系统所需的属性；由于 RAS 固有的异质性，我们需要有属性语言来涵盖离散和连续动态以及随机和认知方面的组合等方面，这些方面可用于对与环境和用户有关的行为方面进行建模。此外，一些研究使用了 Gazebo 和 USARSim 等模拟工具的非正式模拟模型。一种合适的中间立场可能是半正式和特定领域的模型，例如在 Matlab/Simulink 中构建的模型。最后，缺乏公共工具是文献中观察到的一大缺陷。很少有技术附带工具，而且用于测试 RAS 的公共工具也很少。

### For Practitioners

最大的差距是缺乏对现有干预措施的工业评估。在工业背景下和工业复杂系统中应用的干预措施非常少。不幸的是，干预措施的数量太少，无法得出任何有意义的趋势，也无法表明在工业环境中适用的强有力证据。在提出的干预措施中，大多数要么涉及基于模拟的测试，要么将其验证结果与某些模拟工具（主要基于 ROS-Gazebo 集成）联系起来。
基于搜索的测试和交互测试是两种在工业环境中使用的值得注意的技术。在工业环境中采用的模型中，可以提到状态机和故障树的变体。在这方面的一项值得注意的研究是在工业环境中比较监督控制、演绎和归纳（模型检查）验证技术。人源和信息源是测试干预的另一个方面，这一方面研究严重不足。我们注意到，最近有一种趋势，即将用户研究（就人机交互和人机交互而言）与传统测试、验证和确认技术相结合。此外，在定义和评估测试流程方面也存在差距，特别是在工业环境中。显然，缺乏行业和领域专家对模型和技术的投入，导致大多数干预措施都使用通用且相对简单的建模技术和属性语言。与工业合作伙伴共同生产可以丰富这些方面，并产生能够处理工业 RAS 的异质性和复杂性的模型。

## Conclusions

关注的四个问题：

- (1) What are the types of models used for testing RAS?用于测试 RAS 的模型类型有哪些？**答：** 有大量正式和非正式模型用于测试 RAS。特别是，有大量关于使用通用属性规范语言（如线性时间逻辑）和定性建模语言（如状态机变体、UML 图、Petri 网和过程代数）的文献。定量建模语言存在明显差距，无法捕捉 RAS 的复杂性和异构性。还缺乏可以捕捉 RAS 各个子域领域知识的领域特定语言。
- (2) Which efficiency and effectiveness measures were introduced or used to evaluate RAS testing interventions?引入或使用了哪些效率和有效性措施来评估 RAS 测试干预措施？**答：** 我们观察到，在衡量测试干预措施的有效性和效率以及充分性的严格且被广泛接受的指标方面存在差距。与前面的项目类似，文献中使用的那些措施非常通用，与 RAS 的特定领域方面无关。因此，在定义和评估 RAS 测试干预措施的效率、有效性和充分性的严格（领域特定）措施方面存在差距和研究机会。
- (3) What are the interventions supported by (publicly available) tools in this domain?该领域（公开可用的）工具支持哪些干预措施？**答：** 有相当多的干预措施依赖公共工具来实施或评估其干预措施。然而，很少有研究将他们提出/评估的干预措施以公开可用的工具形式提供给公众使用。因此，在提供数据集和公共工具以进一步发展该领域方面存在相当大的差距。
- (4) Which interventions have evidence of applicability to large-scale and industrial systems?哪些干预措施有证据表明适用于大规模和工业系统？**答：** 在工业环境中评估的测试干预措施屈指可数。还有一些其他干预措施使用了一些真实的机器人或自主系统，但在学术环境中。这表明，未来学术界和工业界在 RAS 测试干预措施的工业评估中合作的重要性。

`个人总结`
对19年以来的RAS领域论文有比较好的分类，讨论了研究内容、技术手段、领域开展情况等问题，由于RAS在工业中应用较少，结论是比较悲观的。对于使用工具的调研比较有参考意义。

`参考文献`
<a id="55">[55]</a>A. Cortesi, P. Ferrara, and N. Chaki. 2013. Static analysis techniques for robotics software verification. In IEEE 44th International Symposium on Robotics. IEEE, 1–6.
<a id="99">[99]</a>Philipp Helle, Wladimir Schamai, and Carsten Strobel. 2016. Testing of autonomous systems—Challenges and current state-of-the-art. INCOSE Int. Sympos. 26, 1 (2016), 571–584. DOI:https://doi.org/10.1002/j.2334-5837.2016.00179.x
<a id="118">[118]</a>Philip Koopman and Michael Wagner. 2016. Challenges in autonomous vehicle testing and validation. SAE Int. J.Transport. Saf. 4 (04 2016), 15–24. DOI:https://doi.org/10.4271/2016-01-0128
<a id="79">[79]</a>Shenjian Gao and Yanwen Tan. 2017. Paving the Way for Self-driving Cars - Software Testing for Safety-critical Systems Based on Machine Learning: A Systematic Mapping Study and a Survey. Blekinge Tekniska Högsola.
<a id="114">[114]</a>A. Knauss, J. Schroder, C. Berger, and H. Eriksson. 2017. Software-related challenges of testing automated vehicles. In IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C). IEEE, 328–330.
<a id="180">[180]</a>Q. Rao and J. Frtunikj. 2018. Deep learning for self-driving cars: Chances and challenges. In IEEE/ACM 1st International Workshop on Software Engineering for AI in Autonomous Systems (SEFAIAS). IEEE, 35–38.
<a id="108">[108]</a>Y. Kang, H. Yin, and C. Berger. 2019. Test your self-driving algorithm: An overview of publicly available driving datasets and virtual testing environments. IEEE Trans. Intell. Vehic. 4, 2 (2019), 171–185.
<a id="20">[20]</a> Halil Beglerovic, Steffen Metzner, and Martin Horn. 2018. Challenges for the Validation and Testing of Automated Driving Functions. (Jan. 2018). DOI:https://doi.org/10.1007/978-3-319-66972-4_15
<a id="138">[138]</a>Matt Luckcuck, Marie Farrell, Louise A. Dennis, Clare Dixon, and Michael Fisher. 2019. Formal specification and verification of autonomous robotic systems: A survey. ACM Comput. Surv. 52, 5 (2019), 100:1–100:41. DOI:https:// doi.org/10.1145/3342355
<a id="89">[89]</a>Mario Gleirscher, Simon Foster, and Jim Woodcock. 2020. New opportunities for integrated formal methods. ACM Comput. Surv. 52, 6 (2020), 117:1–117:36. DOI:https://doi.org/10.1145/3357231
<a id="207">[207]</a>Zaid Tahir and Rob Alexander. 2020. Coverage based testing for V&V and safety assurance of self-driving autonomous vehicles: A systematic literature review. In IEEE International Conference on Artificial Intelligence Testing (AITest). IEEE, 23–30. DOI:https://doi.org/10.1109/AITEST49225.2020.00011
<a id="178">[178]</a>Nijat Rajabli, Francesco Flammini, Roberto Nardone, and Valeria Vittorini. 2021. Software verification and validation of safe autonomous cars: A systematic literature review. IEEE Access 9 (2021), 4797–4819. DOI:https://doi.org/10.1109/ ACCESS.2020.3048047
<a id="68">[68]</a>Emelie Engström, Kai Petersen, Nauman bin Ali, and Elizabeth Bjarnason. 2017. SERP-test: A taxonomy for supporting industry–academia communication. Softw. Qual. J. 25 (2017), 1269–1305.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>TOSEM</category>
        <category>2023</category>
      </categories>
      <tags>
        <tag>Validation &amp; Verification</tag>
        <tag>Review</tag>
        <tag>Robotics</tag>
        <tag>RAS</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：What makes a good modeling research contribution?</title>
    <url>/2024/08/23/004/</url>
    <content><![CDATA[
[What makes a good modeling research contribution?]([论文来源](https://link.springer.com/article/10.1007/s10270-024-01177-x))

*作者是Richard F. Paige。*

`Abstraction`

> The modeling field is rapidly evolving and expanding to address new research topics and to connect with new disciplines. As such, what constituted a good modeling research contribution ten years ago may not be the same today. We try to distill some insights of what we (and the community we aim to represent) consider today as key elements of a good research paper in the field of software and systems modeling. Such insights—which will need to evolve and adapt with time—will be useful not just for authors of new papers, but also for reviewers and editors.

## Introduction

关于如何撰写优秀软件工程论文的具体建议：针对特定章节的撰写建议[[1]](#1)、不同类型的软件工程论文[[5]](#5)，甚至关于如何以更符合软件工程审阅者期望的方式撰写论文的建议[[3]](#3)。

## Types of contributions to the modeling field

常见的论文关注的问题：

- how large is the community that the paper aims to address?
- how much potential impact is there in the result?
- how complex is the challenge the paper addresses?
- how substantial is the validation3, e.g., is there an industrial element to the validation?
- how distant is the topic of the paper from what we typically see in the modeling venues?
- how readable is the contribution?
- how relevant are the examples?
- and finally, how clear and persuasive is the motivation for the research presented in the paper?

此外，明确研究的正面作用和负面作用也很重要。
下面将介绍六种具体类型。

### The contribution is a model

仅凭一个模型肯定不行。这个新模型能告诉我们关于建模领域的什么？它能帮助我们回答哪些我们以前无法回答的问题？

### The contribution is a language

仅凭一个元模型也不行，需要完整的工作。

### The contribution is a core modeling technique

这些论文介绍了模型分析（模型验证、确认或测试技术等）或操作技术（模型合并、模型到模型转换、代码生成器等）。或将它们组合起来作为特定建模方法的一部分。这可能是我们多年来看到最多提案的类别。因此，在这一类别中，原创性更难实现，而证明新贡献确实有必要则更为重要。
例如，很难相信建模社区需要一种新的模型转换方法，除非它与具有非常具体要求的新语言、领域或应用程序相关联。

### The contribution is a modeling application

仅仅证明建模（或 MDE 或建模工具）可以应用于问题是不够的——相反，必须令人信服地证明建模提供了一些附加值，一些可以量化或以可重复的方式捕获的好处。

### The contribution is a (new) modeling domain

 除了单个应用程序（见上文），这里的目标是为新的工程或科学领域提供一些初步支持，然后这些支持可以发展成为该领域的一套完整的建模解决方案和应用程序。

### The contribution is a modeling tool

这些工具贡献不应只是研究工作的副产品或简单的一次性原型，而应是一种成熟、可用且广泛的工具，有可能对建模社区产生重大而积极的影响（通过吸引更多用户、促进更多项目采用建模实践等）。

## A community effort

就社区建设问题进行了介绍。

`个人总结`
作者就SoSyM期刊中的一些研究进行了分类和评估，从审稿人的角度分析一篇文章应具备哪些要素。

`参考文献`

<a id="1">[1]</a>Anthony, L.: Writing research article introductions in software engineering: How accurate is a standard model? IEEE Trans. Prof.Commun. 42(1), 38–46 (1999)
<a id="5">[5]</a>Montesi, M., Lago, P.: Software engineering article types: an analysis of the literature. J. Syst. Softw. 81(10), 1694–1714 (2008)
<a id="3">[3]</a>Ernst, N.A., Carver, J.C., Mendez, D., Torchiano, M.: Understanding peer review of software engineering papers. Empir. Softw. Eng. 26, 1–29 (2021)]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>SoSyM</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>Insights</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记：Design ontology for cognitive thread supporting traceability management in model-based systems engineering</title>
    <url>/2024/08/27/005/</url>
    <content><![CDATA[
[Design ontology for cognitive thread supporting traceability management in model-based systems engineering](https://www.sciencedirect.com/science/article/pii/S2452414X24000633)

*作者来自王国新和鲁金直团队。*

`Abstraction`

> Industrial information integration engineering (IIIE) is an interdisciplinary field to facilitate the industrial information integration process. In the age of complex and large-scale systems, model-based systems engineering (MBSE) is widely adopted in industry to support IIIE. Traceability management is considered the foundation of information management in MBSE. However, a lack of integration between stakeholders, development processes, and models can decrease the effectiveness and efficiency of the system development. A modified MBSE toolchain prototype has been developed to implement traceability management; however, a lack of formal and structured specifications makes it difficult to describe the complex topology in traceability management scenarios using this MBSE toolchain, such as creating traceability between heterogeneous models, which leads to poor reusability of this MBSE toolchain in other traceability management scenarios. To formalize traceability management scenarios using the MBSE toolchain, a cognitive thread (CT) ontology is developed in this study. The CT ontology is a specification expressing the information of stakeholders, models, and development processes for traceability management, providing the cognition capability to analyze the interrelationships between them. Based on the implementation of the modified MBSE toolchain, the concepts and interrelationships in the CT ontology are identified. The CT ontology is designed to develop the MBSE toolchain prototype for building, managing, and analyzing traceability in various traceability management scenarios. A case study of an adaptive cruise control system design is used to evaluate the completeness of the CT ontology through qualitative and quantitative analyses. The results demonstrate that the proposed CT ontology formalizes the information related to traceability management while using the proposed MBSE toolchain and can also be used in common traceability management scenarios to design other complex engineered systems.

## Introduction

Industrial information integration engineering (IIIE)工业信息集成工程的概念。Digital Thread (DT)数字线程被认为是实现MBSE的下一个信息管理和集成范例。它可以看做是将产品生命周期的各个阶段产生的信息链接到决策的框架中[[10]](#10)，信息的可追溯性管理就显得很重要。

可追溯性管理的问题：可追溯性管理场景的形式化应该是实现功能的先决条件；应妥善管理和分析模型与数据、开发过程与利益攸关者之间的依赖关系。

本文的主要贡献：设计了一个认知线程本体Cognitive thread (CT) ontology，与其他方法相比，CT本体可以为追溯性的构建和分析过程提供语义描述。CT概念参考[[19]](#19)。具体特点：

- (1) 将利益相关者、开发过程和系统工件之间的概念和相互关系形式化；
- (2) 提供基于预定义推理规则的认知能力。这些规则是基于利益相关者、开发过程和系统工件之间的相互关系制定的。认知能力可帮助利益相关者分析和理解协同设计中开发过程与模型和数据之间的复杂依赖关系，从而选择最佳设计。

在先前的一项研究 [[20]](#20) 中，开发了一个 MBSE 工具链来支持协同设计。为了实现可追溯性管理，我们改进了此工具链作为 CT 本体形式化的基础，其中包括以下四个方面：

- (1) 系统工件的开放生命周期协作服务 (OSLC) 服务，例如领域特定建模 (DSM)、数据等；
- (2) 从 DSM 模型生成的基于 Web 的流程管理系统 (WPMS)；
- (3) 统一身份验证系统；
- (4) OSLC 服务管理系统 (OSMS)。基于MBSE工具链的实现，识别了CT本体中的概念和相互关系，并以自适应巡航控制（ACC）系统设计的MBSE工具链为例，通过定性和定量的测量，评估了CT本体的完备性。

## Related Work

### Concept and state of the art of traceability management

The IEEE standard glossary of software engineering terminology defines traceability as the “degree to which a relationship can be established between two or more products of the development process” [[30]](#30).
尽管在 MBSE 领域中，对可追溯性或可追溯性管理尚无统一的定义，但用于开发工程系统的可追溯性概念与软件工程中的可追溯性概念类似。The International Council on Systems Engineering (INCOSE) defines traceability in the MBSE field as “a discernible association between two or more logical entities such as requirements, system elements, verifications, or tasks”[[32]](#32).

- 设计结构矩阵式可追溯性管理的最常用方法，但依赖额外的工具集。
- 模型转换是另一种方法，但大部分仅支持单向转换。（Guo等[[41]](#41)设计了代码生成语言语法来实现MBSE与Simulink模型之间的可追溯性。Kharrat等[[42]](#42)扩展了系统建模语言(SysML)配置文件，设计了一种模型转换方法来实现SysML与计算机辅助设计(CAD)模型之间的可追溯性。）
- 一些DSM工具链被视为是潜在解决方案。DSM 是一种工程方法，通过模型和一组形式化元模型来描述特定领域系统的信息。 这些工具链促进了不同领域模型之间的可追溯性。在本研究中，我们专注于 MBSE 工具链开发以支持可追溯性管理。

### Ontology design for traceability management in MBSE

本体是指对象的类型及其属性和关系，它们代表了领域特定知识。在MBSE实践中，本体用于形式化系统开发和工件的系统信息。由于工程系统的固有特性，各种设计活动和利益相关者之间的迭代和交互也增加了产品实现过程的复杂性。（信息不全且混乱）

### Cognitive thread for traceability management

数字线程的概念来自F35战斗机[[58]](#58) [[59]](#59)。
T. D. West et al [[60]](#60) considered it as “a framework for merging the conceptual models of the system with the discipline-specific engineering models of various system elements”.
最近，研究人员试图利用语义技术增强 DT 的认知能力。下一代 DT 的范式被提议为 CT [[19]](#19)，它是一种具有增强语义能力的 DT，可以形式化模型与数据、开发过程和组织之间的相互关系。还有一些其他研究利用知识图谱用于描述语义间的拓扑关系。

### Summary

几个动机：

- 为了形式化MBSE工具链，应开发描述MBSE工具链本身的本体模型。
- 工业界和学术界目标不同，本体还需要支持过程管理和工具操作。
- 使用CT能增强知识表达能力，现有方法没有在模型领域的分析。

## Research design

![Overview of research design.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082304.png)

如图所示，第一步确定可追溯性管理场景；第二步，采用系统思维支持CT本体设计，解决工具链中的问题；第三步基于CT本体，修改当前的MBSE工具链以支持可追溯性管理场景；第四步，通过ACC系统设计案例，对原型进行评估。

### Problem statement

在[[20]](#20) [[51]](#51)中开发了航空发动机仿真案例。利益相关者使用 DSM 模型来形式化开发流程和系统工件。 然后，将 DSM 模型转换为一个 WPMS，以部署技术资源并在 Simulink 中为不同的利益相关者实现自动联合仿真。本研究的步骤：

- 定义追溯性和追溯性管理的概念。[[19]](#19)
- 定义场景。
- 定义场景相关实体。
- 定义实体之间的相互关系。
- 使用工具链实例化。
- 案例研究评估。

### Prototype strategy for cognitive thread ontology design

![Overview of the MBSE toolchain prototype.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082305.png)

如图所示，（a）用Excel提取需求，用MetaGraph和KARMA体系建模，使用代码生成器将DSM模型转换为本体，基于此联合Simulink进行仿真。（b）开发OSLC适配器，通过特定的映射规则将数据转换为相应OSLC服务。（c）编译器加载DSM模型中的流程模型以生成WPMS。（d）统一身份验证系统提供数据访问控制。（e）最后，开发OSMS（Neo4j）来存储和分析WPMS中OSLC服务和开发流程之间的追溯性。

### Evaluation based on case study

提出了一个ACC系统设计案例，验证工具链的可行性与有效性。
（1）工具链原型开发：定义了4个指标。
（2）评估问题分析：提出了7个问题。
定量方法方面，参考SPIRIT框架[[68]](#68)分析三个方面：模型互操作性、开发流程利益攸关者之间的沟通程度、追溯认知推理分析的能力。

## Ontology of cognitive thread for traceability management in MBSE

![CT ontology for traceability management.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082306.png)

本节介绍CT本体的具体内容，对应第一个图的第二步。

### Ontology formalizing models

![Fig. 4. Mapping process between OSLC services and models.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082701.png)

本节主要关注模型信息。在提出的 MBSE 工具链中，结构化需求文档被视为非正式模型，DSM 模型是描述性模型，Simulink 模型是分析性模型。DSM 模型是基于 GOPPRR-E 建模方法生成的。基于 OSLC 核心规范[[22]](#22)开发了需求表、DSM 模型和 Simulink 模型的 OSLC 服务，以支持数据集成和互操作。为了描述OSLC服务，使用OWL语言进行形式化[[71]](#71)。论文讲述了以上三者之间的映射方法，具体方式如图4左侧描述。

### Ontology formalizing development process

本节主要关注开发过程的结构信息。采用的是BPMN开发流程。

### Ontology formalizing stakeholders

本节主要关注的是利益攸关者的结构信息。

### Ontology formalizing scenarios of traceability management

在已知模型、过程和利益攸关者信息后，本节关注可追溯性管理。包括四个部分：OSLC模型间追溯管理、OSLC模型与过程模型间追溯管理、OSLC模型与利益攸关者间追溯管理、过程模型与利益攸关者间追溯管理。

## Case study

### Scenario definition

![Fig. 5. ACC system design process.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082702.png)

ACC是一种基于车辆的外部行驶环境，如前方车辆的速度和距离，来适应常规控制的避碰系统。为了验证所提出的CT本体的完整性，以ACC系统设计为例对MBSE工具链原型进行了评估。案例如图5所示。

### Models and data supporting ACC system design

介绍了DSM的元模型组成和DSM模型在MetaGraph软件中的对应效果。建模方法用的是OOSEM[[26]](#26)。用CarSim做了一个Simulink ACC FMU模型。OSCL服务可以触发Simulink运行并获取Simulink中的数据。

### OSMS supporting traceability construction and analysis

![Fig. 10. OSMS supporting traceability management.](https://intellink-01.oss-cn-beijing.aliyuncs.com/pictures/24082703.png)

图10展示了可追溯管理软件OSMS的架构。

- 10(a)中：利益攸关者可以通过OSLC服务绑定到WPMS的工作任务来操纵设计模型。例如，WPMS中的涉众需求定义工作任务链接到在Excel中查询需求项的相关OSLC服务。在WPMS中，需求工程师操纵OSLC服务来修改Excel表格中的涉众需求，例如将最小安全驾驶距离从35米更改为40米。
- 在图10(b)所示的服务管理模块中，所有OSLC服务都集成到OSMS中以构建可追溯性。使用递归算法来发现并遍历所有OSLC服务，直到OSLC资源不再链接到另一个OSLC服务URI。
- 在图10(c)中，在可追溯性构建模块中建立了OSLC服务与过程模型之间的可追溯性。
- 在图10(d)中，使用可追溯性分析模块分析OSLC服务与流程之间的可追溯性。
- 推理结果如10(e)：
- - 场景Pattern1对应于基于创建OSLC服务的工具名称查询单个OSLC服务的领域问题①。推理模式是具有给定工具名称Simulink的OSLC服务。推理结果显示所有的OSLC服务都具有可追溯性，并且是由Simulink创建的，例如Simulink模型中的子系统ACCV2_Motor_Left和ACCV2_PIDController。
- - 场景Pattern2对应于基于名称查询单个OSLC服务的领域问题②。推理模式是具有给定名称或ID REQ-REA-1的OSLC服务。推理结果显示了需求表中利益相关者需求的Excel行OSLC服务。
- - 场景模式3对应于基于相应工作任务的顺序查询任何直接相关的OSLC服务的领域问题③。推理模式由两个相关的OSLC服务和开发过程中的两个相关工作任务组成。其中一个OSLC服务有一个给定的ID UseCase_6460，它对应于在高速公路上驾驶时提供帮助的用例。推理结果表明，在此用例的基础上，设计了四个有效性度量的对象实例，如DSM模型中的Cost。
- - 场景模式4对应于领域问题④，为案例研究中的特定模型元素或数据查询任何相关的OSLC服务。推理模式指定了一个链，其中包括两个OSLC服务作为该链的源和目标。
- - 场景模式5对应于基于名称查询任何直接相关的OSLC服务的领域问题⑤。推理模式由两个相关的OSLC服务组成，其中一个具有需求REQ-REA-1的给定ID。推理结果表明，该需求与DSM模型中的需求块Requirement_Diagram_1bae5_object_Object_Requirement_ee86相关。需求块有一个本地标签需求和属性文本，值为在驾驶车辆时通过提供自动驾驶辅助来增强驾驶。

### Unified authentication system supporting authority management

做了一个用户认证系统。

## Discussion and evaluation

### Qualitative evaluation

通过OSLC服务，WPMS支持过程和模型中任务之间的可跟踪性管理。OSMS支持模型之间的可追溯性构建、分析和可视化。统一的认证系统管理模型和涉众之间的可追溯性。通过CT本体，形式化了与MBSE工具链相关的模型、开发过程和涉众之间的拓扑关系，提高了MBSE工具链开发的效率和可追溯性管理场景下的语义互操作性。
六个定性分析的问题：

- 提高跟踪环节生成的自动化水平
- 支持跟踪链接的存储
- 支持可视化(表示)跟踪链接
- 支持创建、删除、修改
- 促进可追溯性信息的交换
- 对获得的可追溯性信息进行分析

### Quantitative evaluation

以ACC系统设计为例说明模型数量。包括模型互操作性、推理分析可追溯性的能力和利益攸关者之间的交互等级。

### Scalability discussion

内部效度和外部效度是案例研究方法的两个重要方面[[73]](#73)。案例研究的内部有效性是指由于在可追溯性管理场景中使用所提出的工具链和CT本体而提高的效率；案例研究的外部有效性是指所提出的工具链和CT本体可以在其他可追溯性管理场景中复制的程度，代表了该案例研究的可扩展性。

从工具链的角度来看，尽管航空航天领域复杂系统的设计方法、设计过程和设计目标可能与自适应巡航控制系统不同，但所使用的设计工具是相似的。在提出的工具链原型中，采用的建模工具MetaGraph可用于开发DSM模型。这些DSM模型可以用来表示SysML和其他建模语言所需的模型信息，并且可以进一步转换为不同建模工具所需的专有格式(例如Matlab中的.m脚本)。因此，我们可以推断，本文案例研究中的可追溯性管理场景可以复制到航空航天领域的其他可追溯性管理场景中。

从本体设计的角度来看，CT本体的设计目的是形式化可追溯性管理场景中模型、开发过程、涉众及其相互关系的概念。该本体提供了一个独立于领域的表示，促进了可追溯性管理场景中相关概念的统一表示，从而确保设计过程中涉及的所有涉众共享对这些场景的共同理解。

### Limitations

四个局限性：

- 未考虑工作任务动态变化对可追溯性管理场景的影响。因此，未来将开发一种动态编排方法来支持部署在WPMS中的工作任务的重新配置。
- 设计的CT本体受限于本研究开发的MBSE工具链。不包括可追溯性管理的其他场景，例如集成CAD模型信息或物联网(IoT)数据的场景。
- 本研究通过一个ACC系统设计案例验证了CT本体的完备性。CT本体功能的形式化验证将在未来使用OWL进行开发。
- 还有其他可行的技术解决方案可以用于实现CT本体。由于KARMA语言与特定于领域的建模语言具有很强的语义兼容性，一个有希望的途径可能涉及探索特定于领域的建模语言(如SysML、UPDM或eastern-adl)与CT本体的潜在集成。

## Conclusions

> For facilitating the industrial information integration process to support IIIE, the traceability management in MBSE implementation should be first considered. In this paper, we propose a CT ontology for traceability management in an MBSE toolchain that is developed based on an MBSE toolchain prototype and formalizes models, stakeholders, and development processes, as well as traceability management scenarios. Through a case study of an ACC system, the completeness of the CT ontology is evaluated by qualitative and quantitative analyses of the proposed MBSE toolchain. The results demonstrate that the CT ontology helps stakeholders manage and analyze traceability between heterogeneous models in the development process. To improve the efficiency of information integration, more discipline information can be considered and integrated into the proposed CT ontology in the future. Besides, we intend to extend the ontology of the CT to support other complex scenarios during MBSE implementation, such as automatic change management and consistency management for MBSE models.

`个人总结`

本篇文章提出了一套工具链以实现模型的可追溯性管理（增删改查），模型是MetaGraph搭建的DSM，仿真用的是Simulink，两者独立创建并通过算法实现关联，通过一套图数据库进行存储管理。通过图4的部分能了解KARMA的工作机制。对OSLC的工作机理不熟悉。DSM和Simulink中间用的FMU链接，FMU用CarSim生成，其设计和DSM没有之间关联。追溯性识别用的是Pattern匹配。写作方面比较规范，可以借鉴。工具链不开源。

`参考文献`

<a id="10">[10]</a>V. Singh, K.E. Willcox, Engineering design with digital thread, AIAA J. 56 (11) (2018) 4515–4528.
<a id="19">[19]</a>S. Wu, J. Lu, Z. Hu, P. Yang, G. Wang, D. Kiritsis, Cognitive thread supports system of systems for complex system development, in: 2021 16th International Conference of System of Systems Engineering, SoSE, IEEE, 2021, pp. 82–87.
<a id="20">[20]</a>J. Lu, J. Wang, D. Chen, J. Wang, M. Törngren, A service-oriented tool-chain for model-based systems engineering of aero-engines, IEEE Access 6 (2018) 50443–50458
<a id="30">[30]</a>IEEE, IEEE standard glossary of software engineering terminology, IEEE Std 610.12-1990, 1990, pp. 1–84, http://dx.doi.org/10.1109/IEEESTD.1990.101064.
<a id="32">[32]</a>I.C. on Systems Engineering (Ed.), INCOSE Systems Engineering Handbook, vol.2.0, 2000.
<a id="41">[41]</a>J. Guo, G. Wang, J. Lu, J. Ma, M. Törngren, General modeling language supporting model transformations of MBSE (part 2), in: INCOSE International Symposium, vol. 30, (1) Wiley Online Library, 2020, pp. 1460–1473.
<a id="42">[42]</a>M. Kharrat, O. Penas, R. Plateaux, J.-Y. Choley, H. Trabelsi, J. Louati, M. Haddar, Integration of electromagnetic constraints as of the conceptual design through an MBSE approach, IEEE Syst. J. 15 (1) (2020) 747–758.
<a id="58">[58]</a>D.A. Kinard, F-35 digital thread and advanced manufacturing, in: 2018 Aviat. Technol. Integr. Oper. Conf, From Concept to Cockpit, The F-35 Lightning II, 2018, pp. 1–19, http://dx.doi.org/10.2514/6.2018-3369.
<a id="59">[59]</a>M.A. Bone, M.R. Blackburn, D.H. Rhodes, D.N. Cohen, J.A. Guerrero, Transforming systems engineering through digital engineering, J. Def. Model. Simul. 16 (4) (2019) 339–355.
<a id="60">[60]</a>T.D. West, M. Blackburn, Is digital thread/digital twin affordable? A systemic assessment of the cost of DoD’s latest manhattan project, Procedia Comput. Sci. 114 (2017) 47–56.
<a id="51">[51]</a>J. Lu, G. Wang, M. Törngren, Design ontology in a case study for cosimulation in a model-based systems engineering tool-chain, IEEE Syst. J. 14 (1) (2019) 1297–1308
<a id="68">[68]</a>J. Lu, D. Chen, J. Wang, M. Torngren, Towards a service-oriented framework for MBSE tool-chain development, in: 2018 13th Annual Conference on System of Systems Engineering, SoSE, IEEE, 2018, pp. 568–575, http://dx.doi.org/10.1109/SYSOSE.2018.8428746.
<a id="22">[22]</a>D. Johnson, S. Speicher, Open services for lifecycle collaboration-core specification version 2.0, 2013, http://open-services.net/.
<a id="71">[71]</a>D.L. McGuinness, F.v. Harmelen, OWL web ontology language overview, http: //www.w3.org/TR/owl-features/.
<a id="26">[26]</a>H. Lykins, S. Friedenthal, A. Meilich, 4.4.4 Adapting UML for an object oriented systems engineering method (OOSEM), in: INCOSE International Symposium, vol.10, (1) Wiley Online Library, 2000, pp. 490–497.
<a id="73">[73]</a>N. Salkind, Internal and external validity, SAGE Dict. Quant. Manag. Res. (2011) 148–149.
]]></content>
      <categories>
        <category>Academic Papers</category>
        <category>Journal</category>
        <category>JII</category>
        <category>2024</category>
      </categories>
      <tags>
        <tag>MBSE</tag>
        <tag>Traceability management</tag>
        <tag>Cognitive thread</tag>
        <tag>Digital thread</tag>
        <tag>OSLC</tag>
        <tag>MetaGraph</tag>
        <tag>KARMA</tag>
        <tag>Simulink</tag>
      </tags>
  </entry>
</search>
